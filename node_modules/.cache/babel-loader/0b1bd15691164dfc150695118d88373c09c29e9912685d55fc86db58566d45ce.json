{"ast":null,"code":"import { actionTypes } from '../actions/actionTypes';\nfunction exerciseReducer(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      console.log('ADD_EXERCISE action:', action);\n      const {\n        workoutId,\n        exercise\n      } = action.payload;\n\n      // Ensure we are modifying the correct workout\n      if (workoutId === state.activeWorkout) {\n        return {\n          ...state,\n          workouts: {\n            ...state.workouts,\n            [workoutId]: {\n              ...state.workouts[workoutId],\n              exercises: [...state.workouts[workoutId].exercises, exercise.id]\n            }\n          }\n        };\n      } else {\n        console.error('activeWorkout is undefined or workoutId does not match');\n      }\n      return state;\n    case actionTypes.UPDATE_EXERCISE:\n      console.log('UPDATE_EXERCISE action:', action);\n      const {\n        id,\n        updates\n      } = action.payload;\n      const workoutContainingExercise = Object.values(state.workouts).find(workout => workout.exercises.includes(id));\n      if (workoutContainingExercise) {\n        return {\n          ...state,\n          workouts: {\n            ...state.workouts,\n            [workoutContainingExercise.id]: {\n              ...workoutContainingExercise,\n              exercises: workoutContainingExercise.exercises.map(ex => ex.id === id ? {\n                ...ex,\n                ...updates\n              } : ex)\n            }\n          }\n        };\n      } else {\n        console.error('Exercise id does not exist in state:', id);\n      }\n      return state;\n    case actionTypes.DELETE_EXERCISE:\n      console.log('DELETE_EXERCISE action:', action);\n      const newState = {\n        ...state\n      };\n      delete newState[action.payload];\n      return newState;\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["actionTypes","exerciseReducer","state","action","type","ADD_EXERCISE","console","log","workoutId","exercise","payload","activeWorkout","workouts","exercises","id","error","UPDATE_EXERCISE","updates","workoutContainingExercise","Object","values","find","workout","includes","map","ex","DELETE_EXERCISE","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["import { actionTypes } from '../actions/actionTypes';\n\nfunction exerciseReducer(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      console.log('ADD_EXERCISE action:', action);\n      const { workoutId, exercise } = action.payload;\n\n      // Ensure we are modifying the correct workout\n      if (workoutId === state.activeWorkout) {\n        return {\n          ...state,\n          workouts: {\n            ...state.workouts,\n            [workoutId]: {\n              ...state.workouts[workoutId],\n              exercises: [...state.workouts[workoutId].exercises, exercise.id]\n            }\n          }\n        };\n      } else {\n        console.error('activeWorkout is undefined or workoutId does not match');\n      }\n      return state;\n\n    case actionTypes.UPDATE_EXERCISE:\n      console.log('UPDATE_EXERCISE action:', action);\n      const { id, updates } = action.payload;\n      const workoutContainingExercise = Object.values(state.workouts).find(\n        workout => workout.exercises.includes(id)\n      );\n\n      if (workoutContainingExercise) {\n        return {\n          ...state,\n          workouts: {\n            ...state.workouts,\n            [workoutContainingExercise.id]: {\n              ...workoutContainingExercise,\n              exercises: workoutContainingExercise.exercises.map(ex =>\n                ex.id === id ? { ...ex, ...updates } : ex\n              )\n            }\n          }\n        };\n      } else {\n        console.error('Exercise id does not exist in state:', id);\n      }\n      return state;\n\n    case actionTypes.DELETE_EXERCISE:\n      console.log('DELETE_EXERCISE action:', action);\n      const newState = { ...state };\n      delete newState[action.payload];\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AAEpD,SAASC,eAAeA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,EAAE;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKJ,WAAW,CAACK,YAAY;MAC3BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,MAAM,CAAC;MAC3C,MAAM;QAAEK,SAAS;QAAEC;MAAS,CAAC,GAAGN,MAAM,CAACO,OAAO;;MAE9C;MACA,IAAIF,SAAS,KAAKN,KAAK,CAACS,aAAa,EAAE;QACrC,OAAO;UACL,GAAGT,KAAK;UACRU,QAAQ,EAAE;YACR,GAAGV,KAAK,CAACU,QAAQ;YACjB,CAACJ,SAAS,GAAG;cACX,GAAGN,KAAK,CAACU,QAAQ,CAACJ,SAAS,CAAC;cAC5BK,SAAS,EAAE,CAAC,GAAGX,KAAK,CAACU,QAAQ,CAACJ,SAAS,CAAC,CAACK,SAAS,EAAEJ,QAAQ,CAACK,EAAE;YACjE;UACF;QACF,CAAC;MACH,CAAC,MAAM;QACLR,OAAO,CAACS,KAAK,CAAC,wDAAwD,CAAC;MACzE;MACA,OAAOb,KAAK;IAEd,KAAKF,WAAW,CAACgB,eAAe;MAC9BV,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEJ,MAAM,CAAC;MAC9C,MAAM;QAAEW,EAAE;QAAEG;MAAQ,CAAC,GAAGd,MAAM,CAACO,OAAO;MACtC,MAAMQ,yBAAyB,GAAGC,MAAM,CAACC,MAAM,CAAClB,KAAK,CAACU,QAAQ,CAAC,CAACS,IAAI,CAClEC,OAAO,IAAIA,OAAO,CAACT,SAAS,CAACU,QAAQ,CAACT,EAAE,CAC1C,CAAC;MAED,IAAII,yBAAyB,EAAE;QAC7B,OAAO;UACL,GAAGhB,KAAK;UACRU,QAAQ,EAAE;YACR,GAAGV,KAAK,CAACU,QAAQ;YACjB,CAACM,yBAAyB,CAACJ,EAAE,GAAG;cAC9B,GAAGI,yBAAyB;cAC5BL,SAAS,EAAEK,yBAAyB,CAACL,SAAS,CAACW,GAAG,CAACC,EAAE,IACnDA,EAAE,CAACX,EAAE,KAAKA,EAAE,GAAG;gBAAE,GAAGW,EAAE;gBAAE,GAAGR;cAAQ,CAAC,GAAGQ,EACzC;YACF;UACF;QACF,CAAC;MACH,CAAC,MAAM;QACLnB,OAAO,CAACS,KAAK,CAAC,sCAAsC,EAAED,EAAE,CAAC;MAC3D;MACA,OAAOZ,KAAK;IAEd,KAAKF,WAAW,CAAC0B,eAAe;MAC9BpB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEJ,MAAM,CAAC;MAC9C,MAAMwB,QAAQ,GAAG;QAAE,GAAGzB;MAAM,CAAC;MAC7B,OAAOyB,QAAQ,CAACxB,MAAM,CAACO,OAAO,CAAC;MAC/B,OAAOiB,QAAQ;IAEjB;MACE,OAAOzB,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}