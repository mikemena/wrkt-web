{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\nimport exerciseUtils from '../utils/exercise.js';\nimport { standardizeWorkout } from '../utils/standardizeWorkout';\nfunction workoutReducer(state = initialState.workouts, action) {\n  console.log('Action Type:', action.type);\n  console.log('State Before:', state);\n  console.log('Action Payload:', action.payload);\n  switch (action.type) {\n    case actionTypes.ADD_WORKOUT:\n      console.log('Action Type: ADD_WORKOUT');\n      console.log('State Before:', state);\n      console.log('Action Payload:', action.payload);\n      const newWorkout = standardizeWorkout(action.payload);\n      if (!newWorkout) return state;\n      console.log('Adding workout in reducer:', newWorkout);\n      if (!newWorkout) {\n        console.error('Failed to standardize workout:', action.payload);\n        return state;\n      }\n      return {\n        ...state,\n        [newWorkout.id]: newWorkout\n      };\n    case actionTypes.UPDATE_WORKOUT:\n      const updatedWorkout = standardizeWorkout(action.payload);\n      if (!updatedWorkout) return state;\n      console.log('Updating workout in reducer:', updatedWorkout);\n      return {\n        ...state,\n        [updatedWorkout.id]: updatedWorkout\n      };\n    case actionTypes.ADD_EXERCISE:\n      const {\n        workoutId: workoutIdAddEx,\n        exercises\n      } = action.payload;\n      const existingExercises = state[workoutIdAddEx].exercises || [];\n      const standardizedExercise = exerciseUtils.standardizeExercise(exercises);\n      return {\n        ...state,\n        [workoutIdAddEx]: {\n          ...state[workoutIdAddEx],\n          exercises: [...existingExercises, ...exercises.map(standardizedExercise)]\n        }\n      };\n    case actionTypes.UPDATE_EXERCISE:\n      const {\n        workoutId: wId4,\n        exercise\n      } = action.payload;\n      const workout4 = state[wId4];\n      if (!workout4) return state;\n      const updatedExercises4 = workout4.exercises.map(ex => ex.id === exercise.id ? {\n        ...ex,\n        ...exercise\n      } : ex);\n      return {\n        ...state,\n        [wId4]: {\n          ...workout4,\n          exercises: updatedExercises4\n        }\n      };\n    case actionTypes.DELETE_EXERCISE:\n      const {\n        workoutId: wId5,\n        exerciseId: exId5\n      } = action.payload;\n      const workout5 = state[wId5];\n      if (!workout5) return state;\n      const remainingExercises = workout5.exercises.filter(ex => ex.id !== exId5);\n      return {\n        ...state,\n        [wId5]: {\n          ...workout5,\n          exercises: remainingExercises\n        }\n      };\n    case actionTypes.ADD_SET:\n      const {\n        workoutId: workoutIdAddSet,\n        exerciseId,\n        weight,\n        reps\n      } = action.payload;\n      const workout = state[workoutIdAddSet];\n      if (!workout) return state;\n      const updatedExercises = workout.exercises.map(exercise => {\n        if (getExerciseId(exercise) === exerciseId) {\n          return {\n            ...exercise,\n            sets: [...exercise.sets, {\n              id: uuidv4(),\n              weight,\n              reps,\n              order: exercise.sets.length + 1\n            }]\n          };\n        }\n        return exercise;\n      });\n      return {\n        ...state,\n        [workoutIdAddSet]: {\n          ...workout,\n          exercises: updatedExercises\n        }\n      };\n    case actionTypes.UPDATE_SET:\n      const {\n        workoutId: wId2,\n        exerciseId: exId,\n        updatedSet\n      } = action.payload;\n      const workout2 = state[wId2];\n      if (!workout2) return state;\n      const updatedExercises2 = workout2.exercises.map(exercise => {\n        if (exercise.id === exId) {\n          return {\n            ...exercise,\n            sets: exercise.sets.map(set => set.id === updatedSet.id ? {\n              ...set,\n              ...updatedSet\n            } : set)\n          };\n        }\n        return exercise;\n      });\n      return {\n        ...state,\n        [wId2]: {\n          ...workout2,\n          exercises: updatedExercises2\n        }\n      };\n    case actionTypes.DELETE_SET:\n      const {\n        workoutId: wId3,\n        exerciseId: exId2,\n        setId\n      } = action.payload;\n      const workout3 = state[wId3];\n      if (!workout3) return state;\n      const updatedExercises3 = workout3.exercises.map(exercise => {\n        if (exercise.id === exId2) {\n          const updatedSets = exercise.sets.filter(set => set.id !== setId).map((set, index) => ({\n            ...set,\n            order: index + 1\n          }));\n          return {\n            ...exercise,\n            sets: updatedSets\n          };\n        }\n        return exercise;\n      });\n      return {\n        ...state,\n        [wId3]: {\n          ...workout3,\n          exercises: updatedExercises3\n        }\n      };\n    case actionTypes.DELETE_WORKOUT:\n      {\n        if (!action.payload) {\n          console.error('Invalid payload for DELETE_WORKOUT', action.payload);\n          return state;\n        }\n        const {\n          [action.payload]: deletedWorkout,\n          ...remainingWorkouts\n        } = state;\n        const reorderedWorkouts = Object.values(remainingWorkouts).sort((a, b) => a.order - b.order).map((workout, index) => ({\n          ...workout,\n          order: index + 1\n        })).reduce((acc, workout) => {\n          acc[workout.id] = workout;\n          return acc;\n        }, {});\n        const newState = {\n          ...reorderedWorkouts\n        };\n        return newState;\n      }\n    default:\n      return state;\n  }\n}\nexport { workoutReducer };","map":{"version":3,"names":["v4","uuidv4","actionTypes","initialState","exerciseUtils","standardizeWorkout","workoutReducer","state","workouts","action","console","log","type","payload","ADD_WORKOUT","newWorkout","error","id","UPDATE_WORKOUT","updatedWorkout","ADD_EXERCISE","workoutId","workoutIdAddEx","exercises","existingExercises","standardizedExercise","standardizeExercise","map","UPDATE_EXERCISE","wId4","exercise","workout4","updatedExercises4","ex","DELETE_EXERCISE","wId5","exerciseId","exId5","workout5","remainingExercises","filter","ADD_SET","workoutIdAddSet","weight","reps","workout","updatedExercises","getExerciseId","sets","order","length","UPDATE_SET","wId2","exId","updatedSet","workout2","updatedExercises2","set","DELETE_SET","wId3","exId2","setId","workout3","updatedExercises3","updatedSets","index","DELETE_WORKOUT","deletedWorkout","remainingWorkouts","reorderedWorkouts","Object","values","sort","a","b","reduce","acc","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/workoutReducer.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\nimport exerciseUtils from '../utils/exercise.js';\nimport { standardizeWorkout } from '../utils/standardizeWorkout';\n\nfunction workoutReducer(state = initialState.workouts, action) {\n  console.log('Action Type:', action.type);\n  console.log('State Before:', state);\n  console.log('Action Payload:', action.payload);\n\n  switch (action.type) {\n    case actionTypes.ADD_WORKOUT:\n      console.log('Action Type: ADD_WORKOUT');\n      console.log('State Before:', state);\n      console.log('Action Payload:', action.payload);\n\n      const newWorkout = standardizeWorkout(action.payload);\n      if (!newWorkout) return state;\n      console.log('Adding workout in reducer:', newWorkout);\n      if (!newWorkout) {\n        console.error('Failed to standardize workout:', action.payload);\n        return state;\n      }\n      return {\n        ...state,\n        [newWorkout.id]: newWorkout\n      };\n\n    case actionTypes.UPDATE_WORKOUT:\n      const updatedWorkout = standardizeWorkout(action.payload);\n      if (!updatedWorkout) return state;\n      console.log('Updating workout in reducer:', updatedWorkout);\n      return {\n        ...state,\n        [updatedWorkout.id]: updatedWorkout\n      };\n\n    case actionTypes.ADD_EXERCISE:\n      const { workoutId: workoutIdAddEx, exercises } = action.payload;\n      const existingExercises = state[workoutIdAddEx].exercises || [];\n\n      const standardizedExercise = exerciseUtils.standardizeExercise(exercises);\n\n      return {\n        ...state,\n        [workoutIdAddEx]: {\n          ...state[workoutIdAddEx],\n          exercises: [\n            ...existingExercises,\n            ...exercises.map(standardizedExercise)\n          ]\n        }\n      };\n\n    case actionTypes.UPDATE_EXERCISE:\n      const { workoutId: wId4, exercise } = action.payload;\n      const workout4 = state[wId4];\n      if (!workout4) return state;\n\n      const updatedExercises4 = workout4.exercises.map(ex =>\n        ex.id === exercise.id ? { ...ex, ...exercise } : ex\n      );\n\n      return {\n        ...state,\n        [wId4]: {\n          ...workout4,\n          exercises: updatedExercises4\n        }\n      };\n\n    case actionTypes.DELETE_EXERCISE:\n      const { workoutId: wId5, exerciseId: exId5 } = action.payload;\n      const workout5 = state[wId5];\n      if (!workout5) return state;\n\n      const remainingExercises = workout5.exercises.filter(\n        ex => ex.id !== exId5\n      );\n\n      return {\n        ...state,\n        [wId5]: {\n          ...workout5,\n          exercises: remainingExercises\n        }\n      };\n\n    case actionTypes.ADD_SET:\n      const {\n        workoutId: workoutIdAddSet,\n        exerciseId,\n        weight,\n        reps\n      } = action.payload;\n      const workout = state[workoutIdAddSet];\n      if (!workout) return state;\n\n      const updatedExercises = workout.exercises.map(exercise => {\n        if (getExerciseId(exercise) === exerciseId) {\n          return {\n            ...exercise,\n            sets: [\n              ...exercise.sets,\n              { id: uuidv4(), weight, reps, order: exercise.sets.length + 1 }\n            ]\n          };\n        }\n        return exercise;\n      });\n\n      return {\n        ...state,\n        [workoutIdAddSet]: {\n          ...workout,\n          exercises: updatedExercises\n        }\n      };\n\n    case actionTypes.UPDATE_SET:\n      const { workoutId: wId2, exerciseId: exId, updatedSet } = action.payload;\n      const workout2 = state[wId2];\n      if (!workout2) return state;\n\n      const updatedExercises2 = workout2.exercises.map(exercise => {\n        if (exercise.id === exId) {\n          return {\n            ...exercise,\n            sets: exercise.sets.map(set =>\n              set.id === updatedSet.id ? { ...set, ...updatedSet } : set\n            )\n          };\n        }\n        return exercise;\n      });\n\n      return {\n        ...state,\n        [wId2]: {\n          ...workout2,\n          exercises: updatedExercises2\n        }\n      };\n\n    case actionTypes.DELETE_SET:\n      const { workoutId: wId3, exerciseId: exId2, setId } = action.payload;\n      const workout3 = state[wId3];\n      if (!workout3) return state;\n\n      const updatedExercises3 = workout3.exercises.map(exercise => {\n        if (exercise.id === exId2) {\n          const updatedSets = exercise.sets\n            .filter(set => set.id !== setId)\n            .map((set, index) => ({ ...set, order: index + 1 }));\n          return {\n            ...exercise,\n            sets: updatedSets\n          };\n        }\n        return exercise;\n      });\n\n      return {\n        ...state,\n        [wId3]: {\n          ...workout3,\n          exercises: updatedExercises3\n        }\n      };\n\n    case actionTypes.DELETE_WORKOUT: {\n      if (!action.payload) {\n        console.error('Invalid payload for DELETE_WORKOUT', action.payload);\n        return state;\n      }\n\n      const { [action.payload]: deletedWorkout, ...remainingWorkouts } = state;\n      const reorderedWorkouts = Object.values(remainingWorkouts)\n        .sort((a, b) => a.order - b.order)\n        .map((workout, index) => ({\n          ...workout,\n          order: index + 1\n        }))\n        .reduce((acc, workout) => {\n          acc[workout.id] = workout;\n          return acc;\n        }, {});\n\n      const newState = {\n        ...reorderedWorkouts\n      };\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { workoutReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}