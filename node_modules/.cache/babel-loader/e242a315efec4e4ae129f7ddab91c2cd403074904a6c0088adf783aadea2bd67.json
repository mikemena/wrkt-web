{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/Inputs/Dropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Dropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = ({\n  label,\n  options,\n  fetchUrl,\n  onSelect\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [dynamicOptions, setDynamicOptions] = useState(options);\n  const [selectedOption, setSelectedOption] = useState(options[0] || '');\n  useEffect(() => {\n    if (!fetchUrl) return;\n\n    // Fetch options from API\n    fetch(fetchUrl).then(response => response.json()).then(data => {\n      const fetchedOptions = data.map(item => item.name); // Customize this as needed\n      setDynamicOptions(fetchedOptions);\n      if (!selectedOption && fetchedOptions.length > 0) {\n        setSelectedOption(fetchedOptions[0]);\n      }\n    }).catch(error => console.error('Failed to fetch options:', error));\n  }, [fetchUrl]);\n  const handleSelectOption = option => {\n    setSelectedOption(option);\n    setIsOpen(false);\n    onSelect(option);\n  };\n\n  // Use dynamicOptions if fetchUrl is provided, otherwise use static options\n  const finalOptions = fetchUrl ? dynamicOptions : options;\n\n  // Generate a unique ID for the dropdown to link the label and div\n  const dropdownId = `dropdown-${label.replace(/\\s+/g, '-').toLowerCase()}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: dropdownId,\n      className: \"dropdown-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-header\",\n      id: dropdownId,\n      onClick: () => setIsOpen(!isOpen),\n      tabIndex: \"0\" // Make the div focusable\n      ,\n      role: \"button\" // ARIA role for better accessibility\n      ,\n      \"aria-haspopup\": \"listbox\" // Indicates that the button has a popup listbox\n      ,\n      \"aria-expanded\": isOpen // Indicates if the listbox is currently expanded\n      ,\n      children: [selectedOption, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dropdown-arrow\",\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-list\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dropdown-item\",\n        onClick: () => handleSelectOption(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"J+CBX0uyhFIvLi4+Ag8r7kE7fOs=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dropdown","label","options","fetchUrl","onSelect","_s","isOpen","setIsOpen","dynamicOptions","setDynamicOptions","selectedOption","setSelectedOption","fetch","then","response","json","data","fetchedOptions","map","item","name","length","catch","error","console","handleSelectOption","option","finalOptions","dropdownId","replace","toLowerCase","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","tabIndex","role","index","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/Inputs/Dropdown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Dropdown.css';\n\nconst Dropdown = ({ label, options, fetchUrl, onSelect }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [dynamicOptions, setDynamicOptions] = useState(options);\n  const [selectedOption, setSelectedOption] = useState(options[0] || '');\n\n  useEffect(() => {\n    if (!fetchUrl) return;\n\n    // Fetch options from API\n    fetch(fetchUrl)\n      .then(response => response.json())\n      .then(data => {\n        const fetchedOptions = data.map(item => item.name); // Customize this as needed\n        setDynamicOptions(fetchedOptions);\n        if (!selectedOption && fetchedOptions.length > 0) {\n          setSelectedOption(fetchedOptions[0]);\n        }\n      })\n      .catch(error => console.error('Failed to fetch options:', error));\n  }, [fetchUrl]);\n\n  const handleSelectOption = option => {\n    setSelectedOption(option);\n    setIsOpen(false);\n    onSelect(option);\n  };\n\n  // Use dynamicOptions if fetchUrl is provided, otherwise use static options\n  const finalOptions = fetchUrl ? dynamicOptions : options;\n\n  // Generate a unique ID for the dropdown to link the label and div\n  const dropdownId = `dropdown-${label.replace(/\\s+/g, '-').toLowerCase()}`;\n\n  return (\n    <div className='dropdown-container'>\n      {label && (\n        <label htmlFor={dropdownId} className='dropdown-label'>\n          {label}\n        </label>\n      )}\n      <div\n        className='dropdown-header'\n        id={dropdownId}\n        onClick={() => setIsOpen(!isOpen)}\n        tabIndex='0' // Make the div focusable\n        role='button' // ARIA role for better accessibility\n        aria-haspopup='listbox' // Indicates that the button has a popup listbox\n        aria-expanded={isOpen} // Indicates if the listbox is currently expanded\n      >\n        {selectedOption} <span className='dropdown-arrow'>&#9660;</span>\n      </div>\n      {isOpen && (\n        <ul className='dropdown-list'>\n          {options.map((option, index) => (\n            <li\n              key={index}\n              className='dropdown-item'\n              onClick={() => handleSelectOption(option)}\n            >\n              {option}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAACM,OAAO,CAAC;EAC7D,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAACM,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EAEtEL,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,QAAQ,EAAE;;IAEf;IACAS,KAAK,CAACT,QAAQ,CAAC,CACZU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,cAAc,GAAGD,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACpDX,iBAAiB,CAACQ,cAAc,CAAC;MACjC,IAAI,CAACP,cAAc,IAAIO,cAAc,CAACI,MAAM,GAAG,CAAC,EAAE;QAChDV,iBAAiB,CAACM,cAAc,CAAC,CAAC,CAAC,CAAC;MACtC;IACF,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,CAACpB,QAAQ,CAAC,CAAC;EAEd,MAAMsB,kBAAkB,GAAGC,MAAM,IAAI;IACnCf,iBAAiB,CAACe,MAAM,CAAC;IACzBnB,SAAS,CAAC,KAAK,CAAC;IAChBH,QAAQ,CAACsB,MAAM,CAAC;EAClB,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGxB,QAAQ,GAAGK,cAAc,GAAGN,OAAO;;EAExD;EACA,MAAM0B,UAAU,GAAI,YAAW3B,KAAK,CAAC4B,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAE,EAAC;EAEzE,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,GAChC/B,KAAK,iBACJF,OAAA;MAAOkC,OAAO,EAAEL,UAAW;MAACG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EACnD/B;IAAK;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eACDtC,OAAA;MACEgC,SAAS,EAAC,iBAAiB;MAC3BO,EAAE,EAAEV,UAAW;MACfW,OAAO,EAAEA,CAAA,KAAMhC,SAAS,CAAC,CAACD,MAAM,CAAE;MAClCkC,QAAQ,EAAC,GAAG,CAAC;MAAA;MACbC,IAAI,EAAC,QAAQ,CAAC;MAAA;MACd,iBAAc,SAAS,CAAC;MAAA;MACxB,iBAAenC,MAAO,CAAC;MAAA;MAAA0B,QAAA,GAEtBtB,cAAc,EAAC,GAAC,eAAAX,OAAA;QAAMgC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,EACL/B,MAAM,iBACLP,OAAA;MAAIgC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1B9B,OAAO,CAACgB,GAAG,CAAC,CAACQ,MAAM,EAAEgB,KAAK,kBACzB3C,OAAA;QAEEgC,SAAS,EAAC,eAAe;QACzBQ,OAAO,EAAEA,CAAA,KAAMd,kBAAkB,CAACC,MAAM,CAAE;QAAAM,QAAA,EAEzCN;MAAM,GAJFgB,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKR,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChC,EAAA,CAlEIL,QAAQ;AAAA2C,EAAA,GAAR3C,QAAQ;AAoEd,eAAeA,QAAQ;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}