{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/Inputs/Toggle.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTheme } from '../../contexts/themeContext';\nimport './Toggle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theme-toggle\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"theme-toggle-checkbox\",\n      type: \"checkbox\",\n      checked: theme === 'dark',\n      onChange: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"theme-toggle-checkbox\",\n      className: \"toggle-label\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle-ball\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"Q4eAjrIZ0CuRuhycs6byifK2KBk=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useTheme","jsxDEV","_jsxDEV","ThemeToggle","_s","theme","toggleTheme","className","children","id","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/Inputs/Toggle.js"],"sourcesContent":["import React from 'react';\nimport { useTheme } from '../../contexts/themeContext';\nimport './Toggle.css';\n\nconst ThemeToggle = () => {\n  const { theme, toggleTheme } = useTheme();\n\n  return (\n    <div className='theme-toggle'>\n      <input\n        id='theme-toggle-checkbox'\n        type='checkbox'\n        checked={theme === 'dark'}\n        onChange={toggleTheme}\n      />\n      <label htmlFor='theme-toggle-checkbox' className='toggle-label'>\n        <span className='toggle-ball'></span>\n      </label>\n    </div>\n  );\n};\n\nexport default ThemeToggle;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAEzC,oBACEE,OAAA;IAAKK,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BN,OAAA;MACEO,EAAE,EAAC,uBAAuB;MAC1BC,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEN,KAAK,KAAK,MAAO;MAC1BO,QAAQ,EAAEN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFd,OAAA;MAAOe,OAAO,EAAC,uBAAuB;MAACV,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC7DN,OAAA;QAAMK,SAAS,EAAC;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACZ,EAAA,CAhBID,WAAW;EAAA,QACgBH,QAAQ;AAAA;AAAAkB,EAAA,GADnCf,WAAW;AAkBjB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}