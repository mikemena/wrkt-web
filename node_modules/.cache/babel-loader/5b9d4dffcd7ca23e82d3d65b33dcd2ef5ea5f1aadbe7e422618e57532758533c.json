{"ast":null,"code":"const initialState = {\n  programs: {},\n  currentProgram: null // Add this to hold the program being edited\n  // other initial state properties\n};\nfunction programReducer(state, action) {\n  switch (action.type) {\n    case 'SET_PROGRAM':\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [action.payload.id]: action.payload\n        },\n        currentProgram: action.payload // Update the current program\n      };\n    case 'ADD_WORKOUT':\n      const {\n        programId,\n        workout\n      } = action.payload;\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [programId]: {\n            ...state.programs[programId],\n            workouts: [...(state.programs[programId].workouts || []), workout]\n          }\n        }\n      };\n    case 'ADD_EXERCISE':\n      const {\n        workoutId,\n        exercise\n      } = action.payload;\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [programId]: {\n            ...state.programs[programId],\n            workouts: state.programs[programId].workouts.map(w => w.id === workoutId ? {\n              ...w,\n              exercises: [...w.exercises, exercise]\n            } : w)\n          }\n        }\n      };\n    case 'ADD_SET':\n      const {\n        exerciseId,\n        set\n      } = action.payload;\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [programId]: {\n            ...state.programs[programId],\n            workouts: state.programs[programId].workouts.map(w => w.id === workoutId ? {\n              ...w,\n              exercises: w.exercises.map(e => e.id === exerciseId ? {\n                ...e,\n                sets: [...e.sets, set]\n              } : e)\n            } : w)\n          }\n        }\n      };\n    // other cases\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","programs","currentProgram","programReducer","state","action","type","payload","id","programId","workout","workouts","workoutId","exercise","map","w","exercises","exerciseId","set","e","sets"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["const initialState = {\n  programs: {},\n  currentProgram: null // Add this to hold the program being edited\n  // other initial state properties\n};\n\nfunction programReducer(state, action) {\n  switch (action.type) {\n    case 'SET_PROGRAM':\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [action.payload.id]: action.payload\n        },\n        currentProgram: action.payload // Update the current program\n      };\n    case 'ADD_WORKOUT':\n      const { programId, workout } = action.payload;\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [programId]: {\n            ...state.programs[programId],\n            workouts: [...(state.programs[programId].workouts || []), workout]\n          }\n        }\n      };\n    case 'ADD_EXERCISE':\n      const { workoutId, exercise } = action.payload;\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [programId]: {\n            ...state.programs[programId],\n            workouts: state.programs[programId].workouts.map(w =>\n              w.id === workoutId\n                ? { ...w, exercises: [...w.exercises, exercise] }\n                : w\n            )\n          }\n        }\n      };\n    case 'ADD_SET':\n      const { exerciseId, set } = action.payload;\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [programId]: {\n            ...state.programs[programId],\n            workouts: state.programs[programId].workouts.map(w =>\n              w.id === workoutId\n                ? {\n                    ...w,\n                    exercises: w.exercises.map(e =>\n                      e.id === exerciseId ? { ...e, sets: [...e.sets, set] } : e\n                    )\n                  }\n                : w\n            )\n          }\n        }\n      };\n    // other cases\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,QAAQ,EAAE,CAAC,CAAC;EACZC,cAAc,EAAE,IAAI,CAAC;EACrB;AACF,CAAC;AAED,SAASC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QACL,GAAGF,KAAK;QACRH,QAAQ,EAAE;UACR,GAAGG,KAAK,CAACH,QAAQ;UACjB,CAACI,MAAM,CAACE,OAAO,CAACC,EAAE,GAAGH,MAAM,CAACE;QAC9B,CAAC;QACDL,cAAc,EAAEG,MAAM,CAACE,OAAO,CAAC;MACjC,CAAC;IACH,KAAK,aAAa;MAChB,MAAM;QAAEE,SAAS;QAAEC;MAAQ,CAAC,GAAGL,MAAM,CAACE,OAAO;MAC7C,OAAO;QACL,GAAGH,KAAK;QACRH,QAAQ,EAAE;UACR,GAAGG,KAAK,CAACH,QAAQ;UACjB,CAACQ,SAAS,GAAG;YACX,GAAGL,KAAK,CAACH,QAAQ,CAACQ,SAAS,CAAC;YAC5BE,QAAQ,EAAE,CAAC,IAAIP,KAAK,CAACH,QAAQ,CAACQ,SAAS,CAAC,CAACE,QAAQ,IAAI,EAAE,CAAC,EAAED,OAAO;UACnE;QACF;MACF,CAAC;IACH,KAAK,cAAc;MACjB,MAAM;QAAEE,SAAS;QAAEC;MAAS,CAAC,GAAGR,MAAM,CAACE,OAAO;MAC9C,OAAO;QACL,GAAGH,KAAK;QACRH,QAAQ,EAAE;UACR,GAAGG,KAAK,CAACH,QAAQ;UACjB,CAACQ,SAAS,GAAG;YACX,GAAGL,KAAK,CAACH,QAAQ,CAACQ,SAAS,CAAC;YAC5BE,QAAQ,EAAEP,KAAK,CAACH,QAAQ,CAACQ,SAAS,CAAC,CAACE,QAAQ,CAACG,GAAG,CAACC,CAAC,IAChDA,CAAC,CAACP,EAAE,KAAKI,SAAS,GACd;cAAE,GAAGG,CAAC;cAAEC,SAAS,EAAE,CAAC,GAAGD,CAAC,CAACC,SAAS,EAAEH,QAAQ;YAAE,CAAC,GAC/CE,CACN;UACF;QACF;MACF,CAAC;IACH,KAAK,SAAS;MACZ,MAAM;QAAEE,UAAU;QAAEC;MAAI,CAAC,GAAGb,MAAM,CAACE,OAAO;MAC1C,OAAO;QACL,GAAGH,KAAK;QACRH,QAAQ,EAAE;UACR,GAAGG,KAAK,CAACH,QAAQ;UACjB,CAACQ,SAAS,GAAG;YACX,GAAGL,KAAK,CAACH,QAAQ,CAACQ,SAAS,CAAC;YAC5BE,QAAQ,EAAEP,KAAK,CAACH,QAAQ,CAACQ,SAAS,CAAC,CAACE,QAAQ,CAACG,GAAG,CAACC,CAAC,IAChDA,CAAC,CAACP,EAAE,KAAKI,SAAS,GACd;cACE,GAAGG,CAAC;cACJC,SAAS,EAAED,CAAC,CAACC,SAAS,CAACF,GAAG,CAACK,CAAC,IAC1BA,CAAC,CAACX,EAAE,KAAKS,UAAU,GAAG;gBAAE,GAAGE,CAAC;gBAAEC,IAAI,EAAE,CAAC,GAAGD,CAAC,CAACC,IAAI,EAAEF,GAAG;cAAE,CAAC,GAAGC,CAC3D;YACF,CAAC,GACDJ,CACN;UACF;QACF;MACF,CAAC;IACH;IACA;MACE,OAAOX,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}