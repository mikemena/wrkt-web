{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/FilterDropdown/FilterDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Dropdown from '../Dropdown/Dropdown';\nimport '../ExerciseFilters/ExerciseFilters.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterDropdown({\n  fetchUrl,\n  defaultOption,\n  onSelect,\n  className\n}) {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(defaultOption);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetch(fetchUrl).then(response => response.json()).then(data => {\n      // Assuming the data is an array of objects with a 'name' property\n      setOptions(data.map(item => item.name));\n    }).catch(error => console.error(`Failed to fetch ${defaultOption.toLowerCase()}:`, error));\n  }, [fetchUrl, defaultOption]);\n  const toggleDropdown = () => setIsOpen(!isOpen);\n  const handleSelect = optionName => {\n    const selected = options.find(option => option === optionName);\n    setSelectedOption(selected);\n    setIsOpen(false); // Close the dropdown\n    onSelect(selected); // Parent handler\n  };\n  const buttonClass = selectedOption === defaultOption ? 'button-grey' : 'button-orange';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      className: `${className} ${buttonClass}`,\n      children: selectedOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: options,\n      selectedOption: selectedOption,\n      onOptionSelect: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterDropdown, \"ujvzh84+xrjS5YblTLBvAvY7Bks=\");\n_c = FilterDropdown;\nexport default FilterDropdown;\nvar _c;\n$RefreshReg$(_c, \"FilterDropdown\");","map":{"version":3,"names":["React","useState","useEffect","Dropdown","jsxDEV","_jsxDEV","FilterDropdown","fetchUrl","defaultOption","onSelect","className","_s","options","setOptions","selectedOption","setSelectedOption","isOpen","setIsOpen","fetch","then","response","json","data","map","item","name","catch","error","console","toLowerCase","toggleDropdown","handleSelect","optionName","selected","find","option","buttonClass","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onOptionSelect","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/FilterDropdown/FilterDropdown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Dropdown from '../Dropdown/Dropdown';\nimport '../ExerciseFilters/ExerciseFilters.css';\n\nfunction FilterDropdown({ fetchUrl, defaultOption, onSelect, className }) {\n  const [options, setOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(defaultOption);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetch(fetchUrl)\n      .then(response => response.json())\n      .then(data => {\n        // Assuming the data is an array of objects with a 'name' property\n        setOptions(data.map(item => item.name));\n      })\n      .catch(error =>\n        console.error(`Failed to fetch ${defaultOption.toLowerCase()}:`, error)\n      );\n  }, [fetchUrl, defaultOption]);\n\n  const toggleDropdown = () => setIsOpen(!isOpen);\n\n  const handleSelect = optionName => {\n    const selected = options.find(option => option === optionName);\n    setSelectedOption(selected);\n    setIsOpen(false); // Close the dropdown\n    onSelect(selected); // Parent handler\n  };\n\n  const buttonClass =\n    selectedOption === defaultOption ? 'button-grey' : 'button-orange';\n\n  return (\n    <div>\n      <button\n        onClick={toggleDropdown}\n        className={`${className} ${buttonClass}`}\n      >\n        {selectedOption}\n      </button>\n      {isOpen && (\n        <Dropdown\n          options={options}\n          selectedOption={selectedOption}\n          onOptionSelect={handleSelect}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default FilterDropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC,aAAa;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAACO,aAAa,CAAC;EACnE,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACdgB,KAAK,CAACX,QAAQ,CAAC,CACZY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAT,UAAU,CAACS,IAAI,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IACVC,OAAO,CAACD,KAAK,CAAE,mBAAkBnB,aAAa,CAACqB,WAAW,CAAC,CAAE,GAAE,EAAEF,KAAK,CACxE,CAAC;EACL,CAAC,EAAE,CAACpB,QAAQ,EAAEC,aAAa,CAAC,CAAC;EAE7B,MAAMsB,cAAc,GAAGA,CAAA,KAAMb,SAAS,CAAC,CAACD,MAAM,CAAC;EAE/C,MAAMe,YAAY,GAAGC,UAAU,IAAI;IACjC,MAAMC,QAAQ,GAAGrB,OAAO,CAACsB,IAAI,CAACC,MAAM,IAAIA,MAAM,KAAKH,UAAU,CAAC;IAC9DjB,iBAAiB,CAACkB,QAAQ,CAAC;IAC3BhB,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAClBR,QAAQ,CAACwB,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMG,WAAW,GACftB,cAAc,KAAKN,aAAa,GAAG,aAAa,GAAG,eAAe;EAEpE,oBACEH,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MACEiC,OAAO,EAAER,cAAe;MACxBpB,SAAS,EAAG,GAAEA,SAAU,IAAG0B,WAAY,EAAE;MAAAC,QAAA,EAExCvB;IAAc;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,EACR1B,MAAM,iBACLX,OAAA,CAACF,QAAQ;MACPS,OAAO,EAAEA,OAAQ;MACjBE,cAAc,EAAEA,cAAe;MAC/B6B,cAAc,EAAEZ;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CA9CQL,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AAgDvB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}