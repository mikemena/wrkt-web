{"ast":null,"code":"function exerciseReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_EXERCISE':\n      console.log('ADD_EXERCISE action:', action);\n      const {\n        workoutId,\n        exercises\n      } = action.payload;\n      if (state.activeWorkout && state.activeWorkout.id === workoutId) {\n        return {\n          ...state,\n          activeWorkout: {\n            ...state.activeWorkout,\n            exercises: [...state.activeWorkout.exercises, ...exercises]\n          }\n        };\n      } else {\n        console.error('activeWorkout is undefined or workoutId does not match');\n      }\n      return state;\n    case 'UPDATE_EXERCISE':\n      // action.payload should include the id of the exercise to update\n      // and the properties to be updated.\n      if (state[action.payload.id]) {\n        return {\n          ...state,\n          [action.payload.id]: {\n            ...state[action.payload.id],\n            ...action.payload.updates\n          }\n        };\n      }\n      return state;\n    case 'DELETE_EXERCISE':\n      // action.payload should be the id of the exercise to delete.\n      const newState = {\n        ...state\n      };\n      delete newState[action.payload];\n      return newState;\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["exerciseReducer","state","action","type","console","log","workoutId","exercises","payload","activeWorkout","id","error","updates","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["function exerciseReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_EXERCISE':\n      console.log('ADD_EXERCISE action:', action);\n      const { workoutId, exercises } = action.payload;\n\n      if (state.activeWorkout && state.activeWorkout.id === workoutId) {\n        return {\n          ...state,\n          activeWorkout: {\n            ...state.activeWorkout,\n            exercises: [...state.activeWorkout.exercises, ...exercises]\n          }\n        };\n      } else {\n        console.error('activeWorkout is undefined or workoutId does not match');\n      }\n      return state;\n\n    case 'UPDATE_EXERCISE':\n      // action.payload should include the id of the exercise to update\n      // and the properties to be updated.\n      if (state[action.payload.id]) {\n        return {\n          ...state,\n          [action.payload.id]: {\n            ...state[action.payload.id],\n            ...action.payload.updates\n          }\n        };\n      }\n      return state;\n\n    case 'DELETE_EXERCISE':\n      // action.payload should be the id of the exercise to delete.\n      const newState = { ...state };\n      delete newState[action.payload];\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,eAAeA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACtC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,MAAM,CAAC;MAC3C,MAAM;QAAEI,SAAS;QAAEC;MAAU,CAAC,GAAGL,MAAM,CAACM,OAAO;MAE/C,IAAIP,KAAK,CAACQ,aAAa,IAAIR,KAAK,CAACQ,aAAa,CAACC,EAAE,KAAKJ,SAAS,EAAE;QAC/D,OAAO;UACL,GAAGL,KAAK;UACRQ,aAAa,EAAE;YACb,GAAGR,KAAK,CAACQ,aAAa;YACtBF,SAAS,EAAE,CAAC,GAAGN,KAAK,CAACQ,aAAa,CAACF,SAAS,EAAE,GAAGA,SAAS;UAC5D;QACF,CAAC;MACH,CAAC,MAAM;QACLH,OAAO,CAACO,KAAK,CAAC,wDAAwD,CAAC;MACzE;MACA,OAAOV,KAAK;IAEd,KAAK,iBAAiB;MACpB;MACA;MACA,IAAIA,KAAK,CAACC,MAAM,CAACM,OAAO,CAACE,EAAE,CAAC,EAAE;QAC5B,OAAO;UACL,GAAGT,KAAK;UACR,CAACC,MAAM,CAACM,OAAO,CAACE,EAAE,GAAG;YACnB,GAAGT,KAAK,CAACC,MAAM,CAACM,OAAO,CAACE,EAAE,CAAC;YAC3B,GAAGR,MAAM,CAACM,OAAO,CAACI;UACpB;QACF,CAAC;MACH;MACA,OAAOX,KAAK;IAEd,KAAK,iBAAiB;MACpB;MACA,MAAMY,QAAQ,GAAG;QAAE,GAAGZ;MAAM,CAAC;MAC7B,OAAOY,QAAQ,CAACX,MAAM,CAACM,OAAO,CAAC;MAC/B,OAAOK,QAAQ;IAEjB;MACE,OAAOZ,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}