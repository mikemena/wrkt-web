{"ast":null,"code":"function programReducer(state, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      console.log('Setting selected program:', action.payload);\n      return {\n        selectedProgram: action.payload.program,\n        selectedWorkouts: action.payload.workouts,\n        activeWorkout: null\n      };\n    case 'SET_ACTIVE_WORKOUT':\n      {\n        const workoutId = action.payload;\n        return {\n          activeWorkout: workoutId\n        };\n      }\n    case 'DESELECT_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!state.program || state.program.id !== programId) {\n          console.error('Program not found or invalid payload:', action.payload);\n          return state;\n        }\n        return {\n          ...state,\n          program: {\n            ...state.program,\n            selected: false\n          },\n          selectedProgram: null\n        };\n      }\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n      if (!state.program || state.program.id !== id) {\n        console.error('Program not found:', id);\n        return state;\n      }\n      const updatedProgram = {\n        ...state.program,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      };\n      return {\n        ...state,\n        program: updatedProgram\n      };\n    case 'UPDATE_PROGRAM':\n      {\n        const updatedProgram = action.payload;\n        return {\n          ...state,\n          program: {\n            ...state.program,\n            ...updatedProgram\n          }\n        };\n      }\n    case 'UPDATE_PROGRAM_SUCCESS':\n      {\n        const updatedProgram = action.payload;\n        if (!updatedProgram || !updatedProgram.id) {\n          console.error('Invalid program data received:', updatedProgram);\n          return state;\n        }\n        return {\n          ...state,\n          program: {\n            ...state.program,\n            ...updatedProgram\n          },\n          selectedProgram: updatedProgram.id\n        };\n      }\n    case 'DELETE_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!programId || state.program.id !== programId) {\n          console.error('Program not found or invalid payload:', action.payload);\n          return state;\n        }\n\n        // Reset the state to remove the program\n        return {\n          ...state,\n          program: null,\n          selectedProgram: null,\n          activeWorkout: null\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["programReducer","state","action","type","console","log","payload","selectedProgram","program","selectedWorkouts","workouts","activeWorkout","workoutId","programId","id","error","selected","name","program_duration","duration_unit","days_per_week","main_goal","updatedProgram"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["function programReducer(state, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      console.log('Setting selected program:', action.payload);\n      return {\n        selectedProgram: action.payload.program,\n        selectedWorkouts: action.payload.workouts,\n        activeWorkout: null\n      };\n\n    case 'SET_ACTIVE_WORKOUT': {\n      const workoutId = action.payload;\n\n      return {\n        activeWorkout: workoutId\n      };\n    }\n\n    case 'DESELECT_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!state.program || state.program.id !== programId) {\n        console.error('Program not found or invalid payload:', action.payload);\n        return state;\n      }\n\n      return {\n        ...state,\n        program: {\n          ...state.program,\n          selected: false\n        },\n        selectedProgram: null\n      };\n    }\n\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n\n      if (!state.program || state.program.id !== id) {\n        console.error('Program not found:', id);\n        return state;\n      }\n\n      const updatedProgram = {\n        ...state.program,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      };\n\n      return {\n        ...state,\n        program: updatedProgram\n      };\n\n    case 'UPDATE_PROGRAM': {\n      const updatedProgram = action.payload;\n\n      return {\n        ...state,\n        program: {\n          ...state.program,\n          ...updatedProgram\n        }\n      };\n    }\n\n    case 'UPDATE_PROGRAM_SUCCESS': {\n      const updatedProgram = action.payload;\n\n      if (!updatedProgram || !updatedProgram.id) {\n        console.error('Invalid program data received:', updatedProgram);\n        return state;\n      }\n\n      return {\n        ...state,\n        program: {\n          ...state.program,\n          ...updatedProgram\n        },\n        selectedProgram: updatedProgram.id\n      };\n    }\n\n    case 'DELETE_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!programId || state.program.id !== programId) {\n        console.error('Program not found or invalid payload:', action.payload);\n        return state;\n      }\n\n      // Reset the state to remove the program\n      return {\n        ...state,\n        program: null,\n        selectedProgram: null,\n        activeWorkout: null\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}