{"ast":null,"code":"import { initialState } from './initialState';\nfunction programReducer(state = initialState.programs, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      return {\n        ...state,\n        selectedProgram: action.payload\n      };\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id],\n          // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n      return updatedState;\n    case 'UPDATE_PROGRAM':\n      {\n        const {\n          id,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        } = action.payload;\n        const existingProgram = state[id];\n        if (!existingProgram) {\n          console.error('Program not found:', id);\n          return state;\n        }\n        const updatedState = {\n          ...state,\n          [id]: {\n            ...existingProgram,\n            // Spread the existing program details\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal,\n            user_id\n          }\n        };\n        return updatedState;\n      }\n    case 'UPDATE_PROGRAM_SUCCESS':\n      {\n        const {\n          id,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        } = action.payload;\n        const existingProgram = state[id];\n        if (!existingProgram) {\n          console.error('Program not found:', id);\n          return state;\n        }\n        const updatedState = {\n          ...state,\n          [id]: {\n            ...existingProgram,\n            // Spread the existing program details\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal,\n            user_id\n          }\n        };\n        return updatedState;\n      }\n    case 'DELETE_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!programId) {\n          console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n          return state;\n        }\n        const newPrograms = {\n          ...state.programs\n        };\n        delete newPrograms[programId];\n        const newState = {\n          ...state,\n          programs: newPrograms\n        };\n        return newState;\n      }\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["initialState","programReducer","state","programs","action","type","selectedProgram","payload","id","name","program_duration","duration_unit","days_per_week","main_goal","console","error","updatedState","user_id","existingProgram","programId","newPrograms","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["import { initialState } from './initialState';\n\nfunction programReducer(state = initialState.programs, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      return {\n        ...state,\n        selectedProgram: action.payload\n      };\n\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id], // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n\n      return updatedState;\n\n    case 'UPDATE_PROGRAM': {\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal,\n        user_id\n      } = action.payload;\n\n      const existingProgram = state[id];\n      if (!existingProgram) {\n        console.error('Program not found:', id);\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...existingProgram, // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        }\n      };\n\n      return updatedState;\n    }\n\n    case 'UPDATE_PROGRAM_SUCCESS': {\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal,\n        user_id\n      } = action.payload;\n\n      const existingProgram = state[id];\n      if (!existingProgram) {\n        console.error('Program not found:', id);\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...existingProgram, // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        }\n      };\n\n      return updatedState;\n    }\n\n    case 'DELETE_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!programId) {\n        console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n        return state;\n      }\n\n      const newPrograms = { ...state.programs };\n      delete newPrograms[programId];\n\n      const newState = {\n        ...state,\n        programs: newPrograms\n      };\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C,SAASC,cAAcA,CAACC,KAAK,GAAGF,YAAY,CAACG,QAAQ,EAAEC,MAAM,EAAE;EAC7D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,sBAAsB;MACzB,OAAO;QACL,GAAGH,KAAK;QACRI,eAAe,EAAEF,MAAM,CAACG;MAC1B,CAAC;IAEH,KAAK,aAAa;MAChB,MAAM;QACJC,EAAE;QACFC,IAAI;QACJC,gBAAgB;QAChBC,aAAa;QACbC,aAAa;QACbC;MACF,CAAC,GAAGT,MAAM,CAACG,OAAO;MAElB,IAAI,CAACL,KAAK,CAACM,EAAE,CAAC,EAAE;QACdM,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEP,EAAE,CAAC;QACvC,OAAON,KAAK,CAAC,CAAC;MAChB;MAEA,MAAMc,YAAY,GAAG;QACnB,GAAGd,KAAK;QACR,CAACM,EAAE,GAAG;UACJ,GAAGN,KAAK,CAACM,EAAE,CAAC;UAAE;UACdC,IAAI;UACJC,gBAAgB;UAChBC,aAAa;UACbC,aAAa;UACbC;QACF;MACF,CAAC;MAED,OAAOG,YAAY;IAErB,KAAK,gBAAgB;MAAE;QACrB,MAAM;UACJR,EAAE;UACFC,IAAI;UACJC,gBAAgB;UAChBC,aAAa;UACbC,aAAa;UACbC,SAAS;UACTI;QACF,CAAC,GAAGb,MAAM,CAACG,OAAO;QAElB,MAAMW,eAAe,GAAGhB,KAAK,CAACM,EAAE,CAAC;QACjC,IAAI,CAACU,eAAe,EAAE;UACpBJ,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEP,EAAE,CAAC;UACvC,OAAON,KAAK;QACd;QAEA,MAAMc,YAAY,GAAG;UACnB,GAAGd,KAAK;UACR,CAACM,EAAE,GAAG;YACJ,GAAGU,eAAe;YAAE;YACpBT,IAAI;YACJC,gBAAgB;YAChBC,aAAa;YACbC,aAAa;YACbC,SAAS;YACTI;UACF;QACF,CAAC;QAED,OAAOD,YAAY;MACrB;IAEA,KAAK,wBAAwB;MAAE;QAC7B,MAAM;UACJR,EAAE;UACFC,IAAI;UACJC,gBAAgB;UAChBC,aAAa;UACbC,aAAa;UACbC,SAAS;UACTI;QACF,CAAC,GAAGb,MAAM,CAACG,OAAO;QAElB,MAAMW,eAAe,GAAGhB,KAAK,CAACM,EAAE,CAAC;QACjC,IAAI,CAACU,eAAe,EAAE;UACpBJ,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEP,EAAE,CAAC;UACvC,OAAON,KAAK;QACd;QAEA,MAAMc,YAAY,GAAG;UACnB,GAAGd,KAAK;UACR,CAACM,EAAE,GAAG;YACJ,GAAGU,eAAe;YAAE;YACpBT,IAAI;YACJC,gBAAgB;YAChBC,aAAa;YACbC,aAAa;YACbC,SAAS;YACTI;UACF;QACF,CAAC;QAED,OAAOD,YAAY;MACrB;IAEA,KAAK,gBAAgB;MAAE;QACrB,MAAM;UAAEG;QAAU,CAAC,GAAGf,MAAM,CAACG,OAAO;QAEpC,IAAI,CAACY,SAAS,EAAE;UACdL,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEX,MAAM,CAACG,OAAO,CAAC;UACnE,OAAOL,KAAK;QACd;QAEA,MAAMkB,WAAW,GAAG;UAAE,GAAGlB,KAAK,CAACC;QAAS,CAAC;QACzC,OAAOiB,WAAW,CAACD,SAAS,CAAC;QAE7B,MAAME,QAAQ,GAAG;UACf,GAAGnB,KAAK;UACRC,QAAQ,EAAEiB;QACZ,CAAC;QAED,OAAOC,QAAQ;MACjB;IAEA;MACE,OAAOnB,KAAK;EAChB;AACF;AAEA,SAASD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}