{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/ExerciseFilters/ExerciseFilters.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport useFetchData from '../../hooks/useFetchData';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExerciseFilters({\n  onMuscleChange,\n  onEquipmentChange\n}) {\n  _s();\n  const {\n    data: muscles,\n    isLoading: isLoadingMuscles,\n    error: errorMuscles\n  } = useFetchData('http://localhost:9025/api/muscles');\n  const {\n    data: equipments,\n    isLoading: isLoadingEquipments,\n    error: errorEquipments\n  } = useFetchData('http://localhost:9025/api/equipments');\n\n  // Loading indicator or error message for equipments\n  if (isLoadingEquipments) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 35\n  }, this);\n  if (errorEquipments) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading equipments: \", errorEquipments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n\n  // Loading indicator or error message for muscles\n  if (isLoadingMuscles) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 32\n  }, this);\n  if (errorMuscles) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading equipments: \", errorMuscles]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      options: muscles.map(option => option.name),\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Muscle\",\n        InputProps: {\n          ...params.InputProps,\n          type: 'search'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this),\n      onChange: (event, newValue) => {\n        onMuscleChange(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      options: equipments.map(option => option.name),\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Equipment\",\n        InputProps: {\n          ...params.InputProps,\n          type: 'search'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this),\n      onChange: (event, newValue) => {\n        onEquipmentChange(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ExerciseFilters, \"Csz47JdTgRUYYEQirNGgughGlXA=\", false, function () {\n  return [useFetchData, useFetchData];\n});\n_c = ExerciseFilters;\nexport default ExerciseFilters;\nvar _c;\n$RefreshReg$(_c, \"ExerciseFilters\");","map":{"version":3,"names":["React","useState","useEffect","Autocomplete","Stack","TextField","useFetchData","CircularProgress","jsxDEV","_jsxDEV","ExerciseFilters","onMuscleChange","onEquipmentChange","_s","data","muscles","isLoading","isLoadingMuscles","error","errorMuscles","equipments","isLoadingEquipments","errorEquipments","fileName","_jsxFileName","lineNumber","columnNumber","children","direction","spacing","options","map","option","name","renderInput","params","label","InputProps","type","onChange","event","newValue","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/ExerciseFilters/ExerciseFilters.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport useFetchData from '../../hooks/useFetchData';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nfunction ExerciseFilters({ onMuscleChange, onEquipmentChange }) {\n  const {\n    data: muscles,\n    isLoading: isLoadingMuscles,\n    error: errorMuscles\n  } = useFetchData('http://localhost:9025/api/muscles');\n\n  const {\n    data: equipments,\n    isLoading: isLoadingEquipments,\n    error: errorEquipments\n  } = useFetchData('http://localhost:9025/api/equipments');\n\n  // Loading indicator or error message for equipments\n  if (isLoadingEquipments) return <CircularProgress />;\n  if (errorEquipments)\n    return <div>Error loading equipments: {errorEquipments}</div>;\n\n  // Loading indicator or error message for muscles\n  if (isLoadingMuscles) return <CircularProgress />;\n  if (errorMuscles) return <div>Error loading equipments: {errorMuscles}</div>;\n\n  return (\n    <Stack direction='row' spacing={2}>\n      <Autocomplete\n        options={muscles.map(option => option.name)}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label='Muscle'\n            InputProps={{ ...params.InputProps, type: 'search' }}\n          />\n        )}\n        onChange={(event, newValue) => {\n          onMuscleChange(newValue);\n        }}\n      />\n      <Autocomplete\n        options={equipments.map(option => option.name)}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label='Equipment'\n            InputProps={{ ...params.InputProps, type: 'search' }}\n          />\n        )}\n        onChange={(event, newValue) => {\n          onEquipmentChange(newValue);\n        }}\n      />\n    </Stack>\n  );\n}\n\nexport default ExerciseFilters;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}