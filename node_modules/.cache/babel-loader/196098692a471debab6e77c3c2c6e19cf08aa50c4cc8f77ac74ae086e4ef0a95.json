{"ast":null,"code":"import { actionTypes } from '../actions/actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\nimport { initialState } from './initialState';\nfunction exerciseReducer(state = initialState.exercises, action) {\n  console.log('Action Type:', action.type);\n  console.log('State Before:', state);\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      {\n        const {\n          workoutId,\n          exercises = []\n        } = action.payload;\n        const currentExercises = state[workoutId] || [];\n        console.log('currentExercises:', currentExercises);\n        const updatedExercises = [...currentExercises, ...exercises];\n        const newState = {\n          ...state,\n          [workoutId]: updatedExercises\n        };\n        console.log('Current state before adding exercise:', newState);\n        return newState;\n      }\n    case actionTypes.UPDATE_EXERCISE:\n      {\n        console.log('Current state before adding exercise:', state);\n        const {\n          workoutId,\n          updatedExercise\n        } = action.payload;\n        return {\n          ...state,\n          [workoutId]: state[workoutId].map(exercise => exercise.id === updatedExercise.id ? {\n            ...exercise,\n            ...updatedExercise,\n            // Ensure the exercise ID is preserved\n            id: updatedExercise.id\n          } : exercise)\n        };\n      }\n    case actionTypes.DELETE_EXERCISE:\n      {\n        if (!action.payload) {\n          console.error('Invalid payload for DELETE_EXERCISE', action.payload);\n          return state;\n        }\n        const {\n          workoutId,\n          exerciseId\n        } = action.payload;\n\n        // Filter out the deleted exercise and reorder the remaining exercises\n        const updatedExercises = state[workoutId].filter(ex => ex.id !== exerciseId).map((exercise, index) => ({\n          ...exercise,\n          order: index + 1\n        }));\n        return {\n          ...state,\n          [workoutId]: updatedExercises\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["actionTypes","v4","uuidv4","initialState","exerciseReducer","state","exercises","action","console","log","type","ADD_EXERCISE","workoutId","payload","currentExercises","updatedExercises","newState","UPDATE_EXERCISE","updatedExercise","map","exercise","id","DELETE_EXERCISE","error","exerciseId","filter","ex","index","order"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["import { actionTypes } from '../actions/actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\nimport { initialState } from './initialState';\n\nfunction exerciseReducer(state = initialState.exercises, action) {\n  console.log('Action Type:', action.type);\n  console.log('State Before:', state);\n\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE: {\n      const { workoutId, exercises = [] } = action.payload;\n      const currentExercises = state[workoutId] || [];\n      console.log('currentExercises:', currentExercises);\n\n      const updatedExercises = [...currentExercises, ...exercises];\n\n      const newState = {\n        ...state,\n        [workoutId]: updatedExercises\n      };\n      console.log('Current state before adding exercise:', newState);\n      return newState;\n    }\n\n    case actionTypes.UPDATE_EXERCISE: {\n      console.log('Current state before adding exercise:', state);\n      const { workoutId, updatedExercise } = action.payload;\n      return {\n        ...state,\n        [workoutId]: state[workoutId].map(exercise =>\n          exercise.id === updatedExercise.id\n            ? {\n                ...exercise,\n                ...updatedExercise,\n                // Ensure the exercise ID is preserved\n                id: updatedExercise.id\n              }\n            : exercise\n        )\n      };\n    }\n\n    case actionTypes.DELETE_EXERCISE: {\n      if (!action.payload) {\n        console.error('Invalid payload for DELETE_EXERCISE', action.payload);\n        return state;\n      }\n      const { workoutId, exerciseId } = action.payload;\n\n      // Filter out the deleted exercise and reorder the remaining exercises\n      const updatedExercises = state[workoutId]\n        .filter(ex => ex.id !== exerciseId)\n        .map((exercise, index) => ({\n          ...exercise,\n          order: index + 1\n        }));\n\n      return {\n        ...state,\n        [workoutId]: updatedExercises\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,SAASC,eAAeA,CAACC,KAAK,GAAGF,YAAY,CAACG,SAAS,EAAEC,MAAM,EAAE;EAC/DC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,MAAM,CAACG,IAAI,CAAC;EACxCF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,KAAK,CAAC;EAEnC,QAAQE,MAAM,CAACG,IAAI;IACjB,KAAKV,WAAW,CAACW,YAAY;MAAE;QAC7B,MAAM;UAAEC,SAAS;UAAEN,SAAS,GAAG;QAAG,CAAC,GAAGC,MAAM,CAACM,OAAO;QACpD,MAAMC,gBAAgB,GAAGT,KAAK,CAACO,SAAS,CAAC,IAAI,EAAE;QAC/CJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEK,gBAAgB,CAAC;QAElD,MAAMC,gBAAgB,GAAG,CAAC,GAAGD,gBAAgB,EAAE,GAAGR,SAAS,CAAC;QAE5D,MAAMU,QAAQ,GAAG;UACf,GAAGX,KAAK;UACR,CAACO,SAAS,GAAGG;QACf,CAAC;QACDP,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEO,QAAQ,CAAC;QAC9D,OAAOA,QAAQ;MACjB;IAEA,KAAKhB,WAAW,CAACiB,eAAe;MAAE;QAChCT,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEJ,KAAK,CAAC;QAC3D,MAAM;UAAEO,SAAS;UAAEM;QAAgB,CAAC,GAAGX,MAAM,CAACM,OAAO;QACrD,OAAO;UACL,GAAGR,KAAK;UACR,CAACO,SAAS,GAAGP,KAAK,CAACO,SAAS,CAAC,CAACO,GAAG,CAACC,QAAQ,IACxCA,QAAQ,CAACC,EAAE,KAAKH,eAAe,CAACG,EAAE,GAC9B;YACE,GAAGD,QAAQ;YACX,GAAGF,eAAe;YAClB;YACAG,EAAE,EAAEH,eAAe,CAACG;UACtB,CAAC,GACDD,QACN;QACF,CAAC;MACH;IAEA,KAAKpB,WAAW,CAACsB,eAAe;MAAE;QAChC,IAAI,CAACf,MAAM,CAACM,OAAO,EAAE;UACnBL,OAAO,CAACe,KAAK,CAAC,qCAAqC,EAAEhB,MAAM,CAACM,OAAO,CAAC;UACpE,OAAOR,KAAK;QACd;QACA,MAAM;UAAEO,SAAS;UAAEY;QAAW,CAAC,GAAGjB,MAAM,CAACM,OAAO;;QAEhD;QACA,MAAME,gBAAgB,GAAGV,KAAK,CAACO,SAAS,CAAC,CACtCa,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACL,EAAE,KAAKG,UAAU,CAAC,CAClCL,GAAG,CAAC,CAACC,QAAQ,EAAEO,KAAK,MAAM;UACzB,GAAGP,QAAQ;UACXQ,KAAK,EAAED,KAAK,GAAG;QACjB,CAAC,CAAC,CAAC;QAEL,OAAO;UACL,GAAGtB,KAAK;UACR,CAACO,SAAS,GAAGG;QACf,CAAC;MACH;IAEA;MACE,OAAOV,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}