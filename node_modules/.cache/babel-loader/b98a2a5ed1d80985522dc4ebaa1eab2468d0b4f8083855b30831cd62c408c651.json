{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SearchBar from '../../../components/SearchBar/SearchBar';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport Exercise from '../../../components/Exercise/Exercise';\nimport ExerciseFilters from '../../../components/ExerciseFilters/ExerciseFilters';\nimport useFetchData from '../../../hooks/useFetchData';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './program.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateProgram = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [program, setProgram] = useState({\n    programName: '',\n    programDuration: '',\n    daysPerWeek: '',\n    dayType: '',\n    programGoal: '',\n    workouts: [],\n    selectedExercises: []\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedMuscle, setSelectedMuscle] = useState('');\n  const [selectedEquipment, setSelectedEquipment] = useState('');\n  const [state, setState] = useState();\n  const [days, setDays] = useState([{\n    id: 1,\n    name: 'Monday'\n  }, {\n    id: 2,\n    name: 'Tuesday'\n  }, {\n    id: 3,\n    name: 'Wednesday'\n  }, {\n    id: 4,\n    name: 'Thursday'\n  }, {\n    id: 5,\n    name: 'Friday'\n  }, {\n    id: 6,\n    name: 'Saturday'\n  }, {\n    id: 7,\n    name: 'Sunday'\n  }]);\n  const navigate = useNavigate();\n  const {\n    data: exercises,\n    isLoading,\n    error\n  } = useFetchData('http://localhost:9025/api/exercise-catalog');\n  const filteredExercises = useMemo(() => {\n    return exercises.filter(exercise => {\n      const matchesMuscle = !selectedMuscle || selectedMuscle === 'All' || exercise.muscle === selectedMuscle;\n      const matchesEquipment = !selectedEquipment || selectedEquipment === 'All' || exercise.equipment === selectedEquipment;\n      const matchesSearchTerm = !searchTerm || exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n      return matchesMuscle && matchesEquipment && matchesSearchTerm;\n    });\n  }, [searchTerm, selectedMuscle, selectedEquipment, exercises]);\n  const handleSearch = value => {\n    setSearchTerm(value);\n  };\n  const handleMuscleChange = value => {\n    setSelectedMuscle(value);\n  };\n  const handleEquipmentChange = value => {\n    setSelectedEquipment(value);\n  };\n  const handleDayChange = selectedDay => {\n    setDays(prevWorkout => ({\n      ...prevWorkout,\n      day: selectedDay\n    }));\n  };\n  const handleDayTypeChange = selectedDayType => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      dayType: selectedDayType\n    }));\n  };\n  const handleProgramGoalChange = selectedProgramGoal => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programGoal: selectedProgramGoal\n    }));\n  };\n  const handleDaysPerWeekChange = selectedDaysPerWeek => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      daysPerWeek: selectedDaysPerWeek\n    }));\n  };\n  const handleDurationChange = selectedDuration => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programDuration: selectedDuration\n    }));\n  };\n  const addDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1; // Ensure unique ID\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}` // Customize the naming as needed\n    };\n    setDays([...days, newDay]);\n  };\n  const removeDay = dayId => {\n    _s();\n    setDays(days.filter(day => day.id !== dayId));\n    const handleDragEnd = useCallback(result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      // Do nothing if there's no destination (dropped outside a droppable area)\n      if (!destination) {\n        return;\n      }\n\n      // Do nothing if the item is dropped in the same place\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n      const start = state.columns[source.droppableId];\n      const finish = state.columns[destination.droppableId];\n\n      // Moving within the same column\n      if (start === finish) {\n        const newTaskIds = Array.from(start.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n        const newColumn = {\n          ...start,\n          taskIds: newTaskIds\n        };\n        const newState = {\n          ...state,\n          columns: {\n            ...state.columns,\n            [newColumn.id]: newColumn\n          }\n        };\n        setState(newState);\n        return;\n      }\n\n      // Moving from one column to another\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = {\n        ...start,\n        taskIds: startTaskIds\n      };\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n      const newFinish = {\n        ...finish,\n        taskIds: finishTaskIds\n      };\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      };\n      setState(newState);\n    }, [state]);\n    const handleSaveProgram = async event => {\n      event.preventDefault();\n      const programData = {\n        user_id: 2,\n        // hardcoded for now, but should be the logged in user's ID\n        name: program.programName,\n        program_duration: program.programDuration,\n        days_per_week: program.daysPerWeek,\n        day_type: program.dayType,\n        main_goal: program.mainGoal,\n        workouts: program.workouts.map(workout => ({\n          name: workout.name,\n          order: workout.order,\n          exercises: workout.exercises.map(exercise => ({\n            catalog_exercise_id: exercise.catalog_exercise_id,\n            order: exercise.order,\n            sets: exercise.sets.map(set => ({\n              reps: set.reps,\n              weight: set.weight,\n              order: set.order\n            }))\n          }))\n        }))\n      };\n      try {\n        const response = await fetch('http://localhost:9025/api/programs', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(programData)\n        });\n        if (!response.ok) {\n          throw new Error('Something went wrong with saving the program');\n        }\n\n        // Assuming the backend responds with the created template, you could use it here if needed\n        // const savedTemplate = await response.json();\n\n        // After saving, redirect back to the WorkoutPage\n        navigate('/programs');\n      } catch (error) {\n        console.error('Failed to save the program:', error);\n        // Here, you could set an error state and display it to the user if you wish\n      }\n    };\n    const handleCancel = () => {\n      // Redirect to the create workout page\n      navigate('/workouts');\n    };\n    const handleSelectExercise = exercise => {\n      setProgram(prevWorkout => {\n        const existingIndex = prevWorkout.selectedExercises.findIndex(ex => ex.exercise_id === exercise.exercise_id);\n        let newSelectedExercises;\n        if (existingIndex >= 0) {\n          // Exercise is already selected, remove it\n          newSelectedExercises = prevWorkout.selectedExercises.filter((_, index) => index !== existingIndex);\n        } else {\n          // Exercise is not selected, add it\n          newSelectedExercises = [...prevWorkout.selectedExercises, exercise];\n        }\n        return {\n          ...prevWorkout,\n          selectedExercises: newSelectedExercises\n        };\n      });\n    };\n    if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 27\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error loading exercises: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 23\n    }, this);\n    const dayTypes = ['Day of Week', 'Numerical'];\n    const durations = ['Days', 'Weeks', 'Months'];\n    const goals = ['Strength', 'Endurance', 'Hypertrophy', 'Weight Loss'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Create New Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSaveProgram,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"full-width-input\",\n              placeholder: \"Enter Program Name\",\n              value: program.name,\n              onChange: e => setProgram(prevWorkout => ({\n                ...prevWorkout,\n                programName: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"program-detail-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"program-detail\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"day-type\",\n                onChange: e => handleDayTypeChange(e.target.value),\n                placeholder: \"Select Day Type\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Day Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this), dayTypes.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"program-detail\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-container\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"full-width-input\",\n                  placeholder: \"Enter Duration Amount\",\n                  value: program.duration_amount,\n                  onChange: e => setProgram(prevWorkout => ({\n                    ...prevWorkout,\n                    duration_amount: e.target.value\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"durations\",\n                onChange: e => handleDurationChange(e.target.value),\n                placeholder: \"Select Duration\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Duration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this), durations.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"days-per-week\",\n                placeholder: \"Enter Days Per Week\",\n                value: program.daysPerWeek,\n                onChange: e => handleDaysPerWeekChange(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"program-detail\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"program_goal\",\n                onChange: e => handleProgramGoalChange(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Program Goal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 19\n                }, this), goals.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addDay,\n          children: \"Add Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: handleDragEnd,\n          children: days.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(DayContainer, {\n              day: day.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeDay(day.id),\n              children: [\"Remove \", day.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)]\n          }, day.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"save-program-button\",\n            onClick: handleSaveProgram,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"cancel-program-button\",\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this);\n  };\n  _s(removeDay, \"mky2aOhzdPvMwLPGwmEs8gb5nRY=\");\n};\n_s2(CreateProgram, \"JuKcF2bbriMUdfZpaxMoHsvSbTc=\", false, function () {\n  return [useNavigate, useFetchData];\n});\n_c = CreateProgram;\nexport default CreateProgram;\nvar _c;\n$RefreshReg$(_c, \"CreateProgram\");","map":{"version":3,"names":["React","useState","useMemo","useCallback","useNavigate","SearchBar","DayContainer","Exercise","ExerciseFilters","useFetchData","DragDropContext","jsxDEV","_jsxDEV","CreateProgram","_s2","_s","$RefreshSig$","program","setProgram","programName","programDuration","daysPerWeek","dayType","programGoal","workouts","selectedExercises","searchTerm","setSearchTerm","selectedMuscle","setSelectedMuscle","selectedEquipment","setSelectedEquipment","state","setState","days","setDays","id","name","navigate","data","exercises","isLoading","error","filteredExercises","filter","exercise","matchesMuscle","muscle","matchesEquipment","equipment","matchesSearchTerm","toLowerCase","includes","handleSearch","value","handleMuscleChange","handleEquipmentChange","handleDayChange","selectedDay","prevWorkout","day","handleDayTypeChange","selectedDayType","handleProgramGoalChange","selectedProgramGoal","handleDaysPerWeekChange","selectedDaysPerWeek","handleDurationChange","selectedDuration","addDay","newDayId","length","newDay","removeDay","dayId","handleDragEnd","result","destination","source","draggableId","droppableId","index","start","columns","finish","newTaskIds","Array","from","taskIds","splice","newColumn","newState","startTaskIds","newStart","finishTaskIds","newFinish","handleSaveProgram","event","preventDefault","programData","user_id","program_duration","days_per_week","day_type","main_goal","mainGoal","map","workout","order","catalog_exercise_id","sets","set","reps","weight","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","handleCancel","handleSelectExercise","existingIndex","findIndex","ex","exercise_id","newSelectedExercises","_","children","fileName","_jsxFileName","lineNumber","columnNumber","dayTypes","durations","goals","className","onSubmit","type","placeholder","onChange","e","target","option","duration_amount","onClick","onDragEnd","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js"],"sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SearchBar from '../../../components/SearchBar/SearchBar';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport Exercise from '../../../components/Exercise/Exercise';\nimport ExerciseFilters from '../../../components/ExerciseFilters/ExerciseFilters';\nimport useFetchData from '../../../hooks/useFetchData';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport './program.css';\n\nconst CreateProgram = () => {\n  const [program, setProgram] = useState({\n    programName: '',\n    programDuration: '',\n    daysPerWeek: '',\n    dayType: '',\n    programGoal: '',\n    workouts: [],\n    selectedExercises: []\n  });\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedMuscle, setSelectedMuscle] = useState('');\n  const [selectedEquipment, setSelectedEquipment] = useState('');\n  const [state, setState] = useState();\n  const [days, setDays] = useState([\n    { id: 1, name: 'Monday' },\n    { id: 2, name: 'Tuesday' },\n    { id: 3, name: 'Wednesday' },\n    { id: 4, name: 'Thursday' },\n    { id: 5, name: 'Friday' },\n    { id: 6, name: 'Saturday' },\n    { id: 7, name: 'Sunday' }\n  ]);\n\n  const navigate = useNavigate();\n\n  const {\n    data: exercises,\n    isLoading,\n    error\n  } = useFetchData('http://localhost:9025/api/exercise-catalog');\n\n  const filteredExercises = useMemo(() => {\n    return exercises.filter(exercise => {\n      const matchesMuscle =\n        !selectedMuscle ||\n        selectedMuscle === 'All' ||\n        exercise.muscle === selectedMuscle;\n      const matchesEquipment =\n        !selectedEquipment ||\n        selectedEquipment === 'All' ||\n        exercise.equipment === selectedEquipment;\n      const matchesSearchTerm =\n        !searchTerm ||\n        exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n      return matchesMuscle && matchesEquipment && matchesSearchTerm;\n    });\n  }, [searchTerm, selectedMuscle, selectedEquipment, exercises]);\n\n  const handleSearch = value => {\n    setSearchTerm(value);\n  };\n\n  const handleMuscleChange = value => {\n    setSelectedMuscle(value);\n  };\n\n  const handleEquipmentChange = value => {\n    setSelectedEquipment(value);\n  };\n\n  const handleDayChange = selectedDay => {\n    setDays(prevWorkout => ({ ...prevWorkout, day: selectedDay }));\n  };\n\n  const handleDayTypeChange = selectedDayType => {\n    setProgram(prevWorkout => ({ ...prevWorkout, dayType: selectedDayType }));\n  };\n\n  const handleProgramGoalChange = selectedProgramGoal => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programGoal: selectedProgramGoal\n    }));\n  };\n\n  const handleDaysPerWeekChange = selectedDaysPerWeek => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      daysPerWeek: selectedDaysPerWeek\n    }));\n  };\n\n  const handleDurationChange = selectedDuration => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programDuration: selectedDuration\n    }));\n  };\n\n  const addDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1; // Ensure unique ID\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}` // Customize the naming as needed\n    };\n    setDays([...days, newDay]);\n  };\n\n  const removeDay = dayId => {\n    setDays(days.filter(day => day.id !== dayId));\n\n    const handleDragEnd = useCallback(\n      result => {\n        const { destination, source, draggableId } = result;\n\n        // Do nothing if there's no destination (dropped outside a droppable area)\n        if (!destination) {\n          return;\n        }\n\n        // Do nothing if the item is dropped in the same place\n        if (\n          destination.droppableId === source.droppableId &&\n          destination.index === source.index\n        ) {\n          return;\n        }\n\n        const start = state.columns[source.droppableId];\n        const finish = state.columns[destination.droppableId];\n\n        // Moving within the same column\n        if (start === finish) {\n          const newTaskIds = Array.from(start.taskIds);\n          newTaskIds.splice(source.index, 1);\n          newTaskIds.splice(destination.index, 0, draggableId);\n\n          const newColumn = {\n            ...start,\n            taskIds: newTaskIds\n          };\n\n          const newState = {\n            ...state,\n            columns: {\n              ...state.columns,\n              [newColumn.id]: newColumn\n            }\n          };\n\n          setState(newState);\n          return;\n        }\n\n        // Moving from one column to another\n        const startTaskIds = Array.from(start.taskIds);\n        startTaskIds.splice(source.index, 1);\n        const newStart = {\n          ...start,\n          taskIds: startTaskIds\n        };\n\n        const finishTaskIds = Array.from(finish.taskIds);\n        finishTaskIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n          ...finish,\n          taskIds: finishTaskIds\n        };\n\n        const newState = {\n          ...state,\n          columns: {\n            ...state.columns,\n            [newStart.id]: newStart,\n            [newFinish.id]: newFinish\n          }\n        };\n\n        setState(newState);\n      },\n      [state]\n    );\n\n    const handleSaveProgram = async event => {\n      event.preventDefault();\n\n      const programData = {\n        user_id: 2, // hardcoded for now, but should be the logged in user's ID\n        name: program.programName,\n        program_duration: program.programDuration,\n        days_per_week: program.daysPerWeek,\n        day_type: program.dayType,\n        main_goal: program.mainGoal,\n        workouts: program.workouts.map(workout => ({\n          name: workout.name,\n          order: workout.order,\n          exercises: workout.exercises.map(exercise => ({\n            catalog_exercise_id: exercise.catalog_exercise_id,\n            order: exercise.order,\n            sets: exercise.sets.map(set => ({\n              reps: set.reps,\n              weight: set.weight,\n              order: set.order\n            }))\n          }))\n        }))\n      };\n\n      try {\n        const response = await fetch('http://localhost:9025/api/programs', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(programData)\n        });\n\n        if (!response.ok) {\n          throw new Error('Something went wrong with saving the program');\n        }\n\n        // Assuming the backend responds with the created template, you could use it here if needed\n        // const savedTemplate = await response.json();\n\n        // After saving, redirect back to the WorkoutPage\n        navigate('/programs');\n      } catch (error) {\n        console.error('Failed to save the program:', error);\n        // Here, you could set an error state and display it to the user if you wish\n      }\n    };\n\n    const handleCancel = () => {\n      // Redirect to the create workout page\n      navigate('/workouts');\n    };\n\n    const handleSelectExercise = exercise => {\n      setProgram(prevWorkout => {\n        const existingIndex = prevWorkout.selectedExercises.findIndex(\n          ex => ex.exercise_id === exercise.exercise_id\n        );\n\n        let newSelectedExercises;\n        if (existingIndex >= 0) {\n          // Exercise is already selected, remove it\n          newSelectedExercises = prevWorkout.selectedExercises.filter(\n            (_, index) => index !== existingIndex\n          );\n        } else {\n          // Exercise is not selected, add it\n          newSelectedExercises = [...prevWorkout.selectedExercises, exercise];\n        }\n\n        return {\n          ...prevWorkout,\n          selectedExercises: newSelectedExercises\n        };\n      });\n    };\n\n    if (isLoading) return <div>loading...</div>;\n    if (error) return <div>Error loading exercises: {error}</div>;\n\n    const dayTypes = ['Day of Week', 'Numerical'];\n    const durations = ['Days', 'Weeks', 'Months'];\n    const goals = ['Strength', 'Endurance', 'Hypertrophy', 'Weight Loss'];\n\n    return (\n      <div className='page-layout'>\n        <h1 className='page-title'>Create New Program</h1>\n        <form onSubmit={handleSaveProgram}>\n          <div>\n            <div className='input-container'>\n              <input\n                type='text'\n                className='full-width-input'\n                placeholder='Enter Program Name'\n                value={program.name}\n                onChange={e =>\n                  setProgram(prevWorkout => ({\n                    ...prevWorkout,\n                    programName: e.target.value\n                  }))\n                }\n              />\n            </div>\n\n            <div className='program-detail-container'>\n              <div className='program-detail'>\n                <select\n                  id='day-type'\n                  onChange={e => handleDayTypeChange(e.target.value)}\n                  placeholder='Select Day Type'\n                >\n                  <option value=''>Select Day Type</option>\n                  {dayTypes.map((option, index) => (\n                    <option key={index} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className='program-detail'>\n                <div className='input-container'>\n                  <input\n                    type='text'\n                    className='full-width-input'\n                    placeholder='Enter Duration Amount'\n                    value={program.duration_amount}\n                    onChange={e =>\n                      setProgram(prevWorkout => ({\n                        ...prevWorkout,\n                        duration_amount: e.target.value\n                      }))\n                    }\n                  />\n                </div>\n                <select\n                  id='durations'\n                  onChange={e => handleDurationChange(e.target.value)}\n                  placeholder='Select Duration'\n                >\n                  <option value=''>Select Duration</option>\n                  {durations.map((option, index) => (\n                    <option key={index} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className='input-container'>\n                <input\n                  type='text'\n                  id='days-per-week'\n                  placeholder='Enter Days Per Week'\n                  value={program.daysPerWeek}\n                  onChange={e => handleDaysPerWeekChange(e.target.value)}\n                />\n              </div>\n\n              <div className='program-detail'>\n                <select\n                  id='program_goal'\n                  onChange={e => handleProgramGoalChange(e.target.value)}\n                >\n                  <option value=''>Select Program Goal</option>\n                  {goals.map((option, index) => (\n                    <option key={index} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n          <button onClick={addDay}>Add Day</button>\n\n          <DragDropContext onDragEnd={handleDragEnd}>\n            {days.map(day => (\n              <div key={day.id}>\n                <DayContainer day={day.name} />\n                <button onClick={() => removeDay(day.id)}>\n                  Remove {day.name}\n                </button>\n              </div>\n            ))}\n\n            {/* <SearchBar onChange={handleSearch} />\n          <ExerciseFilters\n            onMuscleChange={handleMuscleChange}\n            onEquipmentChange={handleEquipmentChange}\n          />\n\n          <div className='exercise-container'>\n            {filteredExercises.map(exercise => (\n              <Exercise\n                key={exercise.exercise_id}\n                name={exercise.name}\n                muscle={exercise.muscle}\n                equipment={exercise.equipment}\n                image={`http://localhost:9025/${exercise.file_path}`}\n                isSelectable={true} // Make the exercise selectable in this context\n                isSelected={program.selectedExercises.some(\n                  ex => ex.exercise_id === exercise.exercise_id\n                )}\n                onClick={() => handleSelectExercise(exercise)}\n              />\n            ))}\n          </div> */}\n          </DragDropContext>\n          <div className='button-container'>\n            <button id='save-program-button' onClick={handleSaveProgram}>\n              Save\n            </button>\n            <button id='cancel-program-button' onClick={handleCancel}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  };\n};\n\nexport default CreateProgram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}