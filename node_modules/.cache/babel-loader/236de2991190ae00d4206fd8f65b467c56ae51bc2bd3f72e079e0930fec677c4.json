{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nfunction setReducer(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.ADD_SET:\n      {\n        const {\n          exerciseId,\n          weight,\n          reps\n        } = action.payload;\n        const setId = uuidv4();\n        const newSet = {\n          id: setId,\n          weight,\n          reps,\n          order: (state[exerciseId] || []).length + 1\n        };\n        const newState = {\n          ...state,\n          [exerciseId]: [...(state[exerciseId] || []), newSet]\n        };\n        return newState;\n      }\n    case actionTypes.UPDATE_SET:\n      {\n        const {\n          exerciseId,\n          updatedSet\n        } = action.payload;\n        return {\n          ...state,\n          [exerciseId]: state[exerciseId].map(set => set.id === updatedSet.id ? {\n            ...set,\n            ...updatedSet,\n            id: updatedSet.id\n          } : set)\n        };\n      }\n    case actionTypes.DELETE_SET:\n      {\n        const {\n          exerciseId,\n          setId\n        } = action.payload;\n        const updatedSets = state[exerciseId].filter(set => set.id !== setId).map((set, index) => ({\n          ...set,\n          order: index + 1\n        }));\n        return {\n          ...state,\n          [exerciseId]: updatedSets\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport { setReducer };","map":{"version":3,"names":["v4","uuidv4","actionTypes","setReducer","state","action","type","ADD_SET","exerciseId","weight","reps","payload","setId","newSet","id","order","length","newState","UPDATE_SET","updatedSet","map","set","DELETE_SET","updatedSets","filter","index"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/setReducer.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\n\nfunction setReducer(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.ADD_SET: {\n      const { exerciseId, weight, reps } = action.payload;\n      const setId = uuidv4();\n      const newSet = {\n        id: setId,\n        weight,\n        reps,\n        order: (state[exerciseId] || []).length + 1\n      };\n\n      const newState = {\n        ...state,\n        [exerciseId]: [...(state[exerciseId] || []), newSet]\n      };\n\n      return newState;\n    }\n\n    case actionTypes.UPDATE_SET: {\n      const { exerciseId, updatedSet } = action.payload;\n\n      return {\n        ...state,\n        [exerciseId]: state[exerciseId].map(set =>\n          set.id === updatedSet.id\n            ? { ...set, ...updatedSet, id: updatedSet.id }\n            : set\n        )\n      };\n    }\n\n    case actionTypes.DELETE_SET: {\n      const { exerciseId, setId } = action.payload;\n\n      const updatedSets = state[exerciseId]\n        .filter(set => set.id !== setId)\n        .map((set, index) => ({ ...set, order: index + 1 }));\n\n      return {\n        ...state,\n        [exerciseId]: updatedSets\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport { setReducer };\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,SAASC,UAAUA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,EAAE;EACtC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKJ,WAAW,CAACK,OAAO;MAAE;QACxB,MAAM;UAAEC,UAAU;UAAEC,MAAM;UAAEC;QAAK,CAAC,GAAGL,MAAM,CAACM,OAAO;QACnD,MAAMC,KAAK,GAAGX,MAAM,CAAC,CAAC;QACtB,MAAMY,MAAM,GAAG;UACbC,EAAE,EAAEF,KAAK;UACTH,MAAM;UACNC,IAAI;UACJK,KAAK,EAAE,CAACX,KAAK,CAACI,UAAU,CAAC,IAAI,EAAE,EAAEQ,MAAM,GAAG;QAC5C,CAAC;QAED,MAAMC,QAAQ,GAAG;UACf,GAAGb,KAAK;UACR,CAACI,UAAU,GAAG,CAAC,IAAIJ,KAAK,CAACI,UAAU,CAAC,IAAI,EAAE,CAAC,EAAEK,MAAM;QACrD,CAAC;QAED,OAAOI,QAAQ;MACjB;IAEA,KAAKf,WAAW,CAACgB,UAAU;MAAE;QAC3B,MAAM;UAAEV,UAAU;UAAEW;QAAW,CAAC,GAAGd,MAAM,CAACM,OAAO;QAEjD,OAAO;UACL,GAAGP,KAAK;UACR,CAACI,UAAU,GAAGJ,KAAK,CAACI,UAAU,CAAC,CAACY,GAAG,CAACC,GAAG,IACrCA,GAAG,CAACP,EAAE,KAAKK,UAAU,CAACL,EAAE,GACpB;YAAE,GAAGO,GAAG;YAAE,GAAGF,UAAU;YAAEL,EAAE,EAAEK,UAAU,CAACL;UAAG,CAAC,GAC5CO,GACN;QACF,CAAC;MACH;IAEA,KAAKnB,WAAW,CAACoB,UAAU;MAAE;QAC3B,MAAM;UAAEd,UAAU;UAAEI;QAAM,CAAC,GAAGP,MAAM,CAACM,OAAO;QAE5C,MAAMY,WAAW,GAAGnB,KAAK,CAACI,UAAU,CAAC,CAClCgB,MAAM,CAACH,GAAG,IAAIA,GAAG,CAACP,EAAE,KAAKF,KAAK,CAAC,CAC/BQ,GAAG,CAAC,CAACC,GAAG,EAAEI,KAAK,MAAM;UAAE,GAAGJ,GAAG;UAAEN,KAAK,EAAEU,KAAK,GAAG;QAAE,CAAC,CAAC,CAAC;QAEtD,OAAO;UACL,GAAGrB,KAAK;UACR,CAACI,UAAU,GAAGe;QAChB,CAAC;MACH;IACA;MACE,OAAOnB,KAAK;EAChB;AACF;AAEA,SAASD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}