{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/contexts/programContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useState } from 'react';\nimport { actionTypes } from '../../src/actions/actionTypes';\nimport rootReducer from '../../src/reducers/rootReducer';\nimport { initialState } from '../reducers/initialState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProgramContext = /*#__PURE__*/createContext();\nexport const ProgramProvider = ({\n  children\n}) => {\n  _s();\n  const [programState, programDispatch] = useReducer(rootReducer, initialState);\n  const [activeWorkout, setActiveWorkout] = useState(null);\n\n  // Function to update the active workout\n  const updateActiveWorkout = workout => {\n    setActiveWorkout(workout);\n  };\n\n  //Save program to the database\n  const saveProgram = async newProgram => {\n    programDispatch({\n      type: actionTypes.SAVE_PROGRAM_START\n    });\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newProgram)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const savedProgram = await response.json();\n      programDispatch({\n        type: actionTypes.SAVE_PROGRAM_SUCCESS,\n        payload: savedProgram\n      });\n    } catch (error) {\n      programDispatch({\n        type: actionTypes.SAVE_PROGRAM_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n\n  // For updating basic program information like name, duration, etc.\n\n  const updateProgramDetails = details => {\n    programDispatch({\n      type: actionTypes.UPDATE_PROGRAM_DETAILS,\n      payload: details\n    });\n  };\n  const addWorkout = workout => {\n    console.log('addWorkout called from context');\n    programDispatch({\n      type: actionTypes.ADD_WORKOUT,\n      payload: workout\n    });\n  };\n  const updateWorkout = workout => {\n    programDispatch({\n      type: actionTypes.UPDATE_WORKOUT,\n      payload: workout\n    });\n  };\n  const deleteWorkout = workoutId => {\n    programDispatch({\n      type: actionTypes.DELETE_WORKOUT,\n      payload: workoutId\n    });\n  };\n  const addExercise = (workoutId, exercises) => {\n    programDispatch({\n      type: actionTypes.ADD_EXERCISE,\n      payload: {\n        workoutId,\n        exercises\n      }\n    });\n  };\n  // Function to update an exercise\n\n  const updateExercise = (workoutId, updatedExercise) => {\n    programDispatch({\n      type: actionTypes.UPDATE_EXERCISE,\n      payload: {\n        workoutId,\n        updatedExercise\n      }\n    });\n  };\n\n  // Function to delete exercise from  a specific workout\n\n  const deleteExercise = (workoutId, exerciseId) => {\n    programDispatch({\n      type: actionTypes.DELETE_EXERCISE,\n      payload: {\n        workoutId,\n        exerciseId\n      }\n    });\n  };\n\n  // Function to add sets to a specific exercise\n\n  const addSet = (workoutId, exerciseId, newSet) => {\n    programDispatch({\n      type: actionTypes.ADD_SET,\n      payload: {\n        workoutId,\n        exerciseId,\n        newSet\n      }\n    });\n  };\n  const updateSet = (workoutId, exerciseId, updatedSet) => {\n    programDispatch({\n      type: actionTypes.UPDATE_SET,\n      payload: {\n        workoutId,\n        exerciseId,\n        updatedSet\n      }\n    });\n  };\n  const deleteSet = (workoutId, exerciseId, setId) => {\n    programDispatch({\n      type: actionTypes.DELETE_SET,\n      payload: {\n        workoutId,\n        exerciseId,\n        setId\n      }\n    });\n  };\n  console.log('ProgramProvider: programState:', programState);\n  return /*#__PURE__*/_jsxDEV(ProgramContext.Provider, {\n    value: {\n      programState,\n      programDispatch,\n      updateProgramDetails,\n      addWorkout,\n      updateWorkout,\n      deleteWorkout,\n      updateActiveWorkout,\n      addExercise,\n      updateExercise,\n      deleteExercise,\n      addSet,\n      updateSet,\n      deleteSet,\n      saveProgram\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgramProvider, \"PqzwAewpx1SIDI0duiOIkU2Swl8=\");\n_c = ProgramProvider;\nvar _c;\n$RefreshReg$(_c, \"ProgramProvider\");","map":{"version":3,"names":["createContext","useReducer","useState","actionTypes","rootReducer","initialState","jsxDEV","_jsxDEV","ProgramContext","ProgramProvider","children","_s","programState","programDispatch","activeWorkout","setActiveWorkout","updateActiveWorkout","workout","saveProgram","newProgram","type","SAVE_PROGRAM_START","response","fetch","method","headers","body","JSON","stringify","ok","Error","savedProgram","json","SAVE_PROGRAM_SUCCESS","payload","error","SAVE_PROGRAM_FAILURE","message","updateProgramDetails","details","UPDATE_PROGRAM_DETAILS","addWorkout","console","log","ADD_WORKOUT","updateWorkout","UPDATE_WORKOUT","deleteWorkout","workoutId","DELETE_WORKOUT","addExercise","exercises","ADD_EXERCISE","updateExercise","updatedExercise","UPDATE_EXERCISE","deleteExercise","exerciseId","DELETE_EXERCISE","addSet","newSet","ADD_SET","updateSet","updatedSet","UPDATE_SET","deleteSet","setId","DELETE_SET","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/contexts/programContext.js"],"sourcesContent":["import { createContext, useReducer, useState } from 'react';\nimport { actionTypes } from '../../src/actions/actionTypes';\nimport rootReducer from '../../src/reducers/rootReducer';\nimport { initialState } from '../reducers/initialState';\n\nexport const ProgramContext = createContext();\n\nexport const ProgramProvider = ({ children }) => {\n  const [programState, programDispatch] = useReducer(rootReducer, initialState);\n  const [activeWorkout, setActiveWorkout] = useState(null);\n\n  // Function to update the active workout\n  const updateActiveWorkout = workout => {\n    setActiveWorkout(workout);\n  };\n\n  //Save program to the database\n  const saveProgram = async newProgram => {\n    programDispatch({ type: actionTypes.SAVE_PROGRAM_START });\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newProgram)\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const savedProgram = await response.json();\n      programDispatch({\n        type: actionTypes.SAVE_PROGRAM_SUCCESS,\n        payload: savedProgram\n      });\n    } catch (error) {\n      programDispatch({\n        type: actionTypes.SAVE_PROGRAM_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n\n  // For updating basic program information like name, duration, etc.\n\n  const updateProgramDetails = details => {\n    programDispatch({\n      type: actionTypes.UPDATE_PROGRAM_DETAILS,\n      payload: details\n    });\n  };\n\n  const addWorkout = workout => {\n    console.log('addWorkout called from context');\n    programDispatch({\n      type: actionTypes.ADD_WORKOUT,\n      payload: workout\n    });\n  };\n\n  const updateWorkout = workout => {\n    programDispatch({\n      type: actionTypes.UPDATE_WORKOUT,\n      payload: workout\n    });\n  };\n\n  const deleteWorkout = workoutId => {\n    programDispatch({\n      type: actionTypes.DELETE_WORKOUT,\n      payload: workoutId\n    });\n  };\n\n  const addExercise = (workoutId, exercises) => {\n    programDispatch({\n      type: actionTypes.ADD_EXERCISE,\n      payload: { workoutId, exercises }\n    });\n  };\n  // Function to update an exercise\n\n  const updateExercise = (workoutId, updatedExercise) => {\n    programDispatch({\n      type: actionTypes.UPDATE_EXERCISE,\n      payload: { workoutId, updatedExercise }\n    });\n  };\n\n  // Function to delete exercise from  a specific workout\n\n  const deleteExercise = (workoutId, exerciseId) => {\n    programDispatch({\n      type: actionTypes.DELETE_EXERCISE,\n      payload: { workoutId, exerciseId }\n    });\n  };\n\n  // Function to add sets to a specific exercise\n\n  const addSet = (workoutId, exerciseId, newSet) => {\n    programDispatch({\n      type: actionTypes.ADD_SET,\n      payload: { workoutId, exerciseId, newSet }\n    });\n  };\n\n  const updateSet = (workoutId, exerciseId, updatedSet) => {\n    programDispatch({\n      type: actionTypes.UPDATE_SET,\n      payload: { workoutId, exerciseId, updatedSet }\n    });\n  };\n\n  const deleteSet = (workoutId, exerciseId, setId) => {\n    programDispatch({\n      type: actionTypes.DELETE_SET,\n      payload: { workoutId, exerciseId, setId }\n    });\n  };\n\n  console.log('ProgramProvider: programState:', programState);\n\n  return (\n    <ProgramContext.Provider\n      value={{\n        programState,\n        programDispatch,\n        updateProgramDetails,\n        addWorkout,\n        updateWorkout,\n        deleteWorkout,\n        updateActiveWorkout,\n        addExercise,\n        updateExercise,\n        deleteExercise,\n        addSet,\n        updateSet,\n        deleteSet,\n        saveProgram\n      }}\n    >\n      {children}\n    </ProgramContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}