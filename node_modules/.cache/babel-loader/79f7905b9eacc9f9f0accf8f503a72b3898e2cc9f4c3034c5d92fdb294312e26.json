{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/MusclesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MusclesPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusclesPage = () => {\n  _s();\n  const [muscles, setMuscles] = useState([]);\n  useEffect(() => {\n    const fetchMuscles = async () => {\n      try {\n        const response = await fetch('http://localhost:9025/api/muscles');\n        const data = await response.json();\n        setMuscles(data);\n      } catch (error) {\n        console.error('Failed to fetch muscles:', error);\n      }\n    };\n    fetchMuscles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: muscles.map(muscle => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: muscle.muscle_group_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:9025/${muscle.file_path}`,\n        alt: muscle.muscle_group_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, muscle.muscle_group_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(MusclesPage, \"TDHhT2SJZeta3AkXIGyoevVZ/FU=\");\n_c = MusclesPage;\nexport default MusclesPage;\nvar _c;\n$RefreshReg$(_c, \"MusclesPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MusclesPage","_s","muscles","setMuscles","fetchMuscles","response","fetch","data","json","error","console","children","map","muscle","muscle_group_name","fileName","_jsxFileName","lineNumber","columnNumber","src","file_path","alt","muscle_group_id","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/MusclesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MusclesPage.css';\n\nconst MusclesPage = () => {\n  const [muscles, setMuscles] = useState([]);\n\n  useEffect(() => {\n    const fetchMuscles = async () => {\n      try {\n        const response = await fetch('http://localhost:9025/api/muscles');\n        const data = await response.json();\n        setMuscles(data);\n      } catch (error) {\n        console.error('Failed to fetch muscles:', error);\n      }\n    };\n\n    fetchMuscles();\n  }, []);\n\n  return (\n    <div>\n      {muscles.map(muscle => (\n        <div key={muscle.muscle_group_id}>\n          <h3>{muscle.muscle_group_name}</h3>\n          <img\n            src={`http://localhost:9025/${muscle.file_path}`}\n            alt={muscle.muscle_group_name}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MusclesPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,UAAU,CAACI,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDL,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,EACGT,OAAO,CAACU,GAAG,CAACC,MAAM,iBACjBd,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAKE,MAAM,CAACC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnCnB,OAAA;QACEoB,GAAG,EAAG,yBAAwBN,MAAM,CAACO,SAAU,EAAE;QACjDC,GAAG,EAAER,MAAM,CAACC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA,GALML,MAAM,CAACS,eAAe;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAM3B,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9BID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}