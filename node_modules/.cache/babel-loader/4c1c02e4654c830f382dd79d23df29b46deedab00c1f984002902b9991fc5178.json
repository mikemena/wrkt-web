{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/ExercisesListPage.js\",\n  _s = $RefreshSig$();\n// src/pages/ExercisesListPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExercisesListPage = () => {\n  _s();\n  const [exercises, setExercises] = useState([]);\n  const location = useLocation();\n  const [selectedMuscle, setSelectedMuscle] = useState('all');\n  const [selectedEquipment, setSelectedEquipment] = useState('all');\n\n  // Effect to fetch exercises when the component mounts or when filters change\n  useEffect(() => {\n    var _location$state;\n    // Check if a muscle was passed in the location state\n    const muscle = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedMuscle;\n    setSelectedMuscle(muscle);\n    const fetchExercises = async () => {\n      try {\n        // Make an API call to fetch exercises for the selected muscle\n        // If no muscle is selected, fetch all exercises or handle accordingly\n        const response = await fetch(`http://localhost:9025/api/exercises/muscles/${muscle}`);\n        const data = await response.json();\n        setExercises(data);\n      } catch (error) {\n        console.error('Failed to fetch exercises:', error);\n      }\n    };\n    if (muscle) {\n      fetchExercises();\n    }\n  }, [location.state]);\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisesListPage, \"FgGek1dIfx+P3hyZv4P3AapZTlI=\", false, function () {\n  return [useLocation];\n});\n_c = ExercisesListPage;\nexport default ExercisesListPage;\nvar _c;\n$RefreshReg$(_c, \"ExercisesListPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","SearchBar","jsxDEV","_jsxDEV","ExercisesListPage","_s","exercises","setExercises","location","selectedMuscle","setSelectedMuscle","selectedEquipment","setSelectedEquipment","_location$state","muscle","state","fetchExercises","response","fetch","data","json","error","console","handleSearch","query","setSearchQuery","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/ExercisesListPage.js"],"sourcesContent":["// src/pages/ExercisesListPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SearchBar from '../components/SearchBar/SearchBar';\n\nconst ExercisesListPage = () => {\n  const [exercises, setExercises] = useState([]);\n  const location = useLocation();\n  const [selectedMuscle, setSelectedMuscle] = useState('all');\n  const [selectedEquipment, setSelectedEquipment] = useState('all');\n\n  // Effect to fetch exercises when the component mounts or when filters change\n  useEffect(() => {\n    // Check if a muscle was passed in the location state\n    const muscle = location.state?.selectedMuscle;\n    setSelectedMuscle(muscle);\n\n    const fetchExercises = async () => {\n      try {\n        // Make an API call to fetch exercises for the selected muscle\n        // If no muscle is selected, fetch all exercises or handle accordingly\n        const response = await fetch(\n          `http://localhost:9025/api/exercises/muscles/${muscle}`\n        );\n        const data = await response.json();\n        setExercises(data);\n      } catch (error) {\n        console.error('Failed to fetch exercises:', error);\n      }\n    };\n\n    if (muscle) {\n      fetchExercises();\n    }\n  }, [location.state]);\n\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n\n  return (\n    <div>\n      <SearchBar onSearch={handleSearch} />\n    </div>\n  );\n};\n\nexport default ExercisesListPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACAC,SAAS,CAAC,MAAM;IAAA,IAAAc,eAAA;IACd;IACA,MAAMC,MAAM,IAAAD,eAAA,GAAGL,QAAQ,CAACO,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAgBJ,cAAc;IAC7CC,iBAAiB,CAACI,MAAM,CAAC;IAEzB,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,+CAA8CJ,MAAO,EACxD,CAAC;QACD,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCb,YAAY,CAACY,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAED,IAAIP,MAAM,EAAE;MACVE,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACR,QAAQ,CAACO,KAAK,CAAC,CAAC;EAEpB,MAAMQ,YAAY,GAAGC,KAAK,IAAI;IAC5BC,cAAc,CAACD,KAAK,CAAC;EACvB,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,eACEvB,OAAA,CAACF,SAAS;MAAC0B,QAAQ,EAAEJ;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAxCID,iBAAiB;EAAA,QAEJJ,WAAW;AAAA;AAAAgC,EAAA,GAFxB5B,iBAAiB;AA0CvB,eAAeA,iBAAiB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}