{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nfunction exerciseReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_EXERCISE':\n      // Assuming action.payload contains all necessary details for the exercise,\n      // including the workoutId to which it should be linked.\n      const newId = uuidv4();\n      return {\n        ...state,\n        [newId]: {\n          id: newId,\n          ...action.payload,\n          isNew: true\n        }\n      };\n    case 'UPDATE_EXERCISE':\n      // action.payload should include the id of the exercise to update\n      // and the properties to be updated.\n      if (state[action.payload.id]) {\n        return {\n          ...state,\n          [action.payload.id]: {\n            ...state[action.payload.id],\n            ...action.payload.updates\n          }\n        };\n      }\n      return state;\n    case 'DELETE_EXERCISE':\n      // action.payload should be the id of the exercise to delete.\n      const newState = {\n        ...state\n      };\n      delete newState[action.payload];\n      return newState;\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["v4","uuidv4","exerciseReducer","state","initialState","action","type","newId","id","payload","isNew","updates","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nfunction exerciseReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_EXERCISE':\n      // Assuming action.payload contains all necessary details for the exercise,\n      // including the workoutId to which it should be linked.\n      const newId = uuidv4();\n      return {\n        ...state,\n        [newId]: {\n          id: newId,\n          ...action.payload,\n          isNew: true\n        }\n      };\n\n    case 'UPDATE_EXERCISE':\n      // action.payload should include the id of the exercise to update\n      // and the properties to be updated.\n      if (state[action.payload.id]) {\n        return {\n          ...state,\n          [action.payload.id]: {\n            ...state[action.payload.id],\n            ...action.payload.updates\n          }\n        };\n      }\n      return state;\n\n    case 'DELETE_EXERCISE':\n      // action.payload should be the id of the exercise to delete.\n      const newState = { ...state };\n      delete newState[action.payload];\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,SAASC,eAAeA,CAACC,KAAK,GAAGC,YAAY,EAAEC,MAAM,EAAE;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB;MACA;MACA,MAAMC,KAAK,GAAGN,MAAM,CAAC,CAAC;MACtB,OAAO;QACL,GAAGE,KAAK;QACR,CAACI,KAAK,GAAG;UACPC,EAAE,EAAED,KAAK;UACT,GAAGF,MAAM,CAACI,OAAO;UACjBC,KAAK,EAAE;QACT;MACF,CAAC;IAEH,KAAK,iBAAiB;MACpB;MACA;MACA,IAAIP,KAAK,CAACE,MAAM,CAACI,OAAO,CAACD,EAAE,CAAC,EAAE;QAC5B,OAAO;UACL,GAAGL,KAAK;UACR,CAACE,MAAM,CAACI,OAAO,CAACD,EAAE,GAAG;YACnB,GAAGL,KAAK,CAACE,MAAM,CAACI,OAAO,CAACD,EAAE,CAAC;YAC3B,GAAGH,MAAM,CAACI,OAAO,CAACE;UACpB;QACF,CAAC;MACH;MACA,OAAOR,KAAK;IAEd,KAAK,iBAAiB;MACpB;MACA,MAAMS,QAAQ,GAAG;QAAE,GAAGT;MAAM,CAAC;MAC7B,OAAOS,QAAQ,CAACP,MAAM,CAACI,OAAO,CAAC;MAC/B,OAAOG,QAAQ;IAEjB;MACE,OAAOT,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}