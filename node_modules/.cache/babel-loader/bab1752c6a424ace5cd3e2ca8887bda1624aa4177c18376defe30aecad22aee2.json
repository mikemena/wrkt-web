{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\nfunction setReducer(state = initialState.sets, action) {\n  switch (action.type) {\n    case actionTypes.ADD_SET:\n      {\n        const {\n          exerciseId,\n          weight,\n          reps\n        } = action.payload;\n        const setId = uuidv4();\n        const newSet = {\n          id: setId,\n          weight,\n          reps,\n          order: (state[exerciseId] || []).length + 1\n        };\n        console.log('Adding new set:', newSet);\n        return {\n          ...state,\n          [exerciseId]: [...(state[exerciseId] || []), newSet]\n        };\n      }\n    case actionTypes.UPDATE_SET:\n      {\n        const {\n          exerciseId,\n          updatedSet\n        } = action.payload;\n        return {\n          ...state,\n          [exerciseId]: state[exerciseId].map(set => set.id === updatedSet.id ? {\n            ...set,\n            ...updatedSet\n          } : set)\n        };\n      }\n    case actionTypes.DELETE_SET:\n      {\n        const {\n          exerciseId,\n          setId\n        } = action.payload;\n        return {\n          ...state,\n          [exerciseId]: state[exerciseId].filter(set => set.id !== setId)\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport { setReducer };","map":{"version":3,"names":["v4","uuidv4","actionTypes","initialState","setReducer","state","sets","action","type","ADD_SET","exerciseId","weight","reps","payload","setId","newSet","id","order","length","console","log","UPDATE_SET","updatedSet","map","set","DELETE_SET","filter"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/setReducer.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\n\nfunction setReducer(state = initialState.sets, action) {\n  switch (action.type) {\n    case actionTypes.ADD_SET: {\n      const { exerciseId, weight, reps } = action.payload;\n      const setId = uuidv4();\n      const newSet = {\n        id: setId,\n        weight,\n        reps,\n        order: (state[exerciseId] || []).length + 1\n      };\n      console.log('Adding new set:', newSet);\n\n      return {\n        ...state,\n        [exerciseId]: [...(state[exerciseId] || []), newSet]\n      };\n    }\n\n    case actionTypes.UPDATE_SET: {\n      const { exerciseId, updatedSet } = action.payload;\n\n      return {\n        ...state,\n        [exerciseId]: state[exerciseId].map(set =>\n          set.id === updatedSet.id ? { ...set, ...updatedSet } : set\n        )\n      };\n    }\n\n    case actionTypes.DELETE_SET: {\n      const { exerciseId, setId } = action.payload;\n\n      return {\n        ...state,\n        [exerciseId]: state[exerciseId].filter(set => set.id !== setId)\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { setReducer };\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,SAASC,UAAUA,CAACC,KAAK,GAAGF,YAAY,CAACG,IAAI,EAAEC,MAAM,EAAE;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,WAAW,CAACO,OAAO;MAAE;QACxB,MAAM;UAAEC,UAAU;UAAEC,MAAM;UAAEC;QAAK,CAAC,GAAGL,MAAM,CAACM,OAAO;QACnD,MAAMC,KAAK,GAAGb,MAAM,CAAC,CAAC;QACtB,MAAMc,MAAM,GAAG;UACbC,EAAE,EAAEF,KAAK;UACTH,MAAM;UACNC,IAAI;UACJK,KAAK,EAAE,CAACZ,KAAK,CAACK,UAAU,CAAC,IAAI,EAAE,EAAEQ,MAAM,GAAG;QAC5C,CAAC;QACDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEL,MAAM,CAAC;QAEtC,OAAO;UACL,GAAGV,KAAK;UACR,CAACK,UAAU,GAAG,CAAC,IAAIL,KAAK,CAACK,UAAU,CAAC,IAAI,EAAE,CAAC,EAAEK,MAAM;QACrD,CAAC;MACH;IAEA,KAAKb,WAAW,CAACmB,UAAU;MAAE;QAC3B,MAAM;UAAEX,UAAU;UAAEY;QAAW,CAAC,GAAGf,MAAM,CAACM,OAAO;QAEjD,OAAO;UACL,GAAGR,KAAK;UACR,CAACK,UAAU,GAAGL,KAAK,CAACK,UAAU,CAAC,CAACa,GAAG,CAACC,GAAG,IACrCA,GAAG,CAACR,EAAE,KAAKM,UAAU,CAACN,EAAE,GAAG;YAAE,GAAGQ,GAAG;YAAE,GAAGF;UAAW,CAAC,GAAGE,GACzD;QACF,CAAC;MACH;IAEA,KAAKtB,WAAW,CAACuB,UAAU;MAAE;QAC3B,MAAM;UAAEf,UAAU;UAAEI;QAAM,CAAC,GAAGP,MAAM,CAACM,OAAO;QAE5C,OAAO;UACL,GAAGR,KAAK;UACR,CAACK,UAAU,GAAGL,KAAK,CAACK,UAAU,CAAC,CAACgB,MAAM,CAACF,GAAG,IAAIA,GAAG,CAACR,EAAE,KAAKF,KAAK;QAChE,CAAC;MACH;IAEA;MACE,OAAOT,KAAK;EAChB;AACF;AAEA,SAASD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}