{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SearchBar from '../../../components/SearchBar/SearchBar';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport Exercise from '../../../components/Exercise/Exercise';\nimport ExerciseFilters from '../../../components/ExerciseFilters/ExerciseFilters';\nimport useFetchData from '../../../hooks/useFetchData';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './program.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateProgram = () => {\n  _s();\n  const [program, setProgram] = useState({\n    programName: '',\n    programDuration: '',\n    daysPerWeek: '',\n    dayType: '',\n    programGoal: '',\n    workouts: [],\n    selectedExercises: []\n  });\n  const [days, setDays] = useState(['Monday']);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedMuscle, setSelectedMuscle] = useState('');\n  const [selectedEquipment, setSelectedEquipment] = useState('');\n  const [state, setState] = useState();\n  const navigate = useNavigate();\n  const {\n    data: exercises,\n    isLoading,\n    error\n  } = useFetchData('http://localhost:9025/api/exercise-catalog');\n  const filteredExercises = useMemo(() => {\n    return exercises.filter(exercise => {\n      const matchesMuscle = !selectedMuscle || selectedMuscle === 'All' || exercise.muscle === selectedMuscle;\n      const matchesEquipment = !selectedEquipment || selectedEquipment === 'All' || exercise.equipment === selectedEquipment;\n      const matchesSearchTerm = !searchTerm || exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n      return matchesMuscle && matchesEquipment && matchesSearchTerm;\n    });\n  }, [searchTerm, selectedMuscle, selectedEquipment, exercises]);\n  const handleSearch = value => {\n    setSearchTerm(value);\n  };\n  const handleMuscleChange = value => {\n    setSelectedMuscle(value);\n  };\n  const handleEquipmentChange = value => {\n    setSelectedEquipment(value);\n  };\n  const handleDayChange = selectedDay => {\n    setDays(prevWorkout => ({\n      ...prevWorkout,\n      day: selectedDay\n    }));\n  };\n  const handleDayTypeChange = selectedDayType => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      dayType: selectedDayType\n    }));\n  };\n  const handleProgramGoalChange = selectedProgramGoal => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programGoal: selectedProgramGoal\n    }));\n  };\n  const handleDaysPerWeekChange = selectedDaysPerWeek => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      daysPerWeek: selectedDaysPerWeek\n    }));\n  };\n  const handleDurationChange = selectedDuration => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programDuration: selectedDuration\n    }));\n  };\n  const handleDragEnd = useCallback(result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    // Do nothing if there's no destination (dropped outside a droppable area)\n    if (!destination) {\n      return;\n    }\n\n    // Do nothing if the item is dropped in the same place\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const start = state.columns[source.droppableId];\n    const finish = state.columns[destination.droppableId];\n\n    // Moving within the same column\n    if (start === finish) {\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds\n      };\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [newColumn.id]: newColumn\n        }\n      };\n      setState(newState);\n      return;\n    }\n\n    // Moving from one column to another\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds\n    };\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds\n    };\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish\n      }\n    };\n    setState(newState);\n  }, [state]);\n  const handleSaveProgram = async event => {\n    event.preventDefault();\n    const programData = {\n      user_id: 2,\n      // hardcoded for now, but should be the logged in user's ID\n      name: program.programName,\n      program_duration: program.programDuration,\n      days_per_week: program.daysPerWeek,\n      day_type: program.dayType,\n      main_goal: program.mainGoal,\n      workouts: program.workouts.map(workout => ({\n        name: workout.name,\n        order: workout.order,\n        exercises: workout.exercises.map(exercise => ({\n          catalog_exercise_id: exercise.catalog_exercise_id,\n          order: exercise.order,\n          sets: exercise.sets.map(set => ({\n            reps: set.reps,\n            weight: set.weight,\n            order: set.order\n          }))\n        }))\n      }))\n    };\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(programData)\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong with saving the program');\n      }\n\n      // Assuming the backend responds with the created template, you could use it here if needed\n      // const savedTemplate = await response.json();\n\n      // After saving, redirect back to the WorkoutPage\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n      // Here, you could set an error state and display it to the user if you wish\n    }\n  };\n  const handleCancel = () => {\n    // Redirect to the create workout page\n    navigate('/workouts');\n  };\n  const handleSelectExercise = exercise => {\n    setProgram(prevWorkout => {\n      const existingIndex = prevWorkout.selectedExercises.findIndex(ex => ex.exercise_id === exercise.exercise_id);\n      let newSelectedExercises;\n      if (existingIndex >= 0) {\n        // Exercise is already selected, remove it\n        newSelectedExercises = prevWorkout.selectedExercises.filter((_, index) => index !== existingIndex);\n      } else {\n        // Exercise is not selected, add it\n        newSelectedExercises = [...prevWorkout.selectedExercises, exercise];\n      }\n      return {\n        ...prevWorkout,\n        selectedExercises: newSelectedExercises\n      };\n    });\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading exercises: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 21\n  }, this);\n  const dayTypes = ['Day of Week', 'Numerical'];\n  const durations = ['Days', 'Weeks', 'Months'];\n  const goals = ['Strength', 'Endurance', 'Hypertrophy', 'Weight Loss'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Create New Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSaveProgram,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"full-width-input\",\n            placeholder: \"Enter Program Name\",\n            value: program.name,\n            onChange: e => setProgram(prevWorkout => ({\n              ...prevWorkout,\n              programName: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"program-detail-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"program-detail\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"day-type\",\n              onChange: e => handleDayTypeChange(e.target.value),\n              placeholder: \"Select Day Type\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Day Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), dayTypes.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"program-detail\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"full-width-input\",\n                placeholder: \"Enter Duration Amount\",\n                value: program.duration_amount,\n                onChange: e => setProgram(prevWorkout => ({\n                  ...prevWorkout,\n                  duration_amount: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"durations\",\n              onChange: e => handleDurationChange(e.target.value),\n              placeholder: \"Select Duration\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), durations.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"days-per-week\",\n              placeholder: \"Enter Days Per Week\",\n              value: program.daysPerWeek,\n              onChange: e => handleDaysPerWeekChange(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"program-detail\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"program_goal\",\n              onChange: e => handleProgramGoalChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Program Goal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), goals.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(DayContainer, {\n          day: days\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"save-program-button\",\n          onClick: handleSaveProgram,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"cancel-program-button\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProgram, \"0bNc6itOUhHO6NTCXV1k4j+8+VE=\", false, function () {\n  return [useNavigate, useFetchData];\n});\n_c = CreateProgram;\nexport default CreateProgram;\nvar _c;\n$RefreshReg$(_c, \"CreateProgram\");","map":{"version":3,"names":["React","useState","useMemo","useCallback","useNavigate","SearchBar","DayContainer","Exercise","ExerciseFilters","useFetchData","DragDropContext","jsxDEV","_jsxDEV","CreateProgram","_s","program","setProgram","programName","programDuration","daysPerWeek","dayType","programGoal","workouts","selectedExercises","days","setDays","searchTerm","setSearchTerm","selectedMuscle","setSelectedMuscle","selectedEquipment","setSelectedEquipment","state","setState","navigate","data","exercises","isLoading","error","filteredExercises","filter","exercise","matchesMuscle","muscle","matchesEquipment","equipment","matchesSearchTerm","name","toLowerCase","includes","handleSearch","value","handleMuscleChange","handleEquipmentChange","handleDayChange","selectedDay","prevWorkout","day","handleDayTypeChange","selectedDayType","handleProgramGoalChange","selectedProgramGoal","handleDaysPerWeekChange","selectedDaysPerWeek","handleDurationChange","selectedDuration","handleDragEnd","result","destination","source","draggableId","droppableId","index","start","columns","finish","newTaskIds","Array","from","taskIds","splice","newColumn","newState","id","startTaskIds","newStart","finishTaskIds","newFinish","handleSaveProgram","event","preventDefault","programData","user_id","program_duration","days_per_week","day_type","main_goal","mainGoal","map","workout","order","catalog_exercise_id","sets","set","reps","weight","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","handleCancel","handleSelectExercise","existingIndex","findIndex","ex","exercise_id","newSelectedExercises","_","children","fileName","_jsxFileName","lineNumber","columnNumber","dayTypes","durations","goals","className","onSubmit","type","placeholder","onChange","e","target","option","duration_amount","onDragEnd","onClick","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js"],"sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SearchBar from '../../../components/SearchBar/SearchBar';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport Exercise from '../../../components/Exercise/Exercise';\nimport ExerciseFilters from '../../../components/ExerciseFilters/ExerciseFilters';\nimport useFetchData from '../../../hooks/useFetchData';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport './program.css';\n\nconst CreateProgram = () => {\n  const [program, setProgram] = useState({\n    programName: '',\n    programDuration: '',\n    daysPerWeek: '',\n    dayType: '',\n    programGoal: '',\n    workouts: [],\n    selectedExercises: []\n  });\n  const [days, setDays] = useState(['Monday']);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedMuscle, setSelectedMuscle] = useState('');\n  const [selectedEquipment, setSelectedEquipment] = useState('');\n  const [state, setState] = useState();\n\n  const navigate = useNavigate();\n\n  const {\n    data: exercises,\n    isLoading,\n    error\n  } = useFetchData('http://localhost:9025/api/exercise-catalog');\n\n  const filteredExercises = useMemo(() => {\n    return exercises.filter(exercise => {\n      const matchesMuscle =\n        !selectedMuscle ||\n        selectedMuscle === 'All' ||\n        exercise.muscle === selectedMuscle;\n      const matchesEquipment =\n        !selectedEquipment ||\n        selectedEquipment === 'All' ||\n        exercise.equipment === selectedEquipment;\n      const matchesSearchTerm =\n        !searchTerm ||\n        exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n      return matchesMuscle && matchesEquipment && matchesSearchTerm;\n    });\n  }, [searchTerm, selectedMuscle, selectedEquipment, exercises]);\n\n  const handleSearch = value => {\n    setSearchTerm(value);\n  };\n\n  const handleMuscleChange = value => {\n    setSelectedMuscle(value);\n  };\n\n  const handleEquipmentChange = value => {\n    setSelectedEquipment(value);\n  };\n\n  const handleDayChange = selectedDay => {\n    setDays(prevWorkout => ({ ...prevWorkout, day: selectedDay }));\n  };\n\n  const handleDayTypeChange = selectedDayType => {\n    setProgram(prevWorkout => ({ ...prevWorkout, dayType: selectedDayType }));\n  };\n\n  const handleProgramGoalChange = selectedProgramGoal => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programGoal: selectedProgramGoal\n    }));\n  };\n\n  const handleDaysPerWeekChange = selectedDaysPerWeek => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      daysPerWeek: selectedDaysPerWeek\n    }));\n  };\n\n  const handleDurationChange = selectedDuration => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programDuration: selectedDuration\n    }));\n  };\n\n  const handleDragEnd = useCallback(\n    result => {\n      const { destination, source, draggableId } = result;\n\n      // Do nothing if there's no destination (dropped outside a droppable area)\n      if (!destination) {\n        return;\n      }\n\n      // Do nothing if the item is dropped in the same place\n      if (\n        destination.droppableId === source.droppableId &&\n        destination.index === source.index\n      ) {\n        return;\n      }\n\n      const start = state.columns[source.droppableId];\n      const finish = state.columns[destination.droppableId];\n\n      // Moving within the same column\n      if (start === finish) {\n        const newTaskIds = Array.from(start.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n\n        const newColumn = {\n          ...start,\n          taskIds: newTaskIds\n        };\n\n        const newState = {\n          ...state,\n          columns: {\n            ...state.columns,\n            [newColumn.id]: newColumn\n          }\n        };\n\n        setState(newState);\n        return;\n      }\n\n      // Moving from one column to another\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = {\n        ...start,\n        taskIds: startTaskIds\n      };\n\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n      const newFinish = {\n        ...finish,\n        taskIds: finishTaskIds\n      };\n\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      };\n\n      setState(newState);\n    },\n    [state]\n  );\n\n  const handleSaveProgram = async event => {\n    event.preventDefault();\n\n    const programData = {\n      user_id: 2, // hardcoded for now, but should be the logged in user's ID\n      name: program.programName,\n      program_duration: program.programDuration,\n      days_per_week: program.daysPerWeek,\n      day_type: program.dayType,\n      main_goal: program.mainGoal,\n      workouts: program.workouts.map(workout => ({\n        name: workout.name,\n        order: workout.order,\n        exercises: workout.exercises.map(exercise => ({\n          catalog_exercise_id: exercise.catalog_exercise_id,\n          order: exercise.order,\n          sets: exercise.sets.map(set => ({\n            reps: set.reps,\n            weight: set.weight,\n            order: set.order\n          }))\n        }))\n      }))\n    };\n\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(programData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went wrong with saving the program');\n      }\n\n      // Assuming the backend responds with the created template, you could use it here if needed\n      // const savedTemplate = await response.json();\n\n      // After saving, redirect back to the WorkoutPage\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n      // Here, you could set an error state and display it to the user if you wish\n    }\n  };\n\n  const handleCancel = () => {\n    // Redirect to the create workout page\n    navigate('/workouts');\n  };\n\n  const handleSelectExercise = exercise => {\n    setProgram(prevWorkout => {\n      const existingIndex = prevWorkout.selectedExercises.findIndex(\n        ex => ex.exercise_id === exercise.exercise_id\n      );\n\n      let newSelectedExercises;\n      if (existingIndex >= 0) {\n        // Exercise is already selected, remove it\n        newSelectedExercises = prevWorkout.selectedExercises.filter(\n          (_, index) => index !== existingIndex\n        );\n      } else {\n        // Exercise is not selected, add it\n        newSelectedExercises = [...prevWorkout.selectedExercises, exercise];\n      }\n\n      return {\n        ...prevWorkout,\n        selectedExercises: newSelectedExercises\n      };\n    });\n  };\n\n  if (isLoading) return <div>loading...</div>;\n  if (error) return <div>Error loading exercises: {error}</div>;\n\n  const dayTypes = ['Day of Week', 'Numerical'];\n  const durations = ['Days', 'Weeks', 'Months'];\n  const goals = ['Strength', 'Endurance', 'Hypertrophy', 'Weight Loss'];\n\n  return (\n    <div className='page-layout'>\n      <h1 className='page-title'>Create New Program</h1>\n      <form onSubmit={handleSaveProgram}>\n        <div>\n          <div className='input-container'>\n            <input\n              type='text'\n              className='full-width-input'\n              placeholder='Enter Program Name'\n              value={program.name}\n              onChange={e =>\n                setProgram(prevWorkout => ({\n                  ...prevWorkout,\n                  programName: e.target.value\n                }))\n              }\n            />\n          </div>\n\n          <div className='program-detail-container'>\n            <div className='program-detail'>\n              <select\n                id='day-type'\n                onChange={e => handleDayTypeChange(e.target.value)}\n                placeholder='Select Day Type'\n              >\n                <option value=''>Select Day Type</option>\n                {dayTypes.map((option, index) => (\n                  <option key={index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className='program-detail'>\n              <div className='input-container'>\n                <input\n                  type='text'\n                  className='full-width-input'\n                  placeholder='Enter Duration Amount'\n                  value={program.duration_amount}\n                  onChange={e =>\n                    setProgram(prevWorkout => ({\n                      ...prevWorkout,\n                      duration_amount: e.target.value\n                    }))\n                  }\n                />\n              </div>\n              <select\n                id='durations'\n                onChange={e => handleDurationChange(e.target.value)}\n                placeholder='Select Duration'\n              >\n                <option value=''>Select Duration</option>\n                {durations.map((option, index) => (\n                  <option key={index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className='input-container'>\n              <input\n                type='text'\n                id='days-per-week'\n                placeholder='Enter Days Per Week'\n                value={program.daysPerWeek}\n                onChange={e => handleDaysPerWeekChange(e.target.value)}\n              />\n            </div>\n\n            <div className='program-detail'>\n              <select\n                id='program_goal'\n                onChange={e => handleProgramGoalChange(e.target.value)}\n              >\n                <option value=''>Select Program Goal</option>\n                {goals.map((option, index) => (\n                  <option key={index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <DayContainer day={days} />\n          {/* <SearchBar onChange={handleSearch} />\n          <ExerciseFilters\n            onMuscleChange={handleMuscleChange}\n            onEquipmentChange={handleEquipmentChange}\n          />\n\n          <div className='exercise-container'>\n            {filteredExercises.map(exercise => (\n              <Exercise\n                key={exercise.exercise_id}\n                name={exercise.name}\n                muscle={exercise.muscle}\n                equipment={exercise.equipment}\n                image={`http://localhost:9025/${exercise.file_path}`}\n                isSelectable={true} // Make the exercise selectable in this context\n                isSelected={program.selectedExercises.some(\n                  ex => ex.exercise_id === exercise.exercise_id\n                )}\n                onClick={() => handleSelectExercise(exercise)}\n              />\n            ))}\n          </div> */}\n        </DragDropContext>\n        <div className='button-container'>\n          <button id='save-program-button' onClick={handleSaveProgram}>\n            Save\n          </button>\n          <button id='cancel-program-button' onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateProgram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}