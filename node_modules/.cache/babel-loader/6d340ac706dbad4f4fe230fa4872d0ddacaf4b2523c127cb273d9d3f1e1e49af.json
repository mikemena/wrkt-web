{"ast":null,"code":"function programReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_PROGRAM':\n      console.log('Adding program:', action.payload);\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id],\n          // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n      return updatedState;\n    case 'UPDATE_PROGRAM':\n      {\n        const {\n          id,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        } = action.payload;\n\n        // Check if selectedProgram exists and has the correct structure\n        if (!state.selectedProgram || !state.selectedProgram.selectedProgram) {\n          console.error('Selected program not found in state');\n          console.log('state.selectedProgram:', state.selectedProgram);\n          console.log('state.selectedProgram.selectedProgram:', state.selectedProgram.selectedProgram);\n          return state;\n        }\n        const existingProgram = state.selectedProgram.selectedProgram;\n        if (existingProgram.id !== id) {\n          console.error('Program ID mismatch:', id);\n          return state;\n        }\n        const updatedProgram = {\n          ...existingProgram,\n          name: name || existingProgram.name,\n          program_duration: program_duration || existingProgram.program_duration,\n          duration_unit: duration_unit || existingProgram.duration_unit,\n          days_per_week: days_per_week || existingProgram.days_per_week,\n          main_goal: main_goal || existingProgram.main_goal,\n          user_id: user_id || existingProgram.user_id\n        };\n        return {\n          ...state,\n          selectedProgram: {\n            ...state.selectedProgram,\n            selectedProgram: updatedProgram\n          }\n        };\n      }\n    case 'UPDATE_PROGRAM_SUCCESS':\n      {\n        const {\n          id,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        } = action.payload;\n        const existingProgram = state[id];\n        if (!existingProgram) {\n          console.error('Program not found:', id);\n          return state;\n        }\n        const updatedState = {\n          ...state,\n          [id]: {\n            ...existingProgram,\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal,\n            user_id\n          }\n        };\n        return updatedState;\n      }\n    case 'DELETE_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!programId) {\n          console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n          return state;\n        }\n        const newPrograms = {\n          ...state.programs\n        };\n        delete newPrograms[programId];\n        const newState = {\n          ...state,\n          programs: newPrograms\n        };\n        return newState;\n      }\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["programReducer","state","action","type","console","log","payload","id","name","program_duration","duration_unit","days_per_week","main_goal","error","updatedState","user_id","selectedProgram","existingProgram","updatedProgram","programId","newPrograms","programs","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["function programReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_PROGRAM':\n      console.log('Adding program:', action.payload);\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id], // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n\n      return updatedState;\n\n    case 'UPDATE_PROGRAM': {\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal,\n        user_id\n      } = action.payload;\n\n      // Check if selectedProgram exists and has the correct structure\n      if (!state.selectedProgram || !state.selectedProgram.selectedProgram) {\n        console.error('Selected program not found in state');\n        console.log('state.selectedProgram:', state.selectedProgram);\n        console.log(\n          'state.selectedProgram.selectedProgram:',\n          state.selectedProgram.selectedProgram\n        );\n        return state;\n      }\n\n      const existingProgram = state.selectedProgram.selectedProgram;\n      if (existingProgram.id !== id) {\n        console.error('Program ID mismatch:', id);\n        return state;\n      }\n\n      const updatedProgram = {\n        ...existingProgram,\n        name: name || existingProgram.name,\n        program_duration: program_duration || existingProgram.program_duration,\n        duration_unit: duration_unit || existingProgram.duration_unit,\n        days_per_week: days_per_week || existingProgram.days_per_week,\n        main_goal: main_goal || existingProgram.main_goal,\n        user_id: user_id || existingProgram.user_id\n      };\n\n      return {\n        ...state,\n        selectedProgram: {\n          ...state.selectedProgram,\n          selectedProgram: updatedProgram\n        }\n      };\n    }\n\n    case 'UPDATE_PROGRAM_SUCCESS': {\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal,\n        user_id\n      } = action.payload;\n\n      const existingProgram = state[id];\n      if (!existingProgram) {\n        console.error('Program not found:', id);\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...existingProgram,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        }\n      };\n\n      return updatedState;\n    }\n\n    case 'DELETE_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!programId) {\n        console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n        return state;\n      }\n\n      const newPrograms = { ...state.programs };\n      delete newPrograms[programId];\n\n      const newState = {\n        ...state,\n        programs: newPrograms\n      };\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}