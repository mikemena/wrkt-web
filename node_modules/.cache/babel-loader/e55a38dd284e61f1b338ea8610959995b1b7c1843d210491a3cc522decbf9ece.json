{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/contexts/programContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useEffect } from 'react';\nimport { actionTypes } from '../actions/actionTypes';\nimport rootReducer from '../reducers/rootReducer';\nimport { initialState } from '../reducers/initialState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProgramContext = /*#__PURE__*/createContext();\nexport const ProgramProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n  const setActiveWorkout = workoutId => {\n    console.log('Setting active workout:', workoutId); // Debug log to check the workout ID\n    if (!workoutId) {\n      console.error('Attempted to set active workout without a valid ID');\n      return; // Optionally return to avoid dispatching undefined ID\n    }\n    dispatch({\n      type: actionTypes.SET_ACTIVE_WORKOUT,\n      payload: {\n        workoutId\n      }\n    });\n  };\n  useEffect(() => {\n    console.log('Updated state in context:', state);\n  }, [state]);\n  const saveProgram = async newProgram => {\n    dispatch({\n      type: actionTypes.SAVE_PROGRAM_START\n    });\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newProgram)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const savedProgram = await response.json();\n      dispatch({\n        type: actionTypes.SAVE_PROGRAM_SUCCESS,\n        payload: savedProgram\n      });\n    } catch (error) {\n      dispatch({\n        type: actionTypes.SAVE_PROGRAM_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n  const updateProgramDetails = details => {\n    dispatch({\n      type: actionTypes.UPDATE_PROGRAM_DETAILS,\n      payload: details\n    });\n  };\n  const addWorkout = workout => {\n    dispatch({\n      type: actionTypes.ADD_WORKOUT,\n      payload: workout\n    });\n  };\n  const updateWorkout = workout => {\n    dispatch({\n      type: actionTypes.UPDATE_WORKOUT,\n      payload: workout\n    });\n  };\n  const deleteWorkout = workoutId => {\n    dispatch({\n      type: actionTypes.DELETE_WORKOUT,\n      payload: workoutId\n    });\n  };\n  const addExercise = exercise => {\n    dispatch({\n      type: actionTypes.ADD_EXERCISE,\n      payload: {\n        workoutId: activeWorkoutId,\n        exercise\n      }\n    });\n  };\n  const updateExercise = (workoutId, updatedExercise) => {\n    dispatch({\n      type: actionTypes.UPDATE_EXERCISE,\n      payload: {\n        workoutId,\n        updatedExercise\n      }\n    });\n  };\n  const deleteExercise = (workoutId, exerciseId) => {\n    dispatch({\n      type: actionTypes.DELETE_EXERCISE,\n      payload: {\n        workoutId,\n        exerciseId\n      }\n    });\n  };\n  const addSet = (workoutId, exerciseId, newSet) => {\n    dispatch({\n      type: actionTypes.ADD_SET,\n      payload: {\n        workoutId,\n        exerciseId,\n        newSet\n      }\n    });\n  };\n  const updateSet = (workoutId, exerciseId, updatedSet) => {\n    dispatch({\n      type: actionTypes.UPDATE_SET,\n      payload: {\n        workoutId,\n        exerciseId,\n        updatedSet\n      }\n    });\n  };\n  const deleteSet = (workoutId, exerciseId, setId) => {\n    dispatch({\n      type: actionTypes.DELETE_SET,\n      payload: {\n        workoutId,\n        exerciseId,\n        setId\n      }\n    });\n  };\n  console.log('Initial State:', state); // Log the initial state here\n\n  return /*#__PURE__*/_jsxDEV(ProgramContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      activeWorkout: state.activeWorkout,\n      updateProgramDetails,\n      addWorkout,\n      updateWorkout,\n      deleteWorkout,\n      setActiveWorkout,\n      addExercise,\n      updateExercise,\n      deleteExercise,\n      addSet,\n      updateSet,\n      deleteSet,\n      saveProgram\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgramProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = ProgramProvider;\nvar _c;\n$RefreshReg$(_c, \"ProgramProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","actionTypes","rootReducer","initialState","jsxDEV","_jsxDEV","ProgramContext","ProgramProvider","children","_s","state","dispatch","setActiveWorkout","workoutId","console","log","error","type","SET_ACTIVE_WORKOUT","payload","saveProgram","newProgram","SAVE_PROGRAM_START","response","fetch","method","headers","body","JSON","stringify","ok","Error","savedProgram","json","SAVE_PROGRAM_SUCCESS","SAVE_PROGRAM_FAILURE","message","updateProgramDetails","details","UPDATE_PROGRAM_DETAILS","addWorkout","workout","ADD_WORKOUT","updateWorkout","UPDATE_WORKOUT","deleteWorkout","DELETE_WORKOUT","addExercise","exercise","ADD_EXERCISE","activeWorkoutId","updateExercise","updatedExercise","UPDATE_EXERCISE","deleteExercise","exerciseId","DELETE_EXERCISE","addSet","newSet","ADD_SET","updateSet","updatedSet","UPDATE_SET","deleteSet","setId","DELETE_SET","Provider","value","activeWorkout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/contexts/programContext.js"],"sourcesContent":["import { createContext, useReducer, useEffect } from 'react';\nimport { actionTypes } from '../actions/actionTypes';\nimport rootReducer from '../reducers/rootReducer';\nimport { initialState } from '../reducers/initialState';\n\nexport const ProgramContext = createContext();\n\nexport const ProgramProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n\n  const setActiveWorkout = workoutId => {\n    console.log('Setting active workout:', workoutId); // Debug log to check the workout ID\n    if (!workoutId) {\n      console.error('Attempted to set active workout without a valid ID');\n      return; // Optionally return to avoid dispatching undefined ID\n    }\n    dispatch({\n      type: actionTypes.SET_ACTIVE_WORKOUT,\n      payload: { workoutId }\n    });\n  };\n\n  useEffect(() => {\n    console.log('Updated state in context:', state);\n  }, [state]);\n\n  const saveProgram = async newProgram => {\n    dispatch({ type: actionTypes.SAVE_PROGRAM_START });\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newProgram)\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const savedProgram = await response.json();\n      dispatch({\n        type: actionTypes.SAVE_PROGRAM_SUCCESS,\n        payload: savedProgram\n      });\n    } catch (error) {\n      dispatch({\n        type: actionTypes.SAVE_PROGRAM_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n\n  const updateProgramDetails = details => {\n    dispatch({\n      type: actionTypes.UPDATE_PROGRAM_DETAILS,\n      payload: details\n    });\n  };\n\n  const addWorkout = workout => {\n    dispatch({\n      type: actionTypes.ADD_WORKOUT,\n      payload: workout\n    });\n  };\n\n  const updateWorkout = workout => {\n    dispatch({\n      type: actionTypes.UPDATE_WORKOUT,\n      payload: workout\n    });\n  };\n\n  const deleteWorkout = workoutId => {\n    dispatch({\n      type: actionTypes.DELETE_WORKOUT,\n      payload: workoutId\n    });\n  };\n\n  const addExercise = exercise => {\n    dispatch({\n      type: actionTypes.ADD_EXERCISE,\n      payload: { workoutId: activeWorkoutId, exercise }\n    });\n  };\n\n  const updateExercise = (workoutId, updatedExercise) => {\n    dispatch({\n      type: actionTypes.UPDATE_EXERCISE,\n      payload: { workoutId, updatedExercise }\n    });\n  };\n\n  const deleteExercise = (workoutId, exerciseId) => {\n    dispatch({\n      type: actionTypes.DELETE_EXERCISE,\n      payload: { workoutId, exerciseId }\n    });\n  };\n\n  const addSet = (workoutId, exerciseId, newSet) => {\n    dispatch({\n      type: actionTypes.ADD_SET,\n      payload: { workoutId, exerciseId, newSet }\n    });\n  };\n\n  const updateSet = (workoutId, exerciseId, updatedSet) => {\n    dispatch({\n      type: actionTypes.UPDATE_SET,\n      payload: { workoutId, exerciseId, updatedSet }\n    });\n  };\n\n  const deleteSet = (workoutId, exerciseId, setId) => {\n    dispatch({\n      type: actionTypes.DELETE_SET,\n      payload: { workoutId, exerciseId, setId }\n    });\n  };\n\n  console.log('Initial State:', state); // Log the initial state here\n\n  return (\n    <ProgramContext.Provider\n      value={{\n        state,\n        dispatch,\n        activeWorkout: state.activeWorkout,\n        updateProgramDetails,\n        addWorkout,\n        updateWorkout,\n        deleteWorkout,\n        setActiveWorkout,\n        addExercise,\n        updateExercise,\n        deleteExercise,\n        addSet,\n        updateSet,\n        deleteSet,\n        saveProgram\n      }}\n    >\n      {children}\n    </ProgramContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}