{"ast":null,"code":"import { initialState } from './initialState';\nfunction programReducer(state = initialState.programs, action) {\n  switch (action.type) {\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id],\n          // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n      console.log('Reducer updated program state:', updatedState);\n      return updatedState;\n    case 'UPDATE_PROGRAM':\n      {\n        const {\n          id,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        } = action.payload;\n        const existingProgram = state[id];\n        if (!existingProgram) {\n          console.error('Program not found:', id);\n          return state;\n        }\n        const updatedState = {\n          ...state,\n          [id]: {\n            ...state[id],\n            // Spread the existing program details\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal,\n            user_id\n          }\n        };\n        return updatedState;\n      }\n    case 'UPDATE_PROGRAM_SUCCESS':\n      {\n        const {\n          id,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        } = action.payload;\n        const existingProgram = state[id];\n        if (!existingProgram) {\n          console.error('Program not found:', id);\n          return state;\n        }\n        const updatedState = {\n          ...state,\n          [id]: {\n            ...state[id],\n            // Spread the existing program details\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal,\n            user_id\n          }\n        };\n        return updatedState;\n      }\n    case 'SET_PROGRAM':\n      {\n        var _action$payload$worko;\n        console.log('SET_PROGRAM action received:', action.payload);\n        console.log('Current state before update:', state);\n        const newState = {\n          ...state,\n          // Spread the current state instead of initialState\n          programs: {\n            ...state.programs,\n            // Keep existing programs\n            [action.payload.id]: action.payload\n          },\n          workouts: {\n            ...state.workouts,\n            // Keep existing workouts\n            ...action.payload.workouts.reduce((acc, workout) => {\n              acc[workout.id] = workout;\n              return acc;\n            }, {})\n          },\n          exercises: {\n            ...state.exercises,\n            // Keep existing exercises\n            ...action.payload.workouts.reduce((acc, workout) => {\n              acc[workout.id] = workout.exercises;\n              return acc;\n            }, {})\n          },\n          sets: {\n            ...state.sets,\n            // Keep existing sets\n            ...action.payload.workouts.reduce((acc, workout) => {\n              workout.exercises.forEach(exercise => {\n                acc[exercise.id] = exercise.sets;\n              });\n              return acc;\n            }, {})\n          },\n          activeWorkout: ((_action$payload$worko = action.payload.workouts[0]) === null || _action$payload$worko === void 0 ? void 0 : _action$payload$worko.id) || state.activeWorkout\n        };\n        console.log('New state after update:', newState);\n        return newState;\n      }\n    case 'DELETE_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!programId) {\n          console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n          return state;\n        }\n\n        // console.log(`Deleting program with ID: ${programId}`);\n        const newPrograms = {\n          ...state.programs\n        };\n        delete newPrograms[programId];\n        const newState = {\n          ...state,\n          programs: newPrograms\n        };\n\n        // console.log('State After DELETE_PROGRAMS:', newState);\n        return newState;\n      }\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["initialState","programReducer","state","programs","action","type","id","name","program_duration","duration_unit","days_per_week","main_goal","payload","console","error","updatedState","log","user_id","existingProgram","_action$payload$worko","newState","workouts","reduce","acc","workout","exercises","sets","forEach","exercise","activeWorkout","programId","newPrograms"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["import { initialState } from './initialState';\n\nfunction programReducer(state = initialState.programs, action) {\n  switch (action.type) {\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id], // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n      console.log('Reducer updated program state:', updatedState);\n      return updatedState;\n\n    case 'UPDATE_PROGRAM': {\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal,\n        user_id\n      } = action.payload;\n\n      const existingProgram = state[id];\n      if (!existingProgram) {\n        console.error('Program not found:', id);\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id], // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        }\n      };\n\n      return updatedState;\n    }\n\n    case 'UPDATE_PROGRAM_SUCCESS': {\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal,\n        user_id\n      } = action.payload;\n\n      const existingProgram = state[id];\n      if (!existingProgram) {\n        console.error('Program not found:', id);\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id], // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        }\n      };\n\n      return updatedState;\n    }\n\n    case 'SET_PROGRAM': {\n      console.log('SET_PROGRAM action received:', action.payload);\n      console.log('Current state before update:', state);\n      const newState = {\n        ...state, // Spread the current state instead of initialState\n        programs: {\n          ...state.programs, // Keep existing programs\n          [action.payload.id]: action.payload\n        },\n        workouts: {\n          ...state.workouts, // Keep existing workouts\n          ...action.payload.workouts.reduce((acc, workout) => {\n            acc[workout.id] = workout;\n            return acc;\n          }, {})\n        },\n        exercises: {\n          ...state.exercises, // Keep existing exercises\n          ...action.payload.workouts.reduce((acc, workout) => {\n            acc[workout.id] = workout.exercises;\n            return acc;\n          }, {})\n        },\n        sets: {\n          ...state.sets, // Keep existing sets\n          ...action.payload.workouts.reduce((acc, workout) => {\n            workout.exercises.forEach(exercise => {\n              acc[exercise.id] = exercise.sets;\n            });\n            return acc;\n          }, {})\n        },\n        activeWorkout: action.payload.workouts[0]?.id || state.activeWorkout\n      };\n\n      console.log('New state after update:', newState);\n      return newState;\n    }\n\n    case 'DELETE_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!programId) {\n        console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n        return state;\n      }\n\n      // console.log(`Deleting program with ID: ${programId}`);\n      const newPrograms = { ...state.programs };\n      delete newPrograms[programId];\n\n      const newState = {\n        ...state,\n        programs: newPrograms\n      };\n\n      // console.log('State After DELETE_PROGRAMS:', newState);\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}