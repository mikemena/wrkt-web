{"ast":null,"code":"import { actionTypes } from '../actions/actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\nfunction exerciseReducer(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      {\n        const {\n          workoutId,\n          exercises\n        } = action.payload;\n        const currentExercises = state[workoutId] || [];\n        const exerciseIds = currentExercises.map(ex => ex.id);\n        const newExercises = exercises.filter(ex => !exerciseIds.includes(ex.id)).map(exercise => ({\n          ...exercise,\n          id: uuidv4(),\n          // Ensure a unique id for each exercise instance\n          catalog_exercise_id: exercise.id,\n          sets: [{\n            id: uuidv4(),\n            order: 1,\n            weight: 10,\n            reps: 10\n          }]\n        }));\n        return {\n          ...state,\n          [workoutId]: [...currentExercises, ...newExercises]\n        };\n      }\n    case actionTypes.DELETE_EXERCISE:\n      {\n        const {\n          workoutId,\n          exerciseId\n        } = action.payload;\n        return {\n          ...state,\n          [workoutId]: state[workoutId].filter(ex => ex.id !== exerciseId)\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["actionTypes","v4","uuidv4","exerciseReducer","state","action","type","ADD_EXERCISE","workoutId","exercises","payload","currentExercises","exerciseIds","map","ex","id","newExercises","filter","includes","exercise","catalog_exercise_id","sets","order","weight","reps","DELETE_EXERCISE","exerciseId"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["import { actionTypes } from '../actions/actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction exerciseReducer(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE: {\n      const { workoutId, exercises } = action.payload;\n      const currentExercises = state[workoutId] || [];\n      const exerciseIds = currentExercises.map(ex => ex.id);\n\n      const newExercises = exercises\n        .filter(ex => !exerciseIds.includes(ex.id))\n        .map(exercise => ({\n          ...exercise,\n          id: uuidv4(), // Ensure a unique id for each exercise instance\n          catalog_exercise_id: exercise.id,\n          sets: [\n            {\n              id: uuidv4(),\n              order: 1,\n              weight: 10,\n              reps: 10\n            }\n          ]\n        }));\n\n      return {\n        ...state,\n        [workoutId]: [...currentExercises, ...newExercises]\n      };\n    }\n\n    case actionTypes.DELETE_EXERCISE: {\n      const { workoutId, exerciseId } = action.payload;\n      return {\n        ...state,\n        [workoutId]: state[workoutId].filter(ex => ex.id !== exerciseId)\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,SAASC,eAAeA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,EAAE;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,WAAW,CAACO,YAAY;MAAE;QAC7B,MAAM;UAAEC,SAAS;UAAEC;QAAU,CAAC,GAAGJ,MAAM,CAACK,OAAO;QAC/C,MAAMC,gBAAgB,GAAGP,KAAK,CAACI,SAAS,CAAC,IAAI,EAAE;QAC/C,MAAMI,WAAW,GAAGD,gBAAgB,CAACE,GAAG,CAACC,EAAE,IAAIA,EAAE,CAACC,EAAE,CAAC;QAErD,MAAMC,YAAY,GAAGP,SAAS,CAC3BQ,MAAM,CAACH,EAAE,IAAI,CAACF,WAAW,CAACM,QAAQ,CAACJ,EAAE,CAACC,EAAE,CAAC,CAAC,CAC1CF,GAAG,CAACM,QAAQ,KAAK;UAChB,GAAGA,QAAQ;UACXJ,EAAE,EAAEb,MAAM,CAAC,CAAC;UAAE;UACdkB,mBAAmB,EAAED,QAAQ,CAACJ,EAAE;UAChCM,IAAI,EAAE,CACJ;YACEN,EAAE,EAAEb,MAAM,CAAC,CAAC;YACZoB,KAAK,EAAE,CAAC;YACRC,MAAM,EAAE,EAAE;YACVC,IAAI,EAAE;UACR,CAAC;QAEL,CAAC,CAAC,CAAC;QAEL,OAAO;UACL,GAAGpB,KAAK;UACR,CAACI,SAAS,GAAG,CAAC,GAAGG,gBAAgB,EAAE,GAAGK,YAAY;QACpD,CAAC;MACH;IAEA,KAAKhB,WAAW,CAACyB,eAAe;MAAE;QAChC,MAAM;UAAEjB,SAAS;UAAEkB;QAAW,CAAC,GAAGrB,MAAM,CAACK,OAAO;QAChD,OAAO;UACL,GAAGN,KAAK;UACR,CAACI,SAAS,GAAGJ,KAAK,CAACI,SAAS,CAAC,CAACS,MAAM,CAACH,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKW,UAAU;QACjE,CAAC;MACH;IAEA;MACE,OAAOtB,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}