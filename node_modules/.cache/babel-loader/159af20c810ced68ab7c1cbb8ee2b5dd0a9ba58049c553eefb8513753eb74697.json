{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { DayContainerProvider } from '../../../contexts/dayContainerContext';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport ProgramForm from '../../../components/Program/ProgramForm';\nimport NavBar from '../../../components/Nav/Nav';\nimport ExerciseList from '../../../components/ExerciseList/ExerciseList';\nimport './program.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateProgram = () => {\n  _s();\n  const [program, setProgram] = useState({\n    programName: '',\n    mainGoal: '',\n    programDuration: '',\n    durationUnit: '',\n    daysPerWeek: '',\n    workouts: []\n  });\n  const [days, setDays] = useState([{\n    id: 1,\n    name: 'Day 1'\n  }]);\n  const [showExerciseList, setShowExerciseList] = useState(false);\n  const [activeDay, setActiveDay] = useState(null);\n  const navigate = useNavigate();\n  const handleAddExercise = () => {\n    setShowExerciseList(true);\n  };\n  const handleAddDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1;\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}`\n    };\n    setDays([...days, newDay]);\n  };\n  const handleRemoveDay = dayId => {\n    //remove days\n    const updatedDays = days.filter(day => day.id !== dayId);\n\n    //renumber the remaining days\n    const renumberedDays = updatedDays.map((day, index) => ({\n      ...day,\n      id: index + 1,\n      name: `Day ${index + 1}`\n    }));\n    setDays(renumberedDays);\n  };\n  const handleSaveProgram = async NewProgram => {\n    const programData = {\n      user_id: 2,\n      name: NewProgram.programName,\n      program_duration: NewProgram.programDuration,\n      days_per_week: NewProgram.daysPerWeek,\n      duration_unit: NewProgram.durationUnit,\n      main_goal: NewProgram.mainGoal,\n      workouts: NewProgram.workouts.map(workout => ({\n        name: workout.name,\n        order: workout.order,\n        exercises: workout.exercises.map(exercise => ({\n          catalog_exercise_id: exercise.catalog_exercise_id,\n          order: exercise.order,\n          sets: exercise.sets.map(set => ({\n            reps: set.reps,\n            weight: set.weight,\n            order: set.order\n          }))\n        }))\n      }))\n    };\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(programData)\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong with saving the program');\n      }\n\n      // Assuming the backend responds with the created template, you could use it here if needed\n      // const savedTemplate = await response.json();\n\n      // After saving, redirect back to the WorkoutPage\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n      // Here, you could set an error state and display it to the user if you wish\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-prog-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isEditing: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-prog-page__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-prog-page__left-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-prog-page__header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"create-prog-page__title\",\n            children: \"Create New Program\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgramForm, {\n          program: program,\n          onSubmit: handleSaveProgram,\n          handleAddDay: handleAddDay,\n          isEditing: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DayContainerProvider, {\n          children: days.map(day => /*#__PURE__*/_jsxDEV(DayContainer, {\n            day: day,\n            handleRemoveDay: handleRemoveDay,\n            handleAddExercise: handleAddExercise\n          }, day.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-prog-page__right-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"create-prog-page__exercise-container-title\",\n          children: \"Exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), showExerciseList && /*#__PURE__*/_jsxDEV(ExerciseList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProgram, \"eUhCpngKo18V6uyWCAOgAleH1UI=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProgram;\nexport default CreateProgram;\nvar _c;\n$RefreshReg$(_c, \"CreateProgram\");","map":{"version":3,"names":["React","useState","useNavigate","DayContainerProvider","DayContainer","ProgramForm","NavBar","ExerciseList","jsxDEV","_jsxDEV","CreateProgram","_s","program","setProgram","programName","mainGoal","programDuration","durationUnit","daysPerWeek","workouts","days","setDays","id","name","showExerciseList","setShowExerciseList","activeDay","setActiveDay","navigate","handleAddExercise","handleAddDay","newDayId","length","newDay","handleRemoveDay","dayId","updatedDays","filter","day","renumberedDays","map","index","handleSaveProgram","NewProgram","programData","user_id","program_duration","days_per_week","duration_unit","main_goal","workout","order","exercises","exercise","catalog_exercise_id","sets","set","reps","weight","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","className","children","isEditing","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { DayContainerProvider } from '../../../contexts/dayContainerContext';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport ProgramForm from '../../../components/Program/ProgramForm';\nimport NavBar from '../../../components/Nav/Nav';\nimport ExerciseList from '../../../components/ExerciseList/ExerciseList';\nimport './program.css';\n\nconst CreateProgram = () => {\n  const [program, setProgram] = useState({\n    programName: '',\n    mainGoal: '',\n    programDuration: '',\n    durationUnit: '',\n    daysPerWeek: '',\n    workouts: []\n  });\n\n  const [days, setDays] = useState([{ id: 1, name: 'Day 1' }]);\n  const [showExerciseList, setShowExerciseList] = useState(false);\n  const [activeDay, setActiveDay] = useState(null);\n\n  const navigate = useNavigate();\n\n  const handleAddExercise = () => {\n    setShowExerciseList(true);\n  };\n\n  const handleAddDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1;\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}`\n    };\n    setDays([...days, newDay]);\n  };\n\n  const handleRemoveDay = dayId => {\n    //remove days\n    const updatedDays = days.filter(day => day.id !== dayId);\n\n    //renumber the remaining days\n    const renumberedDays = updatedDays.map((day, index) => ({\n      ...day,\n      id: index + 1,\n      name: `Day ${index + 1}`\n    }));\n    setDays(renumberedDays);\n  };\n\n  const handleSaveProgram = async NewProgram => {\n    const programData = {\n      user_id: 2,\n      name: NewProgram.programName,\n      program_duration: NewProgram.programDuration,\n      days_per_week: NewProgram.daysPerWeek,\n      duration_unit: NewProgram.durationUnit,\n      main_goal: NewProgram.mainGoal,\n      workouts: NewProgram.workouts.map(workout => ({\n        name: workout.name,\n        order: workout.order,\n        exercises: workout.exercises.map(exercise => ({\n          catalog_exercise_id: exercise.catalog_exercise_id,\n          order: exercise.order,\n          sets: exercise.sets.map(set => ({\n            reps: set.reps,\n            weight: set.weight,\n            order: set.order\n          }))\n        }))\n      }))\n    };\n\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(programData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went wrong with saving the program');\n      }\n\n      // Assuming the backend responds with the created template, you could use it here if needed\n      // const savedTemplate = await response.json();\n\n      // After saving, redirect back to the WorkoutPage\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n      // Here, you could set an error state and display it to the user if you wish\n    }\n  };\n\n  return (\n    <div className='create-prog-page'>\n      <NavBar isEditing='true' />\n      <div className='create-prog-page__container'>\n        <div className='create-prog-page__left-container'>\n          <div className='create-prog-page__header'>\n            <h1 className='create-prog-page__title'>Create New Program</h1>\n          </div>\n\n          <ProgramForm\n            program={program}\n            onSubmit={handleSaveProgram}\n            handleAddDay={handleAddDay}\n            isEditing={true}\n          />\n\n          <DayContainerProvider>\n            {days.map(day => (\n              <DayContainer\n                key={day.id}\n                day={day}\n                handleRemoveDay={handleRemoveDay}\n                handleAddExercise={handleAddExercise}\n              />\n            ))}\n          </DayContainerProvider>\n        </div>\n        <div className='create-prog-page__right-container'>\n          <h1 className='create-prog-page__exercise-container-title'>\n            Exercises\n          </h1>\n          {showExerciseList && <ExerciseList />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateProgram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}