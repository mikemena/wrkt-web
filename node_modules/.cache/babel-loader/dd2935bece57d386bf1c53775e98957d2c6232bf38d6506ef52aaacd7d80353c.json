{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { DayContainerProvider } from '../../../contexts/dayContainerContext';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport ProgramForm from '../../../components/Program/ProgramForm';\nimport NavBar from '../../../components/Nav/Nav';\nimport ExerciseList from '../../../components/ExerciseList/exerciseList';\nimport './program.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateProgram = () => {\n  _s();\n  const [program, setProgram] = useState({\n    programName: '',\n    mainGoal: '',\n    programDuration: '',\n    durationUnit: '',\n    daysPerWeek: '',\n    workouts: []\n  });\n  const [days, setDays] = useState([{\n    id: 1,\n    name: 'Day 1'\n  }]);\n  const navigate = useNavigate();\n  const onDragEnd = result => {\n    // TODO: reorder your list of items based on the result object\n  };\n  const handleAddDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1;\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}`\n    };\n    setDays([...days, newDay]);\n  };\n  const handleRemoveDay = dayId => {\n    //remove days\n    const updatedDays = days.filter(day => day.id !== dayId);\n\n    //renumber the remaining days\n    const renumberedDays = updatedDays.map((day, index) => ({\n      ...day,\n      id: index + 1,\n      name: `Day ${index + 1}`\n    }));\n    setDays(renumberedDays);\n  };\n  const handleSaveProgram = async NewProgram => {\n    const programData = {\n      user_id: 2,\n      name: NewProgram.programName,\n      program_duration: NewProgram.programDuration,\n      days_per_week: NewProgram.daysPerWeek,\n      duration_unit: NewProgram.durationUnit,\n      main_goal: NewProgram.mainGoal,\n      workouts: NewProgram.workouts.map(workout => ({\n        name: workout.name,\n        order: workout.order,\n        exercises: workout.exercises.map(exercise => ({\n          catalog_exercise_id: exercise.catalog_exercise_id,\n          order: exercise.order,\n          sets: exercise.sets.map(set => ({\n            reps: set.reps,\n            weight: set.weight,\n            order: set.order\n          }))\n        }))\n      }))\n    };\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(programData)\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong with saving the program');\n      }\n\n      // Assuming the backend responds with the created template, you could use it here if needed\n      // const savedTemplate = await response.json();\n\n      // After saving, redirect back to the WorkoutPage\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n      // Here, you could set an error state and display it to the user if you wish\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"create-prog-container\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        isEditing: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \".create-prog-container__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-prog-container__header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"create-prog-container__title\",\n            children: \"Create New Program\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgramForm, {\n          program: program,\n          onSubmit: handleSaveProgram,\n          handleAddDay: handleAddDay,\n          isEditing: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"days\",\n          children: /*#__PURE__*/_jsxDEV(DayContainerProvider, {\n            children: days.map(day => /*#__PURE__*/_jsxDEV(DayContainer, {\n              day: day,\n              handleRemoveDay: handleRemoveDay\n            }, day.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), days.map((day, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: `day-${day.id}`,\n          index: index,\n          children: /*#__PURE__*/_jsxDEV(ExerciseList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, day.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProgram, \"AWrvHVF0kM2wXsvj7ZU9Nm4K5to=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProgram;\nexport default CreateProgram;\nvar _c;\n$RefreshReg$(_c, \"CreateProgram\");","map":{"version":3,"names":["React","useState","useNavigate","DragDropContext","Droppable","Draggable","DayContainerProvider","DayContainer","ProgramForm","NavBar","ExerciseList","jsxDEV","_jsxDEV","CreateProgram","_s","program","setProgram","programName","mainGoal","programDuration","durationUnit","daysPerWeek","workouts","days","setDays","id","name","navigate","onDragEnd","result","handleAddDay","newDayId","length","newDay","handleRemoveDay","dayId","updatedDays","filter","day","renumberedDays","map","index","handleSaveProgram","NewProgram","programData","user_id","program_duration","days_per_week","duration_unit","main_goal","workout","order","exercises","exercise","catalog_exercise_id","sets","set","reps","weight","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","children","classname","isEditing","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","droppableId","draggableId","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { DayContainerProvider } from '../../../contexts/dayContainerContext';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport ProgramForm from '../../../components/Program/ProgramForm';\nimport NavBar from '../../../components/Nav/Nav';\nimport ExerciseList from '../../../components/ExerciseList/exerciseList';\nimport './program.css';\n\nconst CreateProgram = () => {\n  const [program, setProgram] = useState({\n    programName: '',\n    mainGoal: '',\n    programDuration: '',\n    durationUnit: '',\n    daysPerWeek: '',\n    workouts: []\n  });\n\n  const [days, setDays] = useState([{ id: 1, name: 'Day 1' }]);\n\n  const navigate = useNavigate();\n\n  const onDragEnd = result => {\n    // TODO: reorder your list of items based on the result object\n  };\n\n  const handleAddDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1;\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}`\n    };\n    setDays([...days, newDay]);\n  };\n\n  const handleRemoveDay = dayId => {\n    //remove days\n    const updatedDays = days.filter(day => day.id !== dayId);\n\n    //renumber the remaining days\n    const renumberedDays = updatedDays.map((day, index) => ({\n      ...day,\n      id: index + 1,\n      name: `Day ${index + 1}`\n    }));\n    setDays(renumberedDays);\n  };\n\n  const handleSaveProgram = async NewProgram => {\n    const programData = {\n      user_id: 2,\n      name: NewProgram.programName,\n      program_duration: NewProgram.programDuration,\n      days_per_week: NewProgram.daysPerWeek,\n      duration_unit: NewProgram.durationUnit,\n      main_goal: NewProgram.mainGoal,\n      workouts: NewProgram.workouts.map(workout => ({\n        name: workout.name,\n        order: workout.order,\n        exercises: workout.exercises.map(exercise => ({\n          catalog_exercise_id: exercise.catalog_exercise_id,\n          order: exercise.order,\n          sets: exercise.sets.map(set => ({\n            reps: set.reps,\n            weight: set.weight,\n            order: set.order\n          }))\n        }))\n      }))\n    };\n\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(programData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went wrong with saving the program');\n      }\n\n      // Assuming the backend responds with the created template, you could use it here if needed\n      // const savedTemplate = await response.json();\n\n      // After saving, redirect back to the WorkoutPage\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n      // Here, you could set an error state and display it to the user if you wish\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div classname='create-prog-container'>\n        <NavBar isEditing='true' />\n        <div className='.create-prog-container__item'>\n          <div className='create-prog-container__header'>\n            <h1 className='create-prog-container__title'>Create New Program</h1>\n          </div>\n\n          <ProgramForm\n            program={program}\n            onSubmit={handleSaveProgram}\n            handleAddDay={handleAddDay}\n            isEditing={true}\n          />\n          <Droppable droppableId='days'>\n            <DayContainerProvider>\n              {days.map(day => (\n                <DayContainer\n                  key={day.id}\n                  day={day}\n                  handleRemoveDay={handleRemoveDay}\n                />\n              ))}\n            </DayContainerProvider>\n          </Droppable>\n          {days.map((day, index) => (\n            <Draggable key={day.id} draggableId={`day-${day.id}`} index={index}>\n              <ExerciseList />\n            </Draggable>\n          ))}\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default CreateProgram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}