{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/ExerciseFilters/ExerciseFilters.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useFetchData from '../../hooks/useFetchData';\nimport './ExerciseFilters.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExerciseFilters({\n  onMuscleChange,\n  onEquipmentChange\n}) {\n  _s();\n  const {\n    data: muscles,\n    isLoading: isLoadingMuscles,\n    error: errorMuscles\n  } = useFetchData('http://localhost:9025/api/muscles');\n  const {\n    data: equipments,\n    isLoading: isLoadingEquipments,\n    error: errorEquipments\n  } = useFetchData('http://localhost:9025/api/equipments');\n\n  // Loading indicator or error message for equipments\n  if (isLoadingEquipments) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 35\n  }, this);\n  if (errorEquipments) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading equipments: \", errorEquipments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n\n  // Loading indicator or error message for muscles\n  if (isLoadingMuscles) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 32\n  }, this);\n  if (errorMuscles) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading equipments: \", errorMuscles]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-filters-container\",\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      options: muscles.map(option => option.name),\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Muscle\",\n        InputProps: {\n          ...params.InputProps,\n          type: 'search'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this),\n      sx: {\n        width: 250\n      },\n      onChange: (event, newValue) => {\n        onMuscleChange(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      options: equipments.map(option => option.name),\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Equipment\",\n        InputProps: {\n          ...params.InputProps,\n          type: 'search'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this),\n      sx: {\n        width: 250\n      },\n      onChange: (event, newValue) => {\n        onEquipmentChange(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ExerciseFilters, \"Csz47JdTgRUYYEQirNGgughGlXA=\", false, function () {\n  return [useFetchData, useFetchData];\n});\n_c = ExerciseFilters;\nexport default ExerciseFilters;\nvar _c;\n$RefreshReg$(_c, \"ExerciseFilters\");","map":{"version":3,"names":["React","useFetchData","jsxDEV","_jsxDEV","ExerciseFilters","onMuscleChange","onEquipmentChange","_s","data","muscles","isLoading","isLoadingMuscles","error","errorMuscles","equipments","isLoadingEquipments","errorEquipments","CircularProgress","fileName","_jsxFileName","lineNumber","columnNumber","children","className","Autocomplete","options","map","option","name","renderInput","params","TextField","label","InputProps","type","sx","width","onChange","event","newValue","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/ExerciseFilters/ExerciseFilters.js"],"sourcesContent":["import React from 'react';\nimport useFetchData from '../../hooks/useFetchData';\nimport './ExerciseFilters.css';\n\nfunction ExerciseFilters({ onMuscleChange, onEquipmentChange }) {\n  const {\n    data: muscles,\n    isLoading: isLoadingMuscles,\n    error: errorMuscles\n  } = useFetchData('http://localhost:9025/api/muscles');\n\n  const {\n    data: equipments,\n    isLoading: isLoadingEquipments,\n    error: errorEquipments\n  } = useFetchData('http://localhost:9025/api/equipments');\n\n  // Loading indicator or error message for equipments\n  if (isLoadingEquipments) return <CircularProgress />;\n  if (errorEquipments)\n    return <div>Error loading equipments: {errorEquipments}</div>;\n\n  // Loading indicator or error message for muscles\n  if (isLoadingMuscles) return <CircularProgress />;\n  if (errorMuscles) return <div>Error loading equipments: {errorMuscles}</div>;\n\n  return (\n    <div className='exercise-filters-container'>\n      <Autocomplete\n        options={muscles.map(option => option.name)}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label='Muscle'\n            InputProps={{ ...params.InputProps, type: 'search' }}\n          />\n        )}\n        sx={{ width: 250 }}\n        onChange={(event, newValue) => {\n          onMuscleChange(newValue);\n        }}\n      />\n\n      <Autocomplete\n        options={equipments.map(option => option.name)}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label='Equipment'\n            InputProps={{ ...params.InputProps, type: 'search' }}\n          />\n        )}\n        sx={{ width: 250 }}\n        onChange={(event, newValue) => {\n          onEquipmentChange(newValue);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default ExerciseFilters;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}