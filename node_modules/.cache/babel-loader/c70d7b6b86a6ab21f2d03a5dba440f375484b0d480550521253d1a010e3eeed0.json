{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { DayContainerProvider } from '../../../contexts/dayContainerContext';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport ProgramForm from '../../../components/Program/ProgramForm';\nimport NavBar from '../../../components/Nav/Nav';\nimport ExerciseList from '../../../components/ExerciseList/ExerciseList';\nimport './program.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateProgram = () => {\n  _s();\n  var _days$find;\n  const [program, setProgram] = useState({\n    programName: '',\n    mainGoal: '',\n    programDuration: '',\n    durationUnit: '',\n    daysPerWeek: '',\n    workouts: []\n  });\n  const [days, setDays] = useState([{\n    id: 1,\n    name: 'Day 1',\n    exercises: []\n  }]);\n  const [showExerciseList, setShowExerciseList] = useState(false);\n  const [activeDay, setActiveDay] = useState(null);\n  const navigate = useNavigate();\n  const handleAddExercise = dayId => {\n    setShowExerciseList(true);\n    setActiveDay(dayId);\n  };\n  const handleAddDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1;\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}`\n    };\n    setDays([...days, newDay]);\n  };\n  const handleRemoveDay = dayId => {\n    //remove days\n    const updatedDays = days.filter(day => day.id !== dayId);\n\n    //renumber the remaining days\n    const renumberedDays = updatedDays.map((day, index) => ({\n      ...day,\n      id: index + 1,\n      name: `Day ${index + 1}`\n    }));\n    setDays(renumberedDays);\n  };\n  const handleSelectExercise = exercise => {\n    setDays(days.map(day => {\n      if (day.id === activeDay) {\n        const isExerciseSelected = day.exercises.find(ex => ex.id === exercise.id);\n        if (isExerciseSelected) {\n          // Exercise is already selected, so remove it\n          return {\n            ...day,\n            exercises: day.exercises.filter(ex => ex.id !== exercise.id)\n          };\n        } else {\n          // Exercise is not selected, so add it\n          return {\n            ...day,\n            exercises: [...day.exercises, exercise]\n          };\n        }\n      }\n      return day;\n    }));\n  };\n  const handleSaveProgram = async NewProgram => {\n    const programData = {\n      user_id: 2,\n      name: NewProgram.programName,\n      program_duration: NewProgram.programDuration,\n      days_per_week: NewProgram.daysPerWeek,\n      duration_unit: NewProgram.durationUnit,\n      main_goal: NewProgram.mainGoal,\n      workouts: NewProgram.workouts.map(workout => ({\n        name: workout.name,\n        order: workout.order,\n        exercises: workout.exercises.map(exercise => ({\n          catalog_exercise_id: exercise.catalog_exercise_id,\n          order: exercise.order,\n          sets: exercise.sets.map(set => ({\n            reps: set.reps,\n            weight: set.weight,\n            order: set.order\n          }))\n        }))\n      }))\n    };\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(programData)\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong with saving the program');\n      }\n\n      // Assuming the backend responds with the created template, you could use it here if needed\n      // const savedTemplate = await response.json();\n\n      // After saving, redirect back to the WorkoutPage\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n      // Here, you could set an error state and display it to the user if you wish\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-prog-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isEditing: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-prog-page__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-prog-page__left-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-prog-page__header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"create-prog-page__title\",\n            children: \"Create New Program\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgramForm, {\n          program: program,\n          onSubmit: handleSaveProgram,\n          handleAddDay: handleAddDay,\n          isEditing: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DayContainerProvider, {\n          children: days.map(day => /*#__PURE__*/_jsxDEV(DayContainer, {\n            day: day,\n            isActive: activeDay === day.id,\n            handleRemoveDay: handleRemoveDay,\n            handleAddExercise: () => handleAddExercise(day.id)\n          }, day.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-prog-page__right-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"create-prog-page__exercise-container-title\",\n          children: activeDay ? `Adding exercises for ${(_days$find = days.find(day => day.id === activeDay)) === null || _days$find === void 0 ? void 0 : _days$find.name}` : 'Select a day to add exercises'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), showExerciseList && /*#__PURE__*/_jsxDEV(ExerciseList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProgram, \"tYR43UjdqVqDXFTGUOt+ezs1r98=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProgram;\nexport default CreateProgram;\nvar _c;\n$RefreshReg$(_c, \"CreateProgram\");","map":{"version":3,"names":["React","useState","useNavigate","DayContainerProvider","DayContainer","ProgramForm","NavBar","ExerciseList","jsxDEV","_jsxDEV","CreateProgram","_s","_days$find","program","setProgram","programName","mainGoal","programDuration","durationUnit","daysPerWeek","workouts","days","setDays","id","name","exercises","showExerciseList","setShowExerciseList","activeDay","setActiveDay","navigate","handleAddExercise","dayId","handleAddDay","newDayId","length","newDay","handleRemoveDay","updatedDays","filter","day","renumberedDays","map","index","handleSelectExercise","exercise","isExerciseSelected","find","ex","handleSaveProgram","NewProgram","programData","user_id","program_duration","days_per_week","duration_unit","main_goal","workout","order","catalog_exercise_id","sets","set","reps","weight","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","className","children","isEditing","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","isActive","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { DayContainerProvider } from '../../../contexts/dayContainerContext';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport ProgramForm from '../../../components/Program/ProgramForm';\nimport NavBar from '../../../components/Nav/Nav';\nimport ExerciseList from '../../../components/ExerciseList/ExerciseList';\nimport './program.css';\n\nconst CreateProgram = () => {\n  const [program, setProgram] = useState({\n    programName: '',\n    mainGoal: '',\n    programDuration: '',\n    durationUnit: '',\n    daysPerWeek: '',\n    workouts: []\n  });\n\n  const [days, setDays] = useState([{ id: 1, name: 'Day 1', exercises: [] }]);\n  const [showExerciseList, setShowExerciseList] = useState(false);\n  const [activeDay, setActiveDay] = useState(null);\n\n  const navigate = useNavigate();\n\n  const handleAddExercise = dayId => {\n    setShowExerciseList(true);\n    setActiveDay(dayId);\n  };\n\n  const handleAddDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1;\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}`\n    };\n    setDays([...days, newDay]);\n  };\n\n  const handleRemoveDay = dayId => {\n    //remove days\n    const updatedDays = days.filter(day => day.id !== dayId);\n\n    //renumber the remaining days\n    const renumberedDays = updatedDays.map((day, index) => ({\n      ...day,\n      id: index + 1,\n      name: `Day ${index + 1}`\n    }));\n    setDays(renumberedDays);\n  };\n\n  const handleSelectExercise = exercise => {\n    setDays(\n      days.map(day => {\n        if (day.id === activeDay) {\n          const isExerciseSelected = day.exercises.find(\n            ex => ex.id === exercise.id\n          );\n          if (isExerciseSelected) {\n            // Exercise is already selected, so remove it\n            return {\n              ...day,\n              exercises: day.exercises.filter(ex => ex.id !== exercise.id)\n            };\n          } else {\n            // Exercise is not selected, so add it\n            return { ...day, exercises: [...day.exercises, exercise] };\n          }\n        }\n        return day;\n      })\n    );\n  };\n\n  const handleSaveProgram = async NewProgram => {\n    const programData = {\n      user_id: 2,\n      name: NewProgram.programName,\n      program_duration: NewProgram.programDuration,\n      days_per_week: NewProgram.daysPerWeek,\n      duration_unit: NewProgram.durationUnit,\n      main_goal: NewProgram.mainGoal,\n      workouts: NewProgram.workouts.map(workout => ({\n        name: workout.name,\n        order: workout.order,\n        exercises: workout.exercises.map(exercise => ({\n          catalog_exercise_id: exercise.catalog_exercise_id,\n          order: exercise.order,\n          sets: exercise.sets.map(set => ({\n            reps: set.reps,\n            weight: set.weight,\n            order: set.order\n          }))\n        }))\n      }))\n    };\n\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(programData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went wrong with saving the program');\n      }\n\n      // Assuming the backend responds with the created template, you could use it here if needed\n      // const savedTemplate = await response.json();\n\n      // After saving, redirect back to the WorkoutPage\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n      // Here, you could set an error state and display it to the user if you wish\n    }\n  };\n\n  return (\n    <div className='create-prog-page'>\n      <NavBar isEditing='true' />\n      <div className='create-prog-page__container'>\n        <div className='create-prog-page__left-container'>\n          <div className='create-prog-page__header'>\n            <h1 className='create-prog-page__title'>Create New Program</h1>\n          </div>\n\n          <ProgramForm\n            program={program}\n            onSubmit={handleSaveProgram}\n            handleAddDay={handleAddDay}\n            isEditing={true}\n          />\n\n          <DayContainerProvider>\n            {days.map(day => (\n              <DayContainer\n                key={day.id}\n                day={day}\n                isActive={activeDay === day.id}\n                handleRemoveDay={handleRemoveDay}\n                handleAddExercise={() => handleAddExercise(day.id)}\n              />\n            ))}\n          </DayContainerProvider>\n        </div>\n        <div className='create-prog-page__right-container'>\n          <h1 className='create-prog-page__exercise-container-title'>\n            {activeDay\n              ? `Adding exercises for ${\n                  days.find(day => day.id === activeDay)?.name\n                }`\n              : 'Select a day to add exercises'}\n          </h1>\n          {showExerciseList && <ExerciseList />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateProgram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}