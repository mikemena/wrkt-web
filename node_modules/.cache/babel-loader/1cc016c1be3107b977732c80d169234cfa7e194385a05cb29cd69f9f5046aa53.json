{"ast":null,"code":"import { createNewProgram } from '../utils/programStructures';\nimport { initialState } from './initialState';\nfunction programReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      console.log('SET_SELECTED_PROGRAM action:', action.payload);\n      return {\n        ...state,\n        selectedProgramId: action.payload.id,\n        programs: {\n          ...state.programs,\n          [action.payload.id]: action.payload\n        }\n      };\n    case 'ADD_PROGRAM':\n      const newProgram = createNewProgram();\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [newProgram.tempId]: {\n            ...newProgram,\n            ...action.payload\n          }\n        }\n      };\n    case 'UPDATE_PROGRAM':\n      const updatedProgram = action.payload;\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [updatedProgram.id || updatedProgram.tempId]: updatedProgram\n        }\n      };\n    case 'UPDATE_PROGRAM_SUCCESS':\n      const savedProgram = action.payload;\n      if (!savedProgram || !savedProgram.id && !savedProgram.tempId) {\n        console.error('Invalid program data received:', savedProgram);\n        return state;\n      }\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [savedProgram.id || savedProgram.tempId]: {\n            ...savedProgram,\n            isNew: false\n          }\n        }\n      };\n    case 'DELETE_PROGRAM':\n      const {\n        programId\n      } = action.payload;\n      const {\n        [programId]: deletedProgram,\n        ...remainingPrograms\n      } = state.programs;\n      return {\n        ...state,\n        programs: remainingPrograms,\n        selectedProgramId: state.selectedProgramId === programId ? null : state.selectedProgramId\n      };\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["createNewProgram","initialState","programReducer","state","action","type","console","log","payload","selectedProgramId","id","programs","newProgram","tempId","updatedProgram","savedProgram","error","isNew","programId","deletedProgram","remainingPrograms"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["import { createNewProgram } from '../utils/programStructures';\nimport { initialState } from './initialState';\n\nfunction programReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      console.log('SET_SELECTED_PROGRAM action:', action.payload);\n      return {\n        ...state,\n        selectedProgramId: action.payload.id,\n        programs: {\n          ...state.programs,\n          [action.payload.id]: action.payload\n        }\n      };\n\n    case 'ADD_PROGRAM':\n      const newProgram = createNewProgram();\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [newProgram.tempId]: {\n            ...newProgram,\n            ...action.payload\n          }\n        }\n      };\n\n    case 'UPDATE_PROGRAM':\n      const updatedProgram = action.payload;\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [updatedProgram.id || updatedProgram.tempId]: updatedProgram\n        }\n      };\n\n    case 'UPDATE_PROGRAM_SUCCESS':\n      const savedProgram = action.payload;\n      if (!savedProgram || (!savedProgram.id && !savedProgram.tempId)) {\n        console.error('Invalid program data received:', savedProgram);\n        return state;\n      }\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [savedProgram.id || savedProgram.tempId]: {\n            ...savedProgram,\n            isNew: false\n          }\n        }\n      };\n\n    case 'DELETE_PROGRAM':\n      const { programId } = action.payload;\n      const { [programId]: deletedProgram, ...remainingPrograms } =\n        state.programs;\n      return {\n        ...state,\n        programs: remainingPrograms,\n        selectedProgramId:\n          state.selectedProgramId === programId ? null : state.selectedProgramId\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,SAASC,cAAcA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,EAAE;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,sBAAsB;MACzBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,MAAM,CAACI,OAAO,CAAC;MAC3D,OAAO;QACL,GAAGL,KAAK;QACRM,iBAAiB,EAAEL,MAAM,CAACI,OAAO,CAACE,EAAE;QACpCC,QAAQ,EAAE;UACR,GAAGR,KAAK,CAACQ,QAAQ;UACjB,CAACP,MAAM,CAACI,OAAO,CAACE,EAAE,GAAGN,MAAM,CAACI;QAC9B;MACF,CAAC;IAEH,KAAK,aAAa;MAChB,MAAMI,UAAU,GAAGZ,gBAAgB,CAAC,CAAC;MACrC,OAAO;QACL,GAAGG,KAAK;QACRQ,QAAQ,EAAE;UACR,GAAGR,KAAK,CAACQ,QAAQ;UACjB,CAACC,UAAU,CAACC,MAAM,GAAG;YACnB,GAAGD,UAAU;YACb,GAAGR,MAAM,CAACI;UACZ;QACF;MACF,CAAC;IAEH,KAAK,gBAAgB;MACnB,MAAMM,cAAc,GAAGV,MAAM,CAACI,OAAO;MACrC,OAAO;QACL,GAAGL,KAAK;QACRQ,QAAQ,EAAE;UACR,GAAGR,KAAK,CAACQ,QAAQ;UACjB,CAACG,cAAc,CAACJ,EAAE,IAAII,cAAc,CAACD,MAAM,GAAGC;QAChD;MACF,CAAC;IAEH,KAAK,wBAAwB;MAC3B,MAAMC,YAAY,GAAGX,MAAM,CAACI,OAAO;MACnC,IAAI,CAACO,YAAY,IAAK,CAACA,YAAY,CAACL,EAAE,IAAI,CAACK,YAAY,CAACF,MAAO,EAAE;QAC/DP,OAAO,CAACU,KAAK,CAAC,gCAAgC,EAAED,YAAY,CAAC;QAC7D,OAAOZ,KAAK;MACd;MACA,OAAO;QACL,GAAGA,KAAK;QACRQ,QAAQ,EAAE;UACR,GAAGR,KAAK,CAACQ,QAAQ;UACjB,CAACI,YAAY,CAACL,EAAE,IAAIK,YAAY,CAACF,MAAM,GAAG;YACxC,GAAGE,YAAY;YACfE,KAAK,EAAE;UACT;QACF;MACF,CAAC;IAEH,KAAK,gBAAgB;MACnB,MAAM;QAAEC;MAAU,CAAC,GAAGd,MAAM,CAACI,OAAO;MACpC,MAAM;QAAE,CAACU,SAAS,GAAGC,cAAc;QAAE,GAAGC;MAAkB,CAAC,GACzDjB,KAAK,CAACQ,QAAQ;MAChB,OAAO;QACL,GAAGR,KAAK;QACRQ,QAAQ,EAAES,iBAAiB;QAC3BX,iBAAiB,EACfN,KAAK,CAACM,iBAAiB,KAAKS,SAAS,GAAG,IAAI,GAAGf,KAAK,CAACM;MACzD,CAAC;IAEH;MACE,OAAON,KAAK;EAChB;AACF;AAEA,SAASD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}