{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nconst initialState = {\n  workouts: [],\n  activeWorkout: null\n};\nfunction workoutReducer(state = initialState, action) {\n  switch (action.type) {\n    //For adding a new workout to the program.\n\n    case 'ADD_WORKOUT':\n      console.log('Current state:', state);\n      console.log('Action:', action);\n      console.log('ADD_WORKOUT called from workoutReducer.js');\n      // Find the highest index used in existing workout names\n      const maxIndex = state.workouts.reduce((max, workout) => {\n        const match = workout.name.match(/Workout (\\d+)/); // Assuming the format \"Workout 1\", \"Workout 2\", etc.\n        const index = match ? parseInt(match[1], 10) : 0;\n        return Math.max(max, index);\n      }, 0);\n\n      // Create a new workout with an incremented title index or use the provided name\n      const workoutTitle = action.payload.name || `Workout ${maxIndex + 1}`;\n      const newWorkout = {\n        id: uuidv4(),\n        name: workoutTitle,\n        exercises: [],\n        active: false\n      };\n      const newWorkouts = [...state.workouts, newWorkout];\n      const newProgram = {\n        ...state.program,\n        workouts: newWorkouts\n      };\n      return {\n        ...state,\n        workouts: [...state.workouts, newWorkout],\n        activeWorkout: newWorkout,\n        program: newProgram\n      };\n\n    //Changes to a workout that might involve renaming or perhaps changing other properties.\n    case 'UPDATE_WORKOUT':\n      return {\n        ...state,\n        workouts: state.workouts.map(workout => workout.id === action.payload.id ? action.payload : workout)\n      };\n    case 'DELETE_WORKOUT':\n      const workoutIndex = state.workouts.findIndex(workout => workout.id === action.payload);\n\n      // Prevent deleting if only one workout exists\n      if (state.workouts.length <= 1) {\n        return state;\n      }\n      const updatedWorkouts = state.workouts.filter(workout => workout.id !== action.payload);\n\n      // Determine the new active workout if necessary\n      let newActiveWorkout = null;\n      if (state.activeWorkout && state.activeWorkout.id === action.payload) {\n        if (workoutIndex === state.workouts.length - 1) {\n          // If it was the last workout, set the previous one as active\n          newActiveWorkout = updatedWorkouts[workoutIndex - 1];\n        } else {\n          // Otherwise, set the next workout as active (or previous if it was the last)\n          newActiveWorkout = updatedWorkouts[Math.max(0, workoutIndex)];\n        }\n      } else {\n        newActiveWorkout = state.activeWorkout;\n      }\n      return {\n        ...state,\n        workouts: updatedWorkouts,\n        activeWorkout: newActiveWorkout\n      };\n    default:\n      return state;\n  }\n}\nexport { workoutReducer };","map":{"version":3,"names":["v4","uuidv4","initialState","workouts","activeWorkout","workoutReducer","state","action","type","console","log","maxIndex","reduce","max","workout","match","name","index","parseInt","Math","workoutTitle","payload","newWorkout","id","exercises","active","newWorkouts","newProgram","program","map","workoutIndex","findIndex","length","updatedWorkouts","filter","newActiveWorkout"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/workoutReducer.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nconst initialState = {\n  workouts: [],\n  activeWorkout: null\n};\n\nfunction workoutReducer(state = initialState, action) {\n  switch (action.type) {\n    //For adding a new workout to the program.\n\n    case 'ADD_WORKOUT':\n      console.log('Current state:', state);\n      console.log('Action:', action);\n      console.log('ADD_WORKOUT called from workoutReducer.js');\n      // Find the highest index used in existing workout names\n      const maxIndex = state.workouts.reduce((max, workout) => {\n        const match = workout.name.match(/Workout (\\d+)/); // Assuming the format \"Workout 1\", \"Workout 2\", etc.\n        const index = match ? parseInt(match[1], 10) : 0;\n        return Math.max(max, index);\n      }, 0);\n\n      // Create a new workout with an incremented title index or use the provided name\n      const workoutTitle = action.payload.name || `Workout ${maxIndex + 1}`;\n\n      const newWorkout = {\n        id: uuidv4(),\n        name: workoutTitle,\n        exercises: [],\n        active: false\n      };\n\n      const newWorkouts = [...state.workouts, newWorkout];\n      const newProgram = { ...state.program, workouts: newWorkouts };\n\n      return {\n        ...state,\n        workouts: [...state.workouts, newWorkout],\n        activeWorkout: newWorkout,\n        program: newProgram\n      };\n\n    //Changes to a workout that might involve renaming or perhaps changing other properties.\n    case 'UPDATE_WORKOUT':\n      return {\n        ...state,\n        workouts: state.workouts.map(workout =>\n          workout.id === action.payload.id ? action.payload : workout\n        )\n      };\n\n    case 'DELETE_WORKOUT':\n      const workoutIndex = state.workouts.findIndex(\n        workout => workout.id === action.payload\n      );\n\n      // Prevent deleting if only one workout exists\n      if (state.workouts.length <= 1) {\n        return state;\n      }\n\n      const updatedWorkouts = state.workouts.filter(\n        workout => workout.id !== action.payload\n      );\n\n      // Determine the new active workout if necessary\n      let newActiveWorkout = null;\n      if (state.activeWorkout && state.activeWorkout.id === action.payload) {\n        if (workoutIndex === state.workouts.length - 1) {\n          // If it was the last workout, set the previous one as active\n          newActiveWorkout = updatedWorkouts[workoutIndex - 1];\n        } else {\n          // Otherwise, set the next workout as active (or previous if it was the last)\n          newActiveWorkout = updatedWorkouts[Math.max(0, workoutIndex)];\n        }\n      } else {\n        newActiveWorkout = state.activeWorkout;\n      }\n\n      return {\n        ...state,\n        workouts: updatedWorkouts,\n        activeWorkout: newActiveWorkout\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { workoutReducer };\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE;AACjB,CAAC;AAED,SAASC,cAAcA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,EAAE;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB;;IAEA,KAAK,aAAa;MAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,KAAK,CAAC;MACpCG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;MAC9BE,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MACxD;MACA,MAAMC,QAAQ,GAAGL,KAAK,CAACH,QAAQ,CAACS,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;QACvD,MAAMC,KAAK,GAAGD,OAAO,CAACE,IAAI,CAACD,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;QACnD,MAAME,KAAK,GAAGF,KAAK,GAAGG,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;QAChD,OAAOI,IAAI,CAACN,GAAG,CAACA,GAAG,EAAEI,KAAK,CAAC;MAC7B,CAAC,EAAE,CAAC,CAAC;;MAEL;MACA,MAAMG,YAAY,GAAGb,MAAM,CAACc,OAAO,CAACL,IAAI,IAAK,WAAUL,QAAQ,GAAG,CAAE,EAAC;MAErE,MAAMW,UAAU,GAAG;QACjBC,EAAE,EAAEtB,MAAM,CAAC,CAAC;QACZe,IAAI,EAAEI,YAAY;QAClBI,SAAS,EAAE,EAAE;QACbC,MAAM,EAAE;MACV,CAAC;MAED,MAAMC,WAAW,GAAG,CAAC,GAAGpB,KAAK,CAACH,QAAQ,EAAEmB,UAAU,CAAC;MACnD,MAAMK,UAAU,GAAG;QAAE,GAAGrB,KAAK,CAACsB,OAAO;QAAEzB,QAAQ,EAAEuB;MAAY,CAAC;MAE9D,OAAO;QACL,GAAGpB,KAAK;QACRH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEmB,UAAU,CAAC;QACzClB,aAAa,EAAEkB,UAAU;QACzBM,OAAO,EAAED;MACX,CAAC;;IAEH;IACA,KAAK,gBAAgB;MACnB,OAAO;QACL,GAAGrB,KAAK;QACRH,QAAQ,EAAEG,KAAK,CAACH,QAAQ,CAAC0B,GAAG,CAACf,OAAO,IAClCA,OAAO,CAACS,EAAE,KAAKhB,MAAM,CAACc,OAAO,CAACE,EAAE,GAAGhB,MAAM,CAACc,OAAO,GAAGP,OACtD;MACF,CAAC;IAEH,KAAK,gBAAgB;MACnB,MAAMgB,YAAY,GAAGxB,KAAK,CAACH,QAAQ,CAAC4B,SAAS,CAC3CjB,OAAO,IAAIA,OAAO,CAACS,EAAE,KAAKhB,MAAM,CAACc,OACnC,CAAC;;MAED;MACA,IAAIf,KAAK,CAACH,QAAQ,CAAC6B,MAAM,IAAI,CAAC,EAAE;QAC9B,OAAO1B,KAAK;MACd;MAEA,MAAM2B,eAAe,GAAG3B,KAAK,CAACH,QAAQ,CAAC+B,MAAM,CAC3CpB,OAAO,IAAIA,OAAO,CAACS,EAAE,KAAKhB,MAAM,CAACc,OACnC,CAAC;;MAED;MACA,IAAIc,gBAAgB,GAAG,IAAI;MAC3B,IAAI7B,KAAK,CAACF,aAAa,IAAIE,KAAK,CAACF,aAAa,CAACmB,EAAE,KAAKhB,MAAM,CAACc,OAAO,EAAE;QACpE,IAAIS,YAAY,KAAKxB,KAAK,CAACH,QAAQ,CAAC6B,MAAM,GAAG,CAAC,EAAE;UAC9C;UACAG,gBAAgB,GAAGF,eAAe,CAACH,YAAY,GAAG,CAAC,CAAC;QACtD,CAAC,MAAM;UACL;UACAK,gBAAgB,GAAGF,eAAe,CAACd,IAAI,CAACN,GAAG,CAAC,CAAC,EAAEiB,YAAY,CAAC,CAAC;QAC/D;MACF,CAAC,MAAM;QACLK,gBAAgB,GAAG7B,KAAK,CAACF,aAAa;MACxC;MAEA,OAAO;QACL,GAAGE,KAAK;QACRH,QAAQ,EAAE8B,eAAe;QACzB7B,aAAa,EAAE+B;MACjB,CAAC;IAEH;MACE,OAAO7B,KAAK;EAChB;AACF;AAEA,SAASD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}