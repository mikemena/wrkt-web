{"ast":null,"code":"import { actionTypes } from '../actions/actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\nimport { initialState } from './initialState';\nfunction exerciseReducer(state = initialState.workouts, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      {\n        const {\n          workoutId,\n          exercises = []\n        } = action.payload;\n        const currentExercises = state[workoutId] || [];\n        const exerciseIds = currentExercises.map(ex => ex.id);\n        console.log('Current state before adding exercise:', state);\n        const newExercises = exercises.filter(ex => !exerciseIds.includes(ex.id)).map((exercise, index) => ({\n          ...exercise,\n          order: currentExercises.length + index + 1,\n          id: uuidv4(),\n          catalog_exercise_id: exercise.id,\n          sets: [{\n            id: uuidv4(),\n            order: 1,\n            weight: 10,\n            reps: 10\n          }]\n        }));\n        return {\n          ...state,\n          [workoutId]: [...currentExercises, ...newExercises]\n        };\n      }\n    case actionTypes.UPDATE_EXERCISE:\n      {\n        console.log('Current state before adding exercise:', state);\n        const {\n          workoutId,\n          updatedExercise\n        } = action.payload;\n        return {\n          ...state,\n          [workoutId]: state[workoutId].map(exercise => exercise.id === updatedExercise.id ? {\n            ...exercise,\n            ...updatedExercise,\n            // Ensure the exercise ID is preserved\n            id: updatedExercise.id\n          } : exercise)\n        };\n      }\n    case actionTypes.DELETE_EXERCISE:\n      {\n        if (!action.payload) {\n          console.error('Invalid payload for DELETE_EXERCISE', action.payload);\n          return state;\n        }\n        const {\n          workoutId,\n          exerciseId\n        } = action.payload;\n\n        // Filter out the deleted exercise and reorder the remaining exercises\n        const updatedExercises = state[workoutId].filter(ex => ex.id !== exerciseId).map((exercise, index) => ({\n          ...exercise,\n          order: index + 1\n        }));\n        return {\n          ...state,\n          [workoutId]: updatedExercises\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["actionTypes","v4","uuidv4","initialState","exerciseReducer","state","workouts","action","type","ADD_EXERCISE","workoutId","exercises","payload","currentExercises","exerciseIds","map","ex","id","console","log","newExercises","filter","includes","exercise","index","order","length","catalog_exercise_id","sets","weight","reps","UPDATE_EXERCISE","updatedExercise","DELETE_EXERCISE","error","exerciseId","updatedExercises"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["import { actionTypes } from '../actions/actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\nimport { initialState } from './initialState';\n\nfunction exerciseReducer(state = initialState.workouts, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE: {\n      const { workoutId, exercises = [] } = action.payload;\n      const currentExercises = state[workoutId] || [];\n      const exerciseIds = currentExercises.map(ex => ex.id);\n      console.log('Current state before adding exercise:', state);\n\n      const newExercises = exercises\n        .filter(ex => !exerciseIds.includes(ex.id))\n        .map((exercise, index) => ({\n          ...exercise,\n          order: currentExercises.length + index + 1,\n          id: uuidv4(),\n          catalog_exercise_id: exercise.id,\n          sets: [\n            {\n              id: uuidv4(),\n              order: 1,\n              weight: 10,\n              reps: 10\n            }\n          ]\n        }));\n\n      return {\n        ...state,\n        [workoutId]: [...currentExercises, ...newExercises]\n      };\n    }\n\n    case actionTypes.UPDATE_EXERCISE: {\n      console.log('Current state before adding exercise:', state);\n      const { workoutId, updatedExercise } = action.payload;\n      return {\n        ...state,\n        [workoutId]: state[workoutId].map(exercise =>\n          exercise.id === updatedExercise.id\n            ? {\n                ...exercise,\n                ...updatedExercise,\n                // Ensure the exercise ID is preserved\n                id: updatedExercise.id\n              }\n            : exercise\n        )\n      };\n    }\n\n    case actionTypes.DELETE_EXERCISE: {\n      if (!action.payload) {\n        console.error('Invalid payload for DELETE_EXERCISE', action.payload);\n        return state;\n      }\n      const { workoutId, exerciseId } = action.payload;\n\n      // Filter out the deleted exercise and reorder the remaining exercises\n      const updatedExercises = state[workoutId]\n        .filter(ex => ex.id !== exerciseId)\n        .map((exercise, index) => ({\n          ...exercise,\n          order: index + 1\n        }));\n\n      return {\n        ...state,\n        [workoutId]: updatedExercises\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,SAASC,eAAeA,CAACC,KAAK,GAAGF,YAAY,CAACG,QAAQ,EAAEC,MAAM,EAAE;EAC9D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,WAAW,CAACS,YAAY;MAAE;QAC7B,MAAM;UAAEC,SAAS;UAAEC,SAAS,GAAG;QAAG,CAAC,GAAGJ,MAAM,CAACK,OAAO;QACpD,MAAMC,gBAAgB,GAAGR,KAAK,CAACK,SAAS,CAAC,IAAI,EAAE;QAC/C,MAAMI,WAAW,GAAGD,gBAAgB,CAACE,GAAG,CAACC,EAAE,IAAIA,EAAE,CAACC,EAAE,CAAC;QACrDC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEd,KAAK,CAAC;QAE3D,MAAMe,YAAY,GAAGT,SAAS,CAC3BU,MAAM,CAACL,EAAE,IAAI,CAACF,WAAW,CAACQ,QAAQ,CAACN,EAAE,CAACC,EAAE,CAAC,CAAC,CAC1CF,GAAG,CAAC,CAACQ,QAAQ,EAAEC,KAAK,MAAM;UACzB,GAAGD,QAAQ;UACXE,KAAK,EAAEZ,gBAAgB,CAACa,MAAM,GAAGF,KAAK,GAAG,CAAC;UAC1CP,EAAE,EAAEf,MAAM,CAAC,CAAC;UACZyB,mBAAmB,EAAEJ,QAAQ,CAACN,EAAE;UAChCW,IAAI,EAAE,CACJ;YACEX,EAAE,EAAEf,MAAM,CAAC,CAAC;YACZuB,KAAK,EAAE,CAAC;YACRI,MAAM,EAAE,EAAE;YACVC,IAAI,EAAE;UACR,CAAC;QAEL,CAAC,CAAC,CAAC;QAEL,OAAO;UACL,GAAGzB,KAAK;UACR,CAACK,SAAS,GAAG,CAAC,GAAGG,gBAAgB,EAAE,GAAGO,YAAY;QACpD,CAAC;MACH;IAEA,KAAKpB,WAAW,CAAC+B,eAAe;MAAE;QAChCb,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEd,KAAK,CAAC;QAC3D,MAAM;UAAEK,SAAS;UAAEsB;QAAgB,CAAC,GAAGzB,MAAM,CAACK,OAAO;QACrD,OAAO;UACL,GAAGP,KAAK;UACR,CAACK,SAAS,GAAGL,KAAK,CAACK,SAAS,CAAC,CAACK,GAAG,CAACQ,QAAQ,IACxCA,QAAQ,CAACN,EAAE,KAAKe,eAAe,CAACf,EAAE,GAC9B;YACE,GAAGM,QAAQ;YACX,GAAGS,eAAe;YAClB;YACAf,EAAE,EAAEe,eAAe,CAACf;UACtB,CAAC,GACDM,QACN;QACF,CAAC;MACH;IAEA,KAAKvB,WAAW,CAACiC,eAAe;MAAE;QAChC,IAAI,CAAC1B,MAAM,CAACK,OAAO,EAAE;UACnBM,OAAO,CAACgB,KAAK,CAAC,qCAAqC,EAAE3B,MAAM,CAACK,OAAO,CAAC;UACpE,OAAOP,KAAK;QACd;QACA,MAAM;UAAEK,SAAS;UAAEyB;QAAW,CAAC,GAAG5B,MAAM,CAACK,OAAO;;QAEhD;QACA,MAAMwB,gBAAgB,GAAG/B,KAAK,CAACK,SAAS,CAAC,CACtCW,MAAM,CAACL,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKkB,UAAU,CAAC,CAClCpB,GAAG,CAAC,CAACQ,QAAQ,EAAEC,KAAK,MAAM;UACzB,GAAGD,QAAQ;UACXE,KAAK,EAAED,KAAK,GAAG;QACjB,CAAC,CAAC,CAAC;QAEL,OAAO;UACL,GAAGnB,KAAK;UACR,CAACK,SAAS,GAAG0B;QACf,CAAC;MACH;IAEA;MACE,OAAO/B,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}