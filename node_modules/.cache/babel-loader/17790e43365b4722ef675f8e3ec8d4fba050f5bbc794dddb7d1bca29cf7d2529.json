{"ast":null,"code":"function exerciseReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_EXERCISE':\n      console.log('Adding exercise:', action.payload);\n      const {\n        workoutId,\n        exercises\n      } = action.payload;\n      if (state.activeWorkout.id === workoutId) {\n        return {\n          ...state,\n          activeWorkout: {\n            ...state.activeWorkout,\n            exercises: [...state.activeWorkout.exercises, ...exercises]\n          }\n        };\n      }\n      return state;\n    case 'UPDATE_EXERCISE':\n      // action.payload should include the id of the exercise to update\n      // and the properties to be updated.\n      if (state[action.payload.id]) {\n        return {\n          ...state,\n          [action.payload.id]: {\n            ...state[action.payload.id],\n            ...action.payload.updates\n          }\n        };\n      }\n      return state;\n    case 'DELETE_EXERCISE':\n      // action.payload should be the id of the exercise to delete.\n      const newState = {\n        ...state\n      };\n      delete newState[action.payload];\n      return newState;\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["exerciseReducer","state","action","type","console","log","payload","workoutId","exercises","activeWorkout","id","updates","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["function exerciseReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_EXERCISE':\n      console.log('Adding exercise:', action.payload);\n      const { workoutId, exercises } = action.payload;\n      if (state.activeWorkout.id === workoutId) {\n        return {\n          ...state,\n          activeWorkout: {\n            ...state.activeWorkout,\n            exercises: [...state.activeWorkout.exercises, ...exercises]\n          }\n        };\n      }\n      return state;\n\n    case 'UPDATE_EXERCISE':\n      // action.payload should include the id of the exercise to update\n      // and the properties to be updated.\n      if (state[action.payload.id]) {\n        return {\n          ...state,\n          [action.payload.id]: {\n            ...state[action.payload.id],\n            ...action.payload.updates\n          }\n        };\n      }\n      return state;\n\n    case 'DELETE_EXERCISE':\n      // action.payload should be the id of the exercise to delete.\n      const newState = { ...state };\n      delete newState[action.payload];\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,eAAeA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACtC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,MAAM,CAACI,OAAO,CAAC;MAC/C,MAAM;QAAEC,SAAS;QAAEC;MAAU,CAAC,GAAGN,MAAM,CAACI,OAAO;MAC/C,IAAIL,KAAK,CAACQ,aAAa,CAACC,EAAE,KAAKH,SAAS,EAAE;QACxC,OAAO;UACL,GAAGN,KAAK;UACRQ,aAAa,EAAE;YACb,GAAGR,KAAK,CAACQ,aAAa;YACtBD,SAAS,EAAE,CAAC,GAAGP,KAAK,CAACQ,aAAa,CAACD,SAAS,EAAE,GAAGA,SAAS;UAC5D;QACF,CAAC;MACH;MACA,OAAOP,KAAK;IAEd,KAAK,iBAAiB;MACpB;MACA;MACA,IAAIA,KAAK,CAACC,MAAM,CAACI,OAAO,CAACI,EAAE,CAAC,EAAE;QAC5B,OAAO;UACL,GAAGT,KAAK;UACR,CAACC,MAAM,CAACI,OAAO,CAACI,EAAE,GAAG;YACnB,GAAGT,KAAK,CAACC,MAAM,CAACI,OAAO,CAACI,EAAE,CAAC;YAC3B,GAAGR,MAAM,CAACI,OAAO,CAACK;UACpB;QACF,CAAC;MACH;MACA,OAAOV,KAAK;IAEd,KAAK,iBAAiB;MACpB;MACA,MAAMW,QAAQ,GAAG;QAAE,GAAGX;MAAM,CAAC;MAC7B,OAAOW,QAAQ,CAACV,MAAM,CAACI,OAAO,CAAC;MAC/B,OAAOM,QAAQ;IAEjB;MACE,OAAOX,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}