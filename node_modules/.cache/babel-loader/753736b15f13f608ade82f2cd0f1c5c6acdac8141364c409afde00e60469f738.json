{"ast":null,"code":"import { actionTypes } from '../actions/actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\nfunction exerciseReducer(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      {\n        console.log('Payload:', action.payload);\n        const {\n          workoutId,\n          exercises = []\n        } = action.payload;\n        const currentExercises = state[workoutId] || [];\n        const exerciseIds = currentExercises.map(ex => ex.id);\n        const newExercises = exercises.filter(ex => !exerciseIds.includes(ex.id)).map((exercise, index) => ({\n          ...exercise,\n          order: currentExercises.length + index + 1,\n          id: uuidv4(),\n          catalog_exercise_id: exercise.id,\n          sets: [{\n            id: uuidv4(),\n            order: 1,\n            weight: 10,\n            reps: 10\n          }]\n        }));\n        return {\n          ...state,\n          [workoutId]: [...currentExercises, ...newExercises]\n        };\n      }\n    case actionTypes.DELETE_EXERCISE:\n      {\n        if (!action.payload) {\n          console.error('Invalid payload for DELETE_EXERCISE', action.payload);\n          return state;\n        }\n        const {\n          workoutId,\n          exerciseId\n        } = action.payload;\n\n        // Filter out the deleted exercise and reorder the remaining exercises\n        const updatedExercises = state[workoutId].filter(ex => ex.id !== exerciseId).map((exercise, index) => ({\n          ...exercise,\n          order: index + 1\n        }));\n        return {\n          ...state,\n          [workoutId]: updatedExercises\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["actionTypes","v4","uuidv4","exerciseReducer","state","action","type","ADD_EXERCISE","console","log","payload","workoutId","exercises","currentExercises","exerciseIds","map","ex","id","newExercises","filter","includes","exercise","index","order","length","catalog_exercise_id","sets","weight","reps","DELETE_EXERCISE","error","exerciseId","updatedExercises"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["import { actionTypes } from '../actions/actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction exerciseReducer(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE: {\n      console.log('Payload:', action.payload);\n      const { workoutId, exercises = [] } = action.payload;\n      const currentExercises = state[workoutId] || [];\n      const exerciseIds = currentExercises.map(ex => ex.id);\n      const newExercises = exercises\n        .filter(ex => !exerciseIds.includes(ex.id))\n        .map((exercise, index) => ({\n          ...exercise,\n          order: currentExercises.length + index + 1,\n          id: uuidv4(),\n          catalog_exercise_id: exercise.id,\n          sets: [\n            {\n              id: uuidv4(),\n              order: 1,\n              weight: 10,\n              reps: 10\n            }\n          ]\n        }));\n\n      return {\n        ...state,\n        [workoutId]: [...currentExercises, ...newExercises]\n      };\n    }\n\n    case actionTypes.DELETE_EXERCISE: {\n      if (!action.payload) {\n        console.error('Invalid payload for DELETE_EXERCISE', action.payload);\n        return state;\n      }\n      const { workoutId, exerciseId } = action.payload;\n\n      // Filter out the deleted exercise and reorder the remaining exercises\n      const updatedExercises = state[workoutId]\n        .filter(ex => ex.id !== exerciseId)\n        .map((exercise, index) => ({\n          ...exercise,\n          order: index + 1\n        }));\n\n      return {\n        ...state,\n        [workoutId]: updatedExercises\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,SAASC,eAAeA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,EAAE;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,WAAW,CAACO,YAAY;MAAE;QAC7BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,MAAM,CAACK,OAAO,CAAC;QACvC,MAAM;UAAEC,SAAS;UAAEC,SAAS,GAAG;QAAG,CAAC,GAAGP,MAAM,CAACK,OAAO;QACpD,MAAMG,gBAAgB,GAAGT,KAAK,CAACO,SAAS,CAAC,IAAI,EAAE;QAC/C,MAAMG,WAAW,GAAGD,gBAAgB,CAACE,GAAG,CAACC,EAAE,IAAIA,EAAE,CAACC,EAAE,CAAC;QACrD,MAAMC,YAAY,GAAGN,SAAS,CAC3BO,MAAM,CAACH,EAAE,IAAI,CAACF,WAAW,CAACM,QAAQ,CAACJ,EAAE,CAACC,EAAE,CAAC,CAAC,CAC1CF,GAAG,CAAC,CAACM,QAAQ,EAAEC,KAAK,MAAM;UACzB,GAAGD,QAAQ;UACXE,KAAK,EAAEV,gBAAgB,CAACW,MAAM,GAAGF,KAAK,GAAG,CAAC;UAC1CL,EAAE,EAAEf,MAAM,CAAC,CAAC;UACZuB,mBAAmB,EAAEJ,QAAQ,CAACJ,EAAE;UAChCS,IAAI,EAAE,CACJ;YACET,EAAE,EAAEf,MAAM,CAAC,CAAC;YACZqB,KAAK,EAAE,CAAC;YACRI,MAAM,EAAE,EAAE;YACVC,IAAI,EAAE;UACR,CAAC;QAEL,CAAC,CAAC,CAAC;QAEL,OAAO;UACL,GAAGxB,KAAK;UACR,CAACO,SAAS,GAAG,CAAC,GAAGE,gBAAgB,EAAE,GAAGK,YAAY;QACpD,CAAC;MACH;IAEA,KAAKlB,WAAW,CAAC6B,eAAe;MAAE;QAChC,IAAI,CAACxB,MAAM,CAACK,OAAO,EAAE;UACnBF,OAAO,CAACsB,KAAK,CAAC,qCAAqC,EAAEzB,MAAM,CAACK,OAAO,CAAC;UACpE,OAAON,KAAK;QACd;QACA,MAAM;UAAEO,SAAS;UAAEoB;QAAW,CAAC,GAAG1B,MAAM,CAACK,OAAO;;QAEhD;QACA,MAAMsB,gBAAgB,GAAG5B,KAAK,CAACO,SAAS,CAAC,CACtCQ,MAAM,CAACH,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKc,UAAU,CAAC,CAClChB,GAAG,CAAC,CAACM,QAAQ,EAAEC,KAAK,MAAM;UACzB,GAAGD,QAAQ;UACXE,KAAK,EAAED,KAAK,GAAG;QACjB,CAAC,CAAC,CAAC;QAEL,OAAO;UACL,GAAGlB,KAAK;UACR,CAACO,SAAS,GAAGqB;QACf,CAAC;MACH;IAEA;MACE,OAAO5B,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}