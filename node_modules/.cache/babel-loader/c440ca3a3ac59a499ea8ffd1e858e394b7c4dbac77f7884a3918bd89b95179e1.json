{"ast":null,"code":"import { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\nfunction exerciseReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      console.log('Current state in exerciseReducer:', state);\n      const {\n        workoutId,\n        exercise\n      } = action.payload;\n      console.log('action.payload:', action.payload);\n      if (!state[workoutId]) {\n        console.error('No workout matches the provided workoutId:', workoutId);\n        return state;\n      }\n      const updatedExercises = state[workoutId].concat(exercise);\n      return {\n        ...state,\n        [workoutId]: updatedExercises\n      };\n    case actionTypes.UPDATE_EXERCISE:\n      console.log('UPDATE_EXERCISE action:', action);\n      const {\n        id,\n        updates\n      } = action.payload;\n      const workoutContainingExercise = Object.values(state.workouts).find(workout => workout.exercises.includes(id));\n      if (workoutContainingExercise) {\n        return {\n          ...state,\n          workouts: {\n            ...state.workouts,\n            [workoutContainingExercise.id]: {\n              ...workoutContainingExercise,\n              exercises: workoutContainingExercise.exercises.map(ex => ex.id === id ? {\n                ...ex,\n                ...updates\n              } : ex)\n            }\n          }\n        };\n      } else {\n        console.error('Exercise id does not exist in state:', id);\n      }\n      return state;\n    case actionTypes.DELETE_EXERCISE:\n      console.log('DELETE_EXERCISE action:', action);\n      const newState = {\n        ...state\n      };\n      delete newState[action.payload];\n      return newState;\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["actionTypes","initialState","exerciseReducer","state","action","type","ADD_EXERCISE","console","log","workoutId","exercise","payload","error","updatedExercises","concat","UPDATE_EXERCISE","id","updates","workoutContainingExercise","Object","values","workouts","find","workout","exercises","includes","map","ex","DELETE_EXERCISE","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["import { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\n\nfunction exerciseReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      console.log('Current state in exerciseReducer:', state);\n      const { workoutId, exercise } = action.payload;\n      console.log('action.payload:', action.payload);\n      if (!state[workoutId]) {\n        console.error('No workout matches the provided workoutId:', workoutId);\n        return state;\n      }\n      const updatedExercises = state[workoutId].concat(exercise);\n      return {\n        ...state,\n        [workoutId]: updatedExercises\n      };\n\n    case actionTypes.UPDATE_EXERCISE:\n      console.log('UPDATE_EXERCISE action:', action);\n      const { id, updates } = action.payload;\n      const workoutContainingExercise = Object.values(state.workouts).find(\n        workout => workout.exercises.includes(id)\n      );\n\n      if (workoutContainingExercise) {\n        return {\n          ...state,\n          workouts: {\n            ...state.workouts,\n            [workoutContainingExercise.id]: {\n              ...workoutContainingExercise,\n              exercises: workoutContainingExercise.exercises.map(ex =>\n                ex.id === id ? { ...ex, ...updates } : ex\n              )\n            }\n          }\n        };\n      } else {\n        console.error('Exercise id does not exist in state:', id);\n      }\n      return state;\n\n    case actionTypes.DELETE_EXERCISE:\n      console.log('DELETE_EXERCISE action:', action);\n      const newState = { ...state };\n      delete newState[action.payload];\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,SAASC,eAAeA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,EAAE;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,WAAW,CAACM,YAAY;MAC3BC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEL,KAAK,CAAC;MACvD,MAAM;QAAEM,SAAS;QAAEC;MAAS,CAAC,GAAGN,MAAM,CAACO,OAAO;MAC9CJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,MAAM,CAACO,OAAO,CAAC;MAC9C,IAAI,CAACR,KAAK,CAACM,SAAS,CAAC,EAAE;QACrBF,OAAO,CAACK,KAAK,CAAC,4CAA4C,EAAEH,SAAS,CAAC;QACtE,OAAON,KAAK;MACd;MACA,MAAMU,gBAAgB,GAAGV,KAAK,CAACM,SAAS,CAAC,CAACK,MAAM,CAACJ,QAAQ,CAAC;MAC1D,OAAO;QACL,GAAGP,KAAK;QACR,CAACM,SAAS,GAAGI;MACf,CAAC;IAEH,KAAKb,WAAW,CAACe,eAAe;MAC9BR,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEJ,MAAM,CAAC;MAC9C,MAAM;QAAEY,EAAE;QAAEC;MAAQ,CAAC,GAAGb,MAAM,CAACO,OAAO;MACtC,MAAMO,yBAAyB,GAAGC,MAAM,CAACC,MAAM,CAACjB,KAAK,CAACkB,QAAQ,CAAC,CAACC,IAAI,CAClEC,OAAO,IAAIA,OAAO,CAACC,SAAS,CAACC,QAAQ,CAACT,EAAE,CAC1C,CAAC;MAED,IAAIE,yBAAyB,EAAE;QAC7B,OAAO;UACL,GAAGf,KAAK;UACRkB,QAAQ,EAAE;YACR,GAAGlB,KAAK,CAACkB,QAAQ;YACjB,CAACH,yBAAyB,CAACF,EAAE,GAAG;cAC9B,GAAGE,yBAAyB;cAC5BM,SAAS,EAAEN,yBAAyB,CAACM,SAAS,CAACE,GAAG,CAACC,EAAE,IACnDA,EAAE,CAACX,EAAE,KAAKA,EAAE,GAAG;gBAAE,GAAGW,EAAE;gBAAE,GAAGV;cAAQ,CAAC,GAAGU,EACzC;YACF;UACF;QACF,CAAC;MACH,CAAC,MAAM;QACLpB,OAAO,CAACK,KAAK,CAAC,sCAAsC,EAAEI,EAAE,CAAC;MAC3D;MACA,OAAOb,KAAK;IAEd,KAAKH,WAAW,CAAC4B,eAAe;MAC9BrB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEJ,MAAM,CAAC;MAC9C,MAAMyB,QAAQ,GAAG;QAAE,GAAG1B;MAAM,CAAC;MAC7B,OAAO0B,QAAQ,CAACzB,MAAM,CAACO,OAAO,CAAC;MAC/B,OAAOkB,QAAQ;IAEjB;MACE,OAAO1B,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}