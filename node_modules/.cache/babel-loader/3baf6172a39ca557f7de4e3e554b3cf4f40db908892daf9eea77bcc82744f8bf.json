{"ast":null,"code":"import { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\nfunction exerciseReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      const {\n        exercise\n      } = action.payload;\n      const workoutId = state.activeWorkout;\n      console.log('initialState:', initialState);\n      console.log('Current state:', state);\n      const activeWorkoutId = state.activeWorkout;\n      console.log('activeWorkoutId:', activeWorkoutId);\n      console.log('action.payload:', action.payload);\n      console.log('Current state in exerciseReducer:', state);\n      console.log('Current workouts:', state.workouts);\n      console.log('Target workoutId:', workoutId);\n\n      // Accessing the workout by ID from the workouts object\n      if (!workoutId || !state.workouts[workoutId]) {\n        console.error('No workout matches the provided workoutId:', workoutId);\n        return state;\n      }\n      const workout = state.workouts[workoutId];\n      console.log('Current workout:', workout);\n\n      // Retrieve current exercises and append the new one\n      const currentExercises = state.workouts[workoutId].exercises;\n      console.log('Current exercises:', currentExercises);\n      const updatedExercises = [...state.workouts[workoutId].exercises, exercise];\n      console.log('Updated exercises:', updatedExercises);\n\n      // Return the updated state with the new exercises list for the specific workout\n      return {\n        ...state,\n        workouts: {\n          ...state.workouts,\n          [workoutId]: {\n            ...state.workouts[workoutId],\n            exercises: updatedExercises\n          }\n        }\n      };\n    case actionTypes.DELETE_EXERCISE:\n      console.log('DELETE_EXERCISE action:', action);\n      const newState = {\n        ...state\n      };\n      delete newState[action.payload];\n      return newState;\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["actionTypes","initialState","exerciseReducer","state","action","type","ADD_EXERCISE","exercise","payload","workoutId","activeWorkout","console","log","activeWorkoutId","workouts","error","workout","currentExercises","exercises","updatedExercises","DELETE_EXERCISE","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["import { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\n\nfunction exerciseReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      const { exercise } = action.payload;\n      const workoutId = state.activeWorkout;\n      console.log('initialState:', initialState);\n      console.log('Current state:', state);\n\n      const activeWorkoutId = state.activeWorkout;\n      console.log('activeWorkoutId:', activeWorkoutId);\n      console.log('action.payload:', action.payload);\n\n      console.log('Current state in exerciseReducer:', state);\n      console.log('Current workouts:', state.workouts);\n      console.log('Target workoutId:', workoutId);\n\n      // Accessing the workout by ID from the workouts object\n      if (!workoutId || !state.workouts[workoutId]) {\n        console.error('No workout matches the provided workoutId:', workoutId);\n        return state;\n      }\n      const workout = state.workouts[workoutId];\n      console.log('Current workout:', workout);\n\n      // Retrieve current exercises and append the new one\n      const currentExercises = state.workouts[workoutId].exercises;\n      console.log('Current exercises:', currentExercises);\n      const updatedExercises = [\n        ...state.workouts[workoutId].exercises,\n        exercise\n      ];\n      console.log('Updated exercises:', updatedExercises);\n\n      // Return the updated state with the new exercises list for the specific workout\n      return {\n        ...state,\n        workouts: {\n          ...state.workouts,\n          [workoutId]: {\n            ...state.workouts[workoutId],\n            exercises: updatedExercises\n          }\n        }\n      };\n\n    case actionTypes.DELETE_EXERCISE:\n      console.log('DELETE_EXERCISE action:', action);\n      const newState = { ...state };\n      delete newState[action.payload];\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,SAASC,eAAeA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,EAAE;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,WAAW,CAACM,YAAY;MAC3B,MAAM;QAAEC;MAAS,CAAC,GAAGH,MAAM,CAACI,OAAO;MACnC,MAAMC,SAAS,GAAGN,KAAK,CAACO,aAAa;MACrCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEX,YAAY,CAAC;MAC1CU,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAET,KAAK,CAAC;MAEpC,MAAMU,eAAe,GAAGV,KAAK,CAACO,aAAa;MAC3CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,eAAe,CAAC;MAChDF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAER,MAAM,CAACI,OAAO,CAAC;MAE9CG,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAET,KAAK,CAAC;MACvDQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAET,KAAK,CAACW,QAAQ,CAAC;MAChDH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,SAAS,CAAC;;MAE3C;MACA,IAAI,CAACA,SAAS,IAAI,CAACN,KAAK,CAACW,QAAQ,CAACL,SAAS,CAAC,EAAE;QAC5CE,OAAO,CAACI,KAAK,CAAC,4CAA4C,EAAEN,SAAS,CAAC;QACtE,OAAON,KAAK;MACd;MACA,MAAMa,OAAO,GAAGb,KAAK,CAACW,QAAQ,CAACL,SAAS,CAAC;MACzCE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,OAAO,CAAC;;MAExC;MACA,MAAMC,gBAAgB,GAAGd,KAAK,CAACW,QAAQ,CAACL,SAAS,CAAC,CAACS,SAAS;MAC5DP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,gBAAgB,CAAC;MACnD,MAAME,gBAAgB,GAAG,CACvB,GAAGhB,KAAK,CAACW,QAAQ,CAACL,SAAS,CAAC,CAACS,SAAS,EACtCX,QAAQ,CACT;MACDI,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEO,gBAAgB,CAAC;;MAEnD;MACA,OAAO;QACL,GAAGhB,KAAK;QACRW,QAAQ,EAAE;UACR,GAAGX,KAAK,CAACW,QAAQ;UACjB,CAACL,SAAS,GAAG;YACX,GAAGN,KAAK,CAACW,QAAQ,CAACL,SAAS,CAAC;YAC5BS,SAAS,EAAEC;UACb;QACF;MACF,CAAC;IAEH,KAAKnB,WAAW,CAACoB,eAAe;MAC9BT,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAER,MAAM,CAAC;MAC9C,MAAMiB,QAAQ,GAAG;QAAE,GAAGlB;MAAM,CAAC;MAC7B,OAAOkB,QAAQ,CAACjB,MAAM,CAACI,OAAO,CAAC;MAC/B,OAAOa,QAAQ;IAEjB;MACE,OAAOlB,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}