{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GOAL_TYPES, DURATION_TYPES } from '../../../utils/constants';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport useFetchData from '../../../hooks/useFetchData';\nimport ProgramForm from '../../../components/Program/ProgramForm';\nimport NavBar from '../../../components/Nav/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateProgram = () => {\n  _s();\n  const [program, setProgram] = useState({\n    name: '',\n    main_goal: '',\n    program_duration: '',\n    duration_unit: '',\n    days_per_week: '',\n    workouts: []\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedMuscle, setSelectedMuscle] = useState('');\n  const [selectedEquipment, setSelectedEquipment] = useState('');\n  const [days, setDays] = useState([]);\n  const navigate = useNavigate();\n  const {\n    data: exercises,\n    isLoading,\n    error\n  } = useFetchData('http://localhost:9025/api/exercise-catalog');\n  const filteredExercises = useMemo(() => {\n    return exercises.filter(exercise => {\n      const matchesMuscle = !selectedMuscle || selectedMuscle === 'All' || exercise.muscle === selectedMuscle;\n      const matchesEquipment = !selectedEquipment || selectedEquipment === 'All' || exercise.equipment === selectedEquipment;\n      const matchesSearchTerm = !searchTerm || exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n      return matchesMuscle && matchesEquipment && matchesSearchTerm;\n    });\n  }, [searchTerm, selectedMuscle, selectedEquipment, exercises]);\n  const handleDaysPerWeekChange = e => {\n    setProgram(e.target.value);\n  };\n  const handleDurationChange = e => {\n    setDuration(e.target.value);\n  };\n  const handleGoalChange = e => {\n    setGoal(e.target.value);\n  };\n  const handleProgramNameChange = e => {\n    setProgramName(e.target.value);\n  };\n  const addDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1; // Ensure unique ID\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}` // Customize the naming as needed\n    };\n    setDays([...days, newDay]);\n  };\n  const handleRemoveDay = dayId => {\n    //remove days\n    const updatedDays = days.filter(day => day.id !== dayId);\n\n    //renumber the remaining days\n    const renumberedDays = updatedDays.map((day, index) => ({\n      ...day,\n      id: index + 1,\n      name: `Day ${index + 1}`\n    }));\n    setDays(renumberedDays);\n  };\n  const handleSaveProgram = async formValues => {\n    const programData = {\n      user_id: 2,\n      // hardcoded for now, but should be the logged in user's ID\n      name: program.programName,\n      program_duration: program.programDuration,\n      days_per_week: program.daysPerWeek,\n      duration_unit: program.durationUnit,\n      main_goal: program.mainGoal,\n      workouts: program.workouts.map(workout => ({\n        name: workout.name,\n        order: workout.order,\n        exercises: workout.exercises.map(exercise => ({\n          catalog_exercise_id: exercise.catalog_exercise_id,\n          order: exercise.order,\n          sets: exercise.sets.map(set => ({\n            reps: set.reps,\n            weight: set.weight,\n            order: set.order\n          }))\n        }))\n      }))\n    };\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(programData)\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong with saving the program');\n      }\n\n      // Assuming the backend responds with the created template, you could use it here if needed\n      // const savedTemplate = await response.json();\n\n      // After saving, redirect back to the WorkoutPage\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n      // Here, you could set an error state and display it to the user if you wish\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading exercises: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isEditing: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"program-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Create New Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgramForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProgram, \"02U/JSSEEfnEiiG+Kd8t7fM/jxI=\", false, function () {\n  return [useNavigate, useFetchData];\n});\n_c = CreateProgram;\nexport default CreateProgram;\nvar _c;\n$RefreshReg$(_c, \"CreateProgram\");","map":{"version":3,"names":["React","useState","useMemo","useNavigate","GOAL_TYPES","DURATION_TYPES","DayContainer","useFetchData","ProgramForm","NavBar","jsxDEV","_jsxDEV","CreateProgram","_s","program","setProgram","name","main_goal","program_duration","duration_unit","days_per_week","workouts","searchTerm","setSearchTerm","selectedMuscle","setSelectedMuscle","selectedEquipment","setSelectedEquipment","days","setDays","navigate","data","exercises","isLoading","error","filteredExercises","filter","exercise","matchesMuscle","muscle","matchesEquipment","equipment","matchesSearchTerm","toLowerCase","includes","handleDaysPerWeekChange","e","target","value","handleDurationChange","setDuration","handleGoalChange","setGoal","handleProgramNameChange","setProgramName","addDay","newDayId","length","id","newDay","handleRemoveDay","dayId","updatedDays","day","renumberedDays","map","index","handleSaveProgram","formValues","programData","user_id","programName","programDuration","daysPerWeek","durationUnit","mainGoal","workout","order","catalog_exercise_id","sets","set","reps","weight","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","isEditing","className","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GOAL_TYPES, DURATION_TYPES } from '../../../utils/constants';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport useFetchData from '../../../hooks/useFetchData';\nimport ProgramForm from '../../../components/Program/ProgramForm';\nimport NavBar from '../../../components/Nav/Nav';\n\nconst CreateProgram = () => {\n  const [program, setProgram] = useState({\n    name: '',\n    main_goal: '',\n    program_duration: '',\n    duration_unit: '',\n    days_per_week: '',\n    workouts: []\n  });\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedMuscle, setSelectedMuscle] = useState('');\n  const [selectedEquipment, setSelectedEquipment] = useState('');\n  const [days, setDays] = useState([]);\n\n  const navigate = useNavigate();\n\n  const {\n    data: exercises,\n    isLoading,\n    error\n  } = useFetchData('http://localhost:9025/api/exercise-catalog');\n\n  const filteredExercises = useMemo(() => {\n    return exercises.filter(exercise => {\n      const matchesMuscle =\n        !selectedMuscle ||\n        selectedMuscle === 'All' ||\n        exercise.muscle === selectedMuscle;\n      const matchesEquipment =\n        !selectedEquipment ||\n        selectedEquipment === 'All' ||\n        exercise.equipment === selectedEquipment;\n      const matchesSearchTerm =\n        !searchTerm ||\n        exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n      return matchesMuscle && matchesEquipment && matchesSearchTerm;\n    });\n  }, [searchTerm, selectedMuscle, selectedEquipment, exercises]);\n\n  const handleDaysPerWeekChange = e => {\n    setProgram(e.target.value);\n  };\n\n  const handleDurationChange = e => {\n    setDuration(e.target.value);\n  };\n\n  const handleGoalChange = e => {\n    setGoal(e.target.value);\n  };\n\n  const handleProgramNameChange = e => {\n    setProgramName(e.target.value);\n  };\n\n  const addDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1; // Ensure unique ID\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}` // Customize the naming as needed\n    };\n    setDays([...days, newDay]);\n  };\n\n  const handleRemoveDay = dayId => {\n    //remove days\n    const updatedDays = days.filter(day => day.id !== dayId);\n\n    //renumber the remaining days\n    const renumberedDays = updatedDays.map((day, index) => ({\n      ...day,\n      id: index + 1,\n      name: `Day ${index + 1}`\n    }));\n    setDays(renumberedDays);\n  };\n\n  const handleSaveProgram = async formValues => {\n    const programData = {\n      user_id: 2, // hardcoded for now, but should be the logged in user's ID\n      name: program.programName,\n      program_duration: program.programDuration,\n      days_per_week: program.daysPerWeek,\n      duration_unit: program.durationUnit,\n      main_goal: program.mainGoal,\n      workouts: program.workouts.map(workout => ({\n        name: workout.name,\n        order: workout.order,\n        exercises: workout.exercises.map(exercise => ({\n          catalog_exercise_id: exercise.catalog_exercise_id,\n          order: exercise.order,\n          sets: exercise.sets.map(set => ({\n            reps: set.reps,\n            weight: set.weight,\n            order: set.order\n          }))\n        }))\n      }))\n    };\n\n    try {\n      const response = await fetch('http://localhost:9025/api/programs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(programData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went wrong with saving the program');\n      }\n\n      // Assuming the backend responds with the created template, you could use it here if needed\n      // const savedTemplate = await response.json();\n\n      // After saving, redirect back to the WorkoutPage\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n      // Here, you could set an error state and display it to the user if you wish\n    }\n  };\n\n  if (isLoading) return <div>loading...</div>;\n  if (error) return <div>Error loading exercises: {error}</div>;\n\n  return (\n    <div>\n      <NavBar isEditing='true' />\n      <div className='program-container'>\n        <h1 className='page-title'>Create New Program</h1>\n        <ProgramForm />\n      </div>\n    </div>\n  );\n};\n\nexport default CreateProgram;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,cAAc,QAAQ,0BAA0B;AACrE,OAAOC,YAAY,MAAM,+CAA+C;AACxE,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,WAAW,MAAM,yCAAyC;AACjE,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC;IACrCe,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,gBAAgB,EAAE,EAAE;IACpBC,aAAa,EAAE,EAAE;IACjBC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACyB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAAC2B,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAM6B,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAE9B,MAAM;IACJ4B,IAAI,EAAEC,SAAS;IACfC,SAAS;IACTC;EACF,CAAC,GAAG3B,YAAY,CAAC,4CAA4C,CAAC;EAE9D,MAAM4B,iBAAiB,GAAGjC,OAAO,CAAC,MAAM;IACtC,OAAO8B,SAAS,CAACI,MAAM,CAACC,QAAQ,IAAI;MAClC,MAAMC,aAAa,GACjB,CAACd,cAAc,IACfA,cAAc,KAAK,KAAK,IACxBa,QAAQ,CAACE,MAAM,KAAKf,cAAc;MACpC,MAAMgB,gBAAgB,GACpB,CAACd,iBAAiB,IAClBA,iBAAiB,KAAK,KAAK,IAC3BW,QAAQ,CAACI,SAAS,KAAKf,iBAAiB;MAC1C,MAAMgB,iBAAiB,GACrB,CAACpB,UAAU,IACXe,QAAQ,CAACrB,IAAI,CAAC2B,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACtB,UAAU,CAACqB,WAAW,CAAC,CAAC,CAAC;MAChE,OAAOL,aAAa,IAAIE,gBAAgB,IAAIE,iBAAiB;IAC/D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACpB,UAAU,EAAEE,cAAc,EAAEE,iBAAiB,EAAEM,SAAS,CAAC,CAAC;EAE9D,MAAMa,uBAAuB,GAAGC,CAAC,IAAI;IACnC/B,UAAU,CAAC+B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,oBAAoB,GAAGH,CAAC,IAAI;IAChCI,WAAW,CAACJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMG,gBAAgB,GAAGL,CAAC,IAAI;IAC5BM,OAAO,CAACN,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMK,uBAAuB,GAAGP,CAAC,IAAI;IACnCQ,cAAc,CAACR,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMO,MAAM,GAAGA,CAAA,KAAM;IACnB,MAAMC,QAAQ,GAAG5B,IAAI,CAAC6B,MAAM,GAAG,CAAC,GAAG7B,IAAI,CAACA,IAAI,CAAC6B,MAAM,GAAG,CAAC,CAAC,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,MAAMC,MAAM,GAAG;MACbD,EAAE,EAAEF,QAAQ;MACZxC,IAAI,EAAG,OAAMwC,QAAS,EAAC,CAAC;IAC1B,CAAC;IACD3B,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE+B,MAAM,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,eAAe,GAAGC,KAAK,IAAI;IAC/B;IACA,MAAMC,WAAW,GAAGlC,IAAI,CAACQ,MAAM,CAAC2B,GAAG,IAAIA,GAAG,CAACL,EAAE,KAAKG,KAAK,CAAC;;IAExD;IACA,MAAMG,cAAc,GAAGF,WAAW,CAACG,GAAG,CAAC,CAACF,GAAG,EAAEG,KAAK,MAAM;MACtD,GAAGH,GAAG;MACNL,EAAE,EAAEQ,KAAK,GAAG,CAAC;MACblD,IAAI,EAAG,OAAMkD,KAAK,GAAG,CAAE;IACzB,CAAC,CAAC,CAAC;IACHrC,OAAO,CAACmC,cAAc,CAAC;EACzB,CAAC;EAED,MAAMG,iBAAiB,GAAG,MAAMC,UAAU,IAAI;IAC5C,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,CAAC;MAAE;MACZtD,IAAI,EAAEF,OAAO,CAACyD,WAAW;MACzBrD,gBAAgB,EAAEJ,OAAO,CAAC0D,eAAe;MACzCpD,aAAa,EAAEN,OAAO,CAAC2D,WAAW;MAClCtD,aAAa,EAAEL,OAAO,CAAC4D,YAAY;MACnCzD,SAAS,EAAEH,OAAO,CAAC6D,QAAQ;MAC3BtD,QAAQ,EAAEP,OAAO,CAACO,QAAQ,CAAC4C,GAAG,CAACW,OAAO,KAAK;QACzC5D,IAAI,EAAE4D,OAAO,CAAC5D,IAAI;QAClB6D,KAAK,EAAED,OAAO,CAACC,KAAK;QACpB7C,SAAS,EAAE4C,OAAO,CAAC5C,SAAS,CAACiC,GAAG,CAAC5B,QAAQ,KAAK;UAC5CyC,mBAAmB,EAAEzC,QAAQ,CAACyC,mBAAmB;UACjDD,KAAK,EAAExC,QAAQ,CAACwC,KAAK;UACrBE,IAAI,EAAE1C,QAAQ,CAAC0C,IAAI,CAACd,GAAG,CAACe,GAAG,KAAK;YAC9BC,IAAI,EAAED,GAAG,CAACC,IAAI;YACdC,MAAM,EAAEF,GAAG,CAACE,MAAM;YAClBL,KAAK,EAAEG,GAAG,CAACH;UACb,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAED,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACpB,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACc,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;MACjE;;MAEA;MACA;;MAEA;MACA7D,QAAQ,CAAC,WAAW,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd0D,OAAO,CAAC1D,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD;IACF;EACF,CAAC;EAED,IAAID,SAAS,EAAE,oBAAOtB,OAAA;IAAAkF,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAI/D,KAAK,EAAE,oBAAOvB,OAAA;IAAAkF,QAAA,GAAK,2BAAyB,EAAC3D,KAAK;EAAA;IAAA4D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE7D,oBACEtF,OAAA;IAAAkF,QAAA,gBACElF,OAAA,CAACF,MAAM;MAACyF,SAAS,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3BtF,OAAA;MAAKwF,SAAS,EAAC,mBAAmB;MAAAN,QAAA,gBAChClF,OAAA;QAAIwF,SAAS,EAAC,YAAY;QAAAN,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDtF,OAAA,CAACH,WAAW;QAAAsF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpF,EAAA,CAzIID,aAAa;EAAA,QAeAT,WAAW,EAMxBI,YAAY;AAAA;AAAA6F,EAAA,GArBZxF,aAAa;AA2InB,eAAeA,aAAa;AAAC,IAAAwF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}