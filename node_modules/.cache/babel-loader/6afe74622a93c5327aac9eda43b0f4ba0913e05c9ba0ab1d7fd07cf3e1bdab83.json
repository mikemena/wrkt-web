{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/Workout/Workout.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect, useMemo } from 'react';\nimport { TbPencil } from 'react-icons/tb';\nimport { BsChevronCompactUp, BsChevronCompactDown } from 'react-icons/bs';\nimport { IoCloseCircleSharp, IoCheckmarkCircleSharp } from 'react-icons/io5';\nimport { MdDragHandle, MdAddBox } from 'react-icons/md';\nimport { useDrag, useDrop, DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { RiDeleteBack2Fill } from 'react-icons/ri';\nimport { GrClose } from 'react-icons/gr';\nimport { TbHttpDelete } from 'react-icons/tb';\nimport TextInput from '../Inputs/TextInput';\nimport { ProgramContext } from '../../contexts/programContext';\nimport { useTheme } from '../../contexts/themeContext';\nimport { useNavigate } from 'react-router-dom';\nimport './Workout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  EXERCISE: 'exercise'\n};\n\n// Draggable Exercise Component\nconst DraggableExercise = ({\n  exercise,\n  index,\n  moveExercise,\n  removeExercise\n}) => {\n  _s();\n  var _exercise$sets;\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: ItemTypes.EXERCISE,\n    item: {\n      index\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const [, drop] = useDrop({\n    accept: ItemTypes.EXERCISE,\n    hover: draggedItem => {\n      if (draggedItem.index !== index) {\n        moveExercise(draggedItem.index, index);\n        draggedItem.index = index;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: node => drag(drop(node)),\n    style: {\n      opacity: isDragging ? 0.5 : 1\n    },\n    className: \"workout__each-exercise\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workout__exercise-column\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workout__exercise-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `workout__drag-order-container`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `workout__exercise-order-number`,\n            children: exercise.order\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workout__exercise-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: `workout__exercises_name`,\n            children: exercise.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: `workout__exercise-muscle`,\n            children: exercise.muscle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workout__sets-column\",\n      children: [exercise.sets && exercise.sets.length > 0 && exercise.sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workout__set\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `workout__set-order-number`,\n          children: set.order\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, set.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddSet(exercise),\n        className: \"workout__add-set-btn\",\n        children: /*#__PURE__*/_jsxDEV(MdAddBox, {\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workout__weights-column\",\n      children: exercise.sets && exercise.sets.length > 0 ? exercise.sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workout__set\",\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          className: `workout__set-weight`,\n          id: \"set-weight\",\n          onChange: e => handleUpdateSetLocally({\n            weight: e.target.value\n          }, exercise.catalog_exercise_id, set.id),\n          onBlur: () => handleUpdateSetOnBlur(exercise.catalog_exercise_id, set),\n          value: set.weight,\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, set.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workout__reps-column\",\n      children: exercise === null || exercise === void 0 ? void 0 : (_exercise$sets = exercise.sets) === null || _exercise$sets === void 0 ? void 0 : _exercise$sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workout__set\",\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          className: `workout__set-reps`,\n          onChange: e => handleUpdateSetLocally({\n            reps: e.target.value\n          }, exercise.catalog_exercise_id, set.id),\n          onBlur: () => handleUpdateSetOnBlur(exercise.catalog_exercise_id, set),\n          value: set.reps,\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, set.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workout__exercise-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `workout__drag-handle`,\n        children: /*#__PURE__*/_jsxDEV(MdDragHandle, {\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"workout__remove-exercise-btn\",\n        onClick: () => removeExercise(exercise.id),\n        children: /*#__PURE__*/_jsxDEV(TbHttpDelete, {\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(DraggableExercise, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = DraggableExercise;\nconst Workout = ({\n  workout: initialWorkout,\n  isEditing,\n  isNewProgram,\n  programId,\n  isExpanded,\n  onToggleExpand\n}) => {\n  _s2();\n  const {\n    state,\n    setActiveWorkout,\n    updateWorkoutField,\n    deleteWorkout,\n    removeExercise,\n    updateWorkout,\n    addSet,\n    updateSet,\n    removeSet\n  } = useContext(ProgramContext);\n  const workouts = state.workout.workouts;\n  const activeWorkout = state.workout.activeWorkout;\n\n  // Get the most up-to-date workout data from the state\n  const workout = useMemo(() => {\n    return workouts.find(w => w.id === initialWorkout.id) || initialWorkout;\n  }, [workouts, initialWorkout]);\n  const [isEditingTitle, setIsEditingTitle] = useState(false);\n  const [workoutTitle, setWorkoutTitle] = useState(workout.name);\n  const [localExercises, setLocalExercises] = useState(workout.exercises);\n  const {\n    theme\n  } = useTheme();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (workout) {\n      setWorkoutTitle(workout.name);\n      setLocalExercises(workout.exercises);\n    }\n  }, [workout]);\n  const handleEditTitleChange = e => {\n    setIsEditingTitle(true);\n    setWorkoutTitle(e.target.value);\n  };\n  const handleSaveTitle = () => {\n    if (workout) {\n      const updatedWorkout = {\n        ...workout,\n        name: workoutTitle\n      };\n      updateWorkout(updatedWorkout, isNewProgram);\n    }\n    setIsEditingTitle(false);\n  };\n  const handleDeleteWorkout = workoutId => {\n    deleteWorkout(workoutId);\n  };\n  const handleDeleteExercise = (workoutId, exerciseId) => {\n    removeExercise(workoutId, exerciseId);\n  };\n  const handleWorkoutExpand = () => {\n    onToggleExpand(workout.id);\n  };\n  const handleAddSet = exercise => {\n    const exerciseId = exercise.id;\n    if (!workout || !workout.id) {\n      console.error('No active workout found.');\n      return;\n    }\n    addSet(workout.id, exerciseId);\n  };\n  const handleAddExercises = workoutId => {\n    setActiveWorkout(workoutId);\n    const selectedExercises = workout.exercises.map(exercise => ({\n      ...exercise,\n      catalog_exercise_id: exercise.catalog_exercise_id || exercise.id\n    }));\n    navigate('/select-exercises', {\n      state: {\n        workoutId,\n        selectedExercises,\n        isNewProgram,\n        programId: programId\n      }\n    });\n  };\n  const handleUpdateSetLocally = (updatedValue, exerciseId, setId) => {\n    setLocalExercises(prevExercises => prevExercises.map(exercise => exercise.catalog_exercise_id === exerciseId ? {\n      ...exercise,\n      sets: exercise.sets.map(set => set.id === setId ? {\n        ...set,\n        ...updatedValue\n      } : set)\n    } : exercise));\n  };\n  const handleUpdateSetOnBlur = (exerciseId, set) => {\n    updateSet(workout.id, exerciseId, set);\n    // Update context with the latest local exercise data\n    updateWorkout({\n      ...workout,\n      exercises: localExercises\n    });\n  };\n  const handleUpdateWorkoutTitleOnBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    updateWorkoutField(name, value);\n  };\n  const handleRemoveSet = (workoutId, exerciseId, setId) => {\n    if (isEditing) {\n      setLocalExercises(prevExercises => prevExercises.map(ex => ex.catalog_exercise_id === exerciseId ? {\n        ...ex,\n        sets: ex.sets.filter(s => s.id !== setId)\n      } : ex));\n\n      // Update the context state after local state change\n      const updatedExercises = localExercises.map(ex => ex.catalog_exercise_id === exerciseId ? {\n        ...ex,\n        sets: ex.sets.filter(s => s.id !== setId)\n      } : ex);\n      const updatedWorkout = {\n        ...workout,\n        exercises: updatedExercises\n      };\n      updateWorkout(updatedWorkout);\n    } else {\n      removeSet(workoutId, exerciseId, setId);\n    }\n  };\n  const workoutExercises = localExercises;\n  console.log('workoutExercises', workoutExercises);\n  const exerciseText = count => {\n    if (count === 0) return 'No Exercises';\n    if (count === 1) return '1 Exercise';\n    return `${count} Exercises`;\n  };\n  const exerciseCount = workoutExercises.length;\n  const moveExercise = (fromIndex, toIndex) => {\n    const updatedExercises = [...localExercises];\n    const [movedExercise] = updatedExercises.splice(fromIndex, 1);\n    updatedExercises.splice(toIndex, 0, movedExercise);\n    setLocalExercises(updatedExercises.map((ex, idx) => ({\n      ...ex,\n      order: idx + 1\n    })));\n  };\n  const saveWorkoutOrder = () => {\n    const updatedWorkout = {\n      ...initialWorkout,\n      exercises: localExercises\n    };\n    updateWorkout(updatedWorkout);\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `workout ${theme} ${activeWorkout === workout.id ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workout__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"workout__expand-btn\",\n          onClick: handleWorkoutExpand,\n          children: isExpanded ? /*#__PURE__*/_jsxDEV(BsChevronCompactUp, {\n            className: `workout__icon ${theme}`,\n            size: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(BsChevronCompactDown, {\n            className: `workout__icon ${theme}`,\n            size: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workout__title-container\",\n          children: [isEditingTitle ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: `workout__title-input ${theme}`,\n              type: \"text\",\n              value: workoutTitle,\n              onBlur: handleUpdateWorkoutTitleOnBlur,\n              onChange: handleEditTitleChange,\n              placeholder: \"Enter Workout Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IoCheckmarkCircleSharp, {\n              className: `workout__icon ${theme}`,\n              onClick: handleSaveTitle,\n              size: 25\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IoCloseCircleSharp, {\n              className: `workout__icon ${theme}`,\n              onClick: () => setIsEditingTitle(false),\n              size: 25\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: `workout__title ${theme}`,\n            children: workoutTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), isExpanded && !isEditingTitle && /*#__PURE__*/_jsxDEV(TbPencil, {\n            className: `workout__icon pencil-icon ${theme}`,\n            onClick: () => setIsEditingTitle(true),\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workout__delete-btn\",\n            onClick: () => handleDeleteWorkout(workout.id),\n            children: /*#__PURE__*/_jsxDEV(GrClose, {\n              className: `workout__icon ${theme}`,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workout__subtitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `workout__exercise-count ${theme}`,\n          children: exerciseText(exerciseCount)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddExercises(workout.id),\n          className: \"workout__add-exercise-btn\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workout__exercises\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workout__exercises-header-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: `workout__exercises_header ${theme}`,\n            children: \"Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: `workout__exercises_header ${theme}`,\n            children: \"Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: `workout__exercises_header ${theme}`,\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: `workout__exercises_header ${theme}`,\n            children: \"Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), workoutExercises.length > 0 ? workoutExercises.map((exercise, index) => {\n          var _exercise$sets2, _exercise$sets3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"workout__each-exercise\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workout__exercise-column\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout__exercise-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `workout__drag-order-container ${theme}`,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `workout__exercise-order-number ${theme}`,\n                    children: exercise.order\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout__exercise-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: `workout__exercises_name ${theme}`,\n                    children: exercise.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: `workout__exercise-muscle ${theme}`,\n                    children: exercise.muscle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workout__sets-column\",\n              children: [exercise.sets && exercise.sets.length > 0 && exercise.sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout__set\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: `workout__set-order-number ${theme}`,\n                  children: set.order\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 27\n                }, this)\n              }, set.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 25\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddSet(exercise),\n                className: \"workout__add-set-btn\",\n                children: /*#__PURE__*/_jsxDEV(MdAddBox, {\n                  size: 25\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workout__weights-column\",\n              children: [exercise.sets && exercise.sets.length > 0 ? exercise.sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout__set\",\n                children: /*#__PURE__*/_jsxDEV(TextInput, {\n                  className: `workout__set-weight ${theme}`,\n                  id: \"set-weight\",\n                  onChange: e => handleUpdateSetLocally({\n                    weight: e.target.value\n                  }, exercise.catalog_exercise_id, set.id),\n                  onBlur: () => handleUpdateSetOnBlur(exercise.catalog_exercise_id, set),\n                  value: set.weight,\n                  type: \"number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 29\n                }, this)\n              }, set.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 27\n              }, this)) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout__blank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workout__reps-column\",\n              children: [exercise === null || exercise === void 0 ? void 0 : (_exercise$sets2 = exercise.sets) === null || _exercise$sets2 === void 0 ? void 0 : _exercise$sets2.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout__set\",\n                children: /*#__PURE__*/_jsxDEV(TextInput, {\n                  className: `workout__set-reps ${theme}`,\n                  onChange: e => handleUpdateSetLocally({\n                    reps: e.target.value\n                  }, exercise.catalog_exercise_id, set.id),\n                  onBlur: () => handleUpdateSetOnBlur(exercise.catalog_exercise_id, set),\n                  value: set.reps,\n                  type: \"number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 25\n                }, this)\n              }, set.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout__blank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workout__delete-set-column\",\n              children: [exercise === null || exercise === void 0 ? void 0 : (_exercise$sets3 = exercise.sets) === null || _exercise$sets3 === void 0 ? void 0 : _exercise$sets3.map((set, setIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout__set\",\n                children: setIndex > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveSet(workout.id, exercise.catalog_exercise_id, set.id),\n                  className: \"workout__delete-set-btn\",\n                  children: /*#__PURE__*/_jsxDEV(RiDeleteBack2Fill, {\n                    size: 25\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout__set\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"workout__no-delete-set-btn\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 27\n                }, this)\n              }, set.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout__blank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workout__exercise-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `workout__drag-handle ${theme}`,\n                children: /*#__PURE__*/_jsxDEV(MdDragHandle, {\n                  size: 25\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"workout__remove-exercise-btn\",\n                onClick: () => handleDeleteExercise(workout.id, exercise.id),\n                children: /*#__PURE__*/_jsxDEV(TbHttpDelete, {\n                  size: 30\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"workout__no-exercise-message\",\n          children: \"No exercises added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n};\n_s2(Workout, \"ImIqFDs5fPpCTxutPU0Pdlbq0LE=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c2 = Workout;\nexport default Workout;\nvar _c, _c2;\n$RefreshReg$(_c, \"DraggableExercise\");\n$RefreshReg$(_c2, \"Workout\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useMemo","TbPencil","BsChevronCompactUp","BsChevronCompactDown","IoCloseCircleSharp","IoCheckmarkCircleSharp","MdDragHandle","MdAddBox","useDrag","useDrop","DndProvider","HTML5Backend","RiDeleteBack2Fill","GrClose","TbHttpDelete","TextInput","ProgramContext","useTheme","useNavigate","jsxDEV","_jsxDEV","ItemTypes","EXERCISE","DraggableExercise","exercise","index","moveExercise","removeExercise","_s","_exercise$sets","isDragging","drag","type","item","collect","monitor","drop","accept","hover","draggedItem","ref","node","style","opacity","className","children","order","fileName","_jsxFileName","lineNumber","columnNumber","name","muscle","sets","length","map","set","id","onClick","handleAddSet","size","onChange","e","handleUpdateSetLocally","weight","target","value","catalog_exercise_id","onBlur","handleUpdateSetOnBlur","reps","_c","Workout","workout","initialWorkout","isEditing","isNewProgram","programId","isExpanded","onToggleExpand","_s2","state","setActiveWorkout","updateWorkoutField","deleteWorkout","updateWorkout","addSet","updateSet","removeSet","workouts","activeWorkout","find","w","isEditingTitle","setIsEditingTitle","workoutTitle","setWorkoutTitle","localExercises","setLocalExercises","exercises","theme","navigate","handleEditTitleChange","handleSaveTitle","updatedWorkout","handleDeleteWorkout","workoutId","handleDeleteExercise","exerciseId","handleWorkoutExpand","console","error","handleAddExercises","selectedExercises","updatedValue","setId","prevExercises","handleUpdateWorkoutTitleOnBlur","handleRemoveSet","ex","filter","s","updatedExercises","workoutExercises","log","exerciseText","count","exerciseCount","fromIndex","toIndex","movedExercise","splice","idx","saveWorkoutOrder","backend","placeholder","_exercise$sets2","_exercise$sets3","setIndex","_c2","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/Workout/Workout.js"],"sourcesContent":["import React, { useContext, useState, useEffect, useMemo } from 'react';\nimport { TbPencil } from 'react-icons/tb';\nimport { BsChevronCompactUp, BsChevronCompactDown } from 'react-icons/bs';\nimport { IoCloseCircleSharp, IoCheckmarkCircleSharp } from 'react-icons/io5';\nimport { MdDragHandle, MdAddBox } from 'react-icons/md';\nimport { useDrag, useDrop, DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { RiDeleteBack2Fill } from 'react-icons/ri';\nimport { GrClose } from 'react-icons/gr';\nimport { TbHttpDelete } from 'react-icons/tb';\nimport TextInput from '../Inputs/TextInput';\nimport { ProgramContext } from '../../contexts/programContext';\nimport { useTheme } from '../../contexts/themeContext';\nimport { useNavigate } from 'react-router-dom';\nimport './Workout.css';\n\nconst ItemTypes = {\n  EXERCISE: 'exercise'\n};\n\n// Draggable Exercise Component\nconst DraggableExercise = ({\n  exercise,\n  index,\n  moveExercise,\n  removeExercise\n}) => {\n  const [{ isDragging }, drag] = useDrag({\n    type: ItemTypes.EXERCISE,\n    item: { index },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.EXERCISE,\n    hover: draggedItem => {\n      if (draggedItem.index !== index) {\n        moveExercise(draggedItem.index, index);\n        draggedItem.index = index;\n      }\n    }\n  });\n\n  return (\n    <div\n      ref={node => drag(drop(node))}\n      style={{ opacity: isDragging ? 0.5 : 1 }}\n      className='workout__each-exercise'\n    >\n      <div className='workout__exercise-column'>\n        <div className='workout__exercise-info'>\n          <div className={`workout__drag-order-container`}>\n            <span className={`workout__exercise-order-number`}>\n              {exercise.order}\n            </span>\n          </div>\n          <div className='workout__exercise-details'>\n            <h4 className={`workout__exercises_name`}>{exercise.name}</h4>\n            <h5 className={`workout__exercise-muscle`}>{exercise.muscle}</h5>\n          </div>\n        </div>\n      </div>\n      <div className='workout__sets-column'>\n        {exercise.sets &&\n          exercise.sets.length > 0 &&\n          exercise.sets.map(set => (\n            <div key={set.id} className='workout__set'>\n              <p className={`workout__set-order-number`}>{set.order}</p>\n            </div>\n          ))}\n        <button\n          onClick={() => handleAddSet(exercise)}\n          className='workout__add-set-btn'\n        >\n          <MdAddBox size={25} />\n        </button>\n      </div>\n\n      <div className='workout__weights-column'>\n        {exercise.sets && exercise.sets.length > 0\n          ? exercise.sets.map(set => (\n              <div key={set.id} className='workout__set'>\n                <TextInput\n                  className={`workout__set-weight`}\n                  id='set-weight'\n                  onChange={e =>\n                    handleUpdateSetLocally(\n                      { weight: e.target.value },\n                      exercise.catalog_exercise_id,\n                      set.id\n                    )\n                  }\n                  onBlur={() =>\n                    handleUpdateSetOnBlur(exercise.catalog_exercise_id, set)\n                  }\n                  value={set.weight}\n                  type='number'\n                />\n              </div>\n            ))\n          : null}\n      </div>\n\n      <div className='workout__reps-column'>\n        {exercise?.sets?.map(set => (\n          <div key={set.id} className='workout__set'>\n            <TextInput\n              className={`workout__set-reps`}\n              onChange={e =>\n                handleUpdateSetLocally(\n                  { reps: e.target.value },\n                  exercise.catalog_exercise_id,\n                  set.id\n                )\n              }\n              onBlur={() =>\n                handleUpdateSetOnBlur(exercise.catalog_exercise_id, set)\n              }\n              value={set.reps}\n              type='number'\n            />\n          </div>\n        ))}\n      </div>\n\n      <div className='workout__exercise-controls'>\n        <div className={`workout__drag-handle`}>\n          <MdDragHandle size={25} />\n        </div>\n        <button\n          className='workout__remove-exercise-btn'\n          onClick={() => removeExercise(exercise.id)}\n        >\n          <TbHttpDelete size={30} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst Workout = ({\n  workout: initialWorkout,\n  isEditing,\n  isNewProgram,\n  programId,\n  isExpanded,\n  onToggleExpand\n}) => {\n  const {\n    state,\n    setActiveWorkout,\n    updateWorkoutField,\n    deleteWorkout,\n    removeExercise,\n    updateWorkout,\n    addSet,\n    updateSet,\n    removeSet\n  } = useContext(ProgramContext);\n\n  const workouts = state.workout.workouts;\n  const activeWorkout = state.workout.activeWorkout;\n\n  // Get the most up-to-date workout data from the state\n  const workout = useMemo(() => {\n    return workouts.find(w => w.id === initialWorkout.id) || initialWorkout;\n  }, [workouts, initialWorkout]);\n\n  const [isEditingTitle, setIsEditingTitle] = useState(false);\n  const [workoutTitle, setWorkoutTitle] = useState(workout.name);\n  const [localExercises, setLocalExercises] = useState(workout.exercises);\n  const { theme } = useTheme();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (workout) {\n      setWorkoutTitle(workout.name);\n      setLocalExercises(workout.exercises);\n    }\n  }, [workout]);\n\n  const handleEditTitleChange = e => {\n    setIsEditingTitle(true);\n    setWorkoutTitle(e.target.value);\n  };\n\n  const handleSaveTitle = () => {\n    if (workout) {\n      const updatedWorkout = { ...workout, name: workoutTitle };\n      updateWorkout(updatedWorkout, isNewProgram);\n    }\n    setIsEditingTitle(false);\n  };\n\n  const handleDeleteWorkout = workoutId => {\n    deleteWorkout(workoutId);\n  };\n\n  const handleDeleteExercise = (workoutId, exerciseId) => {\n    removeExercise(workoutId, exerciseId);\n  };\n\n  const handleWorkoutExpand = () => {\n    onToggleExpand(workout.id);\n  };\n\n  const handleAddSet = exercise => {\n    const exerciseId = exercise.id;\n\n    if (!workout || !workout.id) {\n      console.error('No active workout found.');\n      return;\n    }\n\n    addSet(workout.id, exerciseId);\n  };\n\n  const handleAddExercises = workoutId => {\n    setActiveWorkout(workoutId);\n\n    const selectedExercises = workout.exercises.map(exercise => ({\n      ...exercise,\n      catalog_exercise_id: exercise.catalog_exercise_id || exercise.id\n    }));\n\n    navigate('/select-exercises', {\n      state: {\n        workoutId,\n        selectedExercises,\n        isNewProgram,\n        programId: programId\n      }\n    });\n  };\n\n  const handleUpdateSetLocally = (updatedValue, exerciseId, setId) => {\n    setLocalExercises(prevExercises =>\n      prevExercises.map(exercise =>\n        exercise.catalog_exercise_id === exerciseId\n          ? {\n              ...exercise,\n              sets: exercise.sets.map(set =>\n                set.id === setId ? { ...set, ...updatedValue } : set\n              )\n            }\n          : exercise\n      )\n    );\n  };\n\n  const handleUpdateSetOnBlur = (exerciseId, set) => {\n    updateSet(workout.id, exerciseId, set);\n    // Update context with the latest local exercise data\n    updateWorkout({ ...workout, exercises: localExercises });\n  };\n\n  const handleUpdateWorkoutTitleOnBlur = e => {\n    const { name, value } = e.target;\n    updateWorkoutField(name, value);\n  };\n\n  const handleRemoveSet = (workoutId, exerciseId, setId) => {\n    if (isEditing) {\n      setLocalExercises(prevExercises =>\n        prevExercises.map(ex =>\n          ex.catalog_exercise_id === exerciseId\n            ? {\n                ...ex,\n                sets: ex.sets.filter(s => s.id !== setId)\n              }\n            : ex\n        )\n      );\n\n      // Update the context state after local state change\n      const updatedExercises = localExercises.map(ex =>\n        ex.catalog_exercise_id === exerciseId\n          ? {\n              ...ex,\n              sets: ex.sets.filter(s => s.id !== setId)\n            }\n          : ex\n      );\n\n      const updatedWorkout = {\n        ...workout,\n        exercises: updatedExercises\n      };\n\n      updateWorkout(updatedWorkout);\n    } else {\n      removeSet(workoutId, exerciseId, setId);\n    }\n  };\n\n  const workoutExercises = localExercises;\n  console.log('workoutExercises', workoutExercises);\n\n  const exerciseText = count => {\n    if (count === 0) return 'No Exercises';\n    if (count === 1) return '1 Exercise';\n    return `${count} Exercises`;\n  };\n\n  const exerciseCount = workoutExercises.length;\n\n  const moveExercise = (fromIndex, toIndex) => {\n    const updatedExercises = [...localExercises];\n    const [movedExercise] = updatedExercises.splice(fromIndex, 1);\n    updatedExercises.splice(toIndex, 0, movedExercise);\n    setLocalExercises(\n      updatedExercises.map((ex, idx) => ({ ...ex, order: idx + 1 }))\n    );\n  };\n\n  const saveWorkoutOrder = () => {\n    const updatedWorkout = { ...initialWorkout, exercises: localExercises };\n    updateWorkout(updatedWorkout);\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div\n        className={`workout ${theme} ${\n          activeWorkout === workout.id ? 'active' : ''\n        }`}\n      >\n        <div className='workout__header'>\n          <button className='workout__expand-btn' onClick={handleWorkoutExpand}>\n            {isExpanded ? (\n              <BsChevronCompactUp\n                className={`workout__icon ${theme}`}\n                size={30}\n              />\n            ) : (\n              <BsChevronCompactDown\n                className={`workout__icon ${theme}`}\n                size={30}\n              />\n            )}\n          </button>\n          <div className='workout__title-container'>\n            {isEditingTitle ? (\n              <div>\n                <input\n                  className={`workout__title-input ${theme}`}\n                  type='text'\n                  value={workoutTitle}\n                  onBlur={handleUpdateWorkoutTitleOnBlur}\n                  onChange={handleEditTitleChange}\n                  placeholder='Enter Workout Title'\n                />\n                <IoCheckmarkCircleSharp\n                  className={`workout__icon ${theme}`}\n                  onClick={handleSaveTitle}\n                  size={25}\n                />\n                <IoCloseCircleSharp\n                  className={`workout__icon ${theme}`}\n                  onClick={() => setIsEditingTitle(false)}\n                  size={25}\n                />\n              </div>\n            ) : (\n              <h2 className={`workout__title ${theme}`}>{workoutTitle}</h2>\n            )}\n            {isExpanded && !isEditingTitle && (\n              <TbPencil\n                className={`workout__icon pencil-icon ${theme}`}\n                onClick={() => setIsEditingTitle(true)}\n                size={25}\n              />\n            )}\n            <button\n              className='workout__delete-btn'\n              onClick={() => handleDeleteWorkout(workout.id)}\n            >\n              <GrClose className={`workout__icon ${theme}`} size={20} />\n            </button>\n          </div>\n        </div>\n        <div className='workout__subtitle'>\n          <span className={`workout__exercise-count ${theme}`}>\n            {exerciseText(exerciseCount)}\n          </span>\n          <button\n            onClick={() => handleAddExercises(workout.id)}\n            className='workout__add-exercise-btn'\n          >\n            Add\n          </button>\n        </div>\n        {isExpanded && (\n          <div className='workout__exercises'>\n            <div className='workout__exercises-header-container'>\n              <h4 className={`workout__exercises_header ${theme}`}>Exercise</h4>\n              <h4 className={`workout__exercises_header ${theme}`}>Set</h4>\n              <h4 className={`workout__exercises_header ${theme}`}>Weight</h4>\n              <h4 className={`workout__exercises_header ${theme}`}>Reps</h4>\n            </div>\n            {workoutExercises.length > 0 ? (\n              workoutExercises.map((exercise, index) => (\n                <div className='workout__each-exercise'>\n                  <div className='workout__exercise-column'>\n                    <div className='workout__exercise-info'>\n                      <div className={`workout__drag-order-container ${theme}`}>\n                        <span\n                          className={`workout__exercise-order-number ${theme}`}\n                        >\n                          {exercise.order}\n                        </span>\n                      </div>\n                      <div className='workout__exercise-details'>\n                        <h4 className={`workout__exercises_name ${theme}`}>\n                          {exercise.name}\n                        </h4>\n                        <h5 className={`workout__exercise-muscle ${theme}`}>\n                          {exercise.muscle}\n                        </h5>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='workout__sets-column'>\n                    {exercise.sets &&\n                      exercise.sets.length > 0 &&\n                      exercise.sets.map(set => (\n                        <div key={set.id} className='workout__set'>\n                          <p className={`workout__set-order-number ${theme}`}>\n                            {set.order}\n                          </p>\n                        </div>\n                      ))}\n                    <button\n                      onClick={() => handleAddSet(exercise)}\n                      className='workout__add-set-btn'\n                    >\n                      <MdAddBox size={25} />\n                    </button>\n                  </div>\n\n                  <div className='workout__weights-column'>\n                    {exercise.sets && exercise.sets.length > 0\n                      ? exercise.sets.map(set => (\n                          <div key={set.id} className='workout__set'>\n                            <TextInput\n                              className={`workout__set-weight ${theme}`}\n                              id='set-weight'\n                              onChange={e =>\n                                handleUpdateSetLocally(\n                                  { weight: e.target.value },\n                                  exercise.catalog_exercise_id,\n                                  set.id\n                                )\n                              }\n                              onBlur={() =>\n                                handleUpdateSetOnBlur(\n                                  exercise.catalog_exercise_id,\n                                  set\n                                )\n                              }\n                              value={set.weight}\n                              type='number'\n                            />\n                          </div>\n                        ))\n                      : null}\n                    <div className='workout__blank'></div>\n                  </div>\n\n                  <div className='workout__reps-column'>\n                    {exercise?.sets?.map(set => (\n                      <div key={set.id} className='workout__set'>\n                        <TextInput\n                          className={`workout__set-reps ${theme}`}\n                          onChange={e =>\n                            handleUpdateSetLocally(\n                              { reps: e.target.value },\n                              exercise.catalog_exercise_id,\n                              set.id\n                            )\n                          }\n                          onBlur={() =>\n                            handleUpdateSetOnBlur(\n                              exercise.catalog_exercise_id,\n                              set\n                            )\n                          }\n                          value={set.reps}\n                          type='number'\n                        />\n                      </div>\n                    ))}\n                    <div className='workout__blank'></div>\n                  </div>\n                  <div className='workout__delete-set-column'>\n                    {exercise?.sets?.map((set, setIndex) => (\n                      <div key={set.id} className='workout__set'>\n                        {setIndex > 0 ? (\n                          <button\n                            onClick={() =>\n                              handleRemoveSet(\n                                workout.id,\n                                exercise.catalog_exercise_id,\n                                set.id\n                              )\n                            }\n                            className='workout__delete-set-btn'\n                          >\n                            <RiDeleteBack2Fill size={25} />\n                          </button>\n                        ) : (\n                          <div className='workout__set'>\n                            <div className='workout__no-delete-set-btn' />\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                    <div className='workout__blank'></div>\n                  </div>\n                  <div className='workout__exercise-controls'>\n                    <div className={`workout__drag-handle ${theme}`}>\n                      <MdDragHandle size={25} />\n                    </div>\n                    <button\n                      className='workout__remove-exercise-btn'\n                      onClick={() =>\n                        handleDeleteExercise(workout.id, exercise.id)\n                      }\n                    >\n                      <TbHttpDelete size={30} />\n                    </button>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <p className='workout__no-exercise-message'>No exercises added</p>\n            )}\n          </div>\n        )}\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Workout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}