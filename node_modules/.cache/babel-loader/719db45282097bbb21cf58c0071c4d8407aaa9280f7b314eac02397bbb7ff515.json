{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\nfunction workoutReducer(state = initialState.workouts, action) {\n  console.log('Current state:', state);\n  switch (action.type) {\n    case actionTypes.ADD_WORKOUT:\n      {\n        if (!action.payload || !action.payload.programId) {\n          console.error('Invalid payload for ADD_WORKOUT', action.payload);\n          return state;\n        }\n        const workoutId = uuidv4();\n        const workoutTitle = action.payload.name || `Workout ${Object.keys(state).length + 1}`;\n        const newWorkout = {\n          id: workoutId,\n          name: workoutTitle,\n          exercises: [],\n          programId: action.payload.programId,\n          order: Object.keys(state).length + 1\n        };\n        const newState = {\n          ...state,\n          [workoutId]: newWorkout\n        };\n        return newState;\n      }\n    case actionTypes.UPDATE_WORKOUT:\n      {\n        console.log('action.payload:', action.payload);\n        if (!action.payload || !action.payload.id) {\n          console.error('Invalid payload for UPDATE_WORKOUT', action.payload);\n          return state;\n        }\n        const workout = state[action.payload.id];\n        console.log('Updating workout:', workout);\n        if (!workout) {\n          console.error('Workout not found for UPDATE_WORKOUT', action.payload.id);\n          return state;\n        }\n        const newState = {\n          ...state,\n          [action.payload.id]: {\n            ...workout,\n            ...action.payload\n          }\n        };\n        return newState;\n      }\n    case actionTypes.DELETE_WORKOUT:\n      {\n        if (!action.payload) {\n          console.error('Invalid payload for DELETE_WORKOUT', action.payload);\n          return state;\n        }\n        const {\n          [action.payload]: deletedWorkout,\n          ...remainingWorkouts\n        } = state;\n        const reorderedWorkouts = Object.values(remainingWorkouts).sort((a, b) => a.order - b.order).map((workout, index) => ({\n          ...workout,\n          order: index + 1\n        })).reduce((acc, workout) => {\n          acc[workout.id] = workout;\n          return acc;\n        }, {});\n        const newState = {\n          ...reorderedWorkouts\n        };\n        return newState;\n      }\n    default:\n      return state;\n  }\n}\nexport { workoutReducer };","map":{"version":3,"names":["v4","uuidv4","actionTypes","initialState","workoutReducer","state","workouts","action","console","log","type","ADD_WORKOUT","payload","programId","error","workoutId","workoutTitle","name","Object","keys","length","newWorkout","id","exercises","order","newState","UPDATE_WORKOUT","workout","DELETE_WORKOUT","deletedWorkout","remainingWorkouts","reorderedWorkouts","values","sort","a","b","map","index","reduce","acc"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/workoutReducer.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\n\nfunction workoutReducer(state = initialState.workouts, action) {\n  console.log('Current state:', state);\n  switch (action.type) {\n    case actionTypes.ADD_WORKOUT: {\n      if (!action.payload || !action.payload.programId) {\n        console.error('Invalid payload for ADD_WORKOUT', action.payload);\n        return state;\n      }\n\n      const workoutId = uuidv4();\n      const workoutTitle =\n        action.payload.name || `Workout ${Object.keys(state).length + 1}`;\n      const newWorkout = {\n        id: workoutId,\n        name: workoutTitle,\n        exercises: [],\n        programId: action.payload.programId,\n        order: Object.keys(state).length + 1\n      };\n\n      const newState = {\n        ...state,\n        [workoutId]: newWorkout\n      };\n\n      return newState;\n    }\n\n    case actionTypes.UPDATE_WORKOUT: {\n      console.log('action.payload:', action.payload);\n      if (!action.payload || !action.payload.id) {\n        console.error('Invalid payload for UPDATE_WORKOUT', action.payload);\n        return state;\n      }\n\n      const workout = state[action.payload.id];\n      console.log('Updating workout:', workout);\n      if (!workout) {\n        console.error(\n          'Workout not found for UPDATE_WORKOUT',\n          action.payload.id\n        );\n        return state;\n      }\n\n      const newState = {\n        ...state,\n        [action.payload.id]: {\n          ...workout,\n          ...action.payload\n        }\n      };\n\n      return newState;\n    }\n\n    case actionTypes.DELETE_WORKOUT: {\n      if (!action.payload) {\n        console.error('Invalid payload for DELETE_WORKOUT', action.payload);\n        return state;\n      }\n\n      const { [action.payload]: deletedWorkout, ...remainingWorkouts } = state;\n      const reorderedWorkouts = Object.values(remainingWorkouts)\n        .sort((a, b) => a.order - b.order)\n        .map((workout, index) => ({\n          ...workout,\n          order: index + 1\n        }))\n        .reduce((acc, workout) => {\n          acc[workout.id] = workout;\n          return acc;\n        }, {});\n\n      const newState = {\n        ...reorderedWorkouts\n      };\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { workoutReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}