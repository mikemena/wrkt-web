{"ast":null,"code":"import { initialState } from './initialState';\nfunction programReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      {\n        const updatedProgram = action.payload;\n        if (!updatedProgram || !updatedProgram.id) {\n          console.error('Invalid program data received:', updatedProgram);\n          return state;\n        }\n        return {\n          ...state,\n          selectedProgram: updatedProgram.id,\n          program: state.programs[updatedProgram.id] || state.program\n        };\n      }\n    case 'DESELECT_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!state.program || state.program.id !== programId) {\n          console.error('Program not found or invalid payload:', action.payload);\n          return state;\n        }\n        return {\n          ...state,\n          program: {\n            ...state.program,\n            selected: false\n          },\n          selectedProgram: null\n        };\n      }\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n      if (!state.program || state.program.id !== id) {\n        console.error('Program not found:', id);\n        return state;\n      }\n      const updatedProgram = {\n        ...state.program,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      };\n      return {\n        ...state,\n        program: updatedProgram\n      };\n    case 'UPDATE_PROGRAM':\n      {\n        const updatedProgram = action.payload;\n        return {\n          ...state,\n          program: {\n            ...state.program,\n            ...updatedProgram\n          }\n        };\n      }\n    case 'UPDATE_PROGRAM_SUCCESS':\n      {\n        const updatedProgram = action.payload;\n        if (!updatedProgram || !updatedProgram.id) {\n          console.error('Invalid program data received:', updatedProgram);\n          return state;\n        }\n        return {\n          ...state,\n          program: {\n            ...state.program,\n            ...updatedProgram\n          },\n          selectedProgram: updatedProgram.id\n        };\n      }\n    case 'DELETE_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!programId || state.program.id !== programId) {\n          console.error('Program not found or invalid payload:', action.payload);\n          return state;\n        }\n\n        // Reset the state to remove the program\n        return {\n          ...state,\n          program: null,\n          selectedProgram: null,\n          activeWorkout: null\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["initialState","programReducer","state","action","type","updatedProgram","payload","id","console","error","selectedProgram","program","programs","programId","selected","name","program_duration","duration_unit","days_per_week","main_goal","activeWorkout"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["import { initialState } from './initialState';\n\nfunction programReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM': {\n      const updatedProgram = action.payload;\n\n      if (!updatedProgram || !updatedProgram.id) {\n        console.error('Invalid program data received:', updatedProgram);\n        return state;\n      }\n\n      return {\n        ...state,\n        selectedProgram: updatedProgram.id,\n        program: state.programs[updatedProgram.id] || state.program\n      };\n    }\n\n    case 'DESELECT_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!state.program || state.program.id !== programId) {\n        console.error('Program not found or invalid payload:', action.payload);\n        return state;\n      }\n\n      return {\n        ...state,\n        program: {\n          ...state.program,\n          selected: false\n        },\n        selectedProgram: null\n      };\n    }\n\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n\n      if (!state.program || state.program.id !== id) {\n        console.error('Program not found:', id);\n        return state;\n      }\n\n      const updatedProgram = {\n        ...state.program,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      };\n\n      return {\n        ...state,\n        program: updatedProgram\n      };\n\n    case 'UPDATE_PROGRAM': {\n      const updatedProgram = action.payload;\n\n      return {\n        ...state,\n        program: {\n          ...state.program,\n          ...updatedProgram\n        }\n      };\n    }\n\n    case 'UPDATE_PROGRAM_SUCCESS': {\n      const updatedProgram = action.payload;\n\n      if (!updatedProgram || !updatedProgram.id) {\n        console.error('Invalid program data received:', updatedProgram);\n        return state;\n      }\n\n      return {\n        ...state,\n        program: {\n          ...state.program,\n          ...updatedProgram\n        },\n        selectedProgram: updatedProgram.id\n      };\n    }\n\n    case 'DELETE_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!programId || state.program.id !== programId) {\n        console.error('Program not found or invalid payload:', action.payload);\n        return state;\n      }\n\n      // Reset the state to remove the program\n      return {\n        ...state,\n        program: null,\n        selectedProgram: null,\n        activeWorkout: null\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}