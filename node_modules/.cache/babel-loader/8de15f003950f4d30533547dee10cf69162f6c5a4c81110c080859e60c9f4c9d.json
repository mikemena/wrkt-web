{"ast":null,"code":"import { actionTypes } from '../actions/actionTypes';\nfunction exerciseReducer(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      const {\n        workoutId,\n        exercises\n      } = action.payload;\n\n      // console.log('State before ADD_EXERCISE:', state);\n      // console.log('Workout ID:', workoutId);\n      // console.log('Exercises to add:', exercises);\n\n      if (!workoutId) {\n        console.error('No workout ID provided');\n        return state;\n      }\n      const updatedState = {\n        ...state,\n        [workoutId]: [...(state[workoutId] || []), ...exercises]\n      };\n\n      // console.log('State after ADD_EXERCISE:', updatedState);\n      return updatedState;\n    case actionTypes.DELETE_EXERCISE:\n      const {\n        workoutId: wId,\n        exerciseId\n      } = action.payload;\n      if (!wId || !state[wId]) {\n        console.error('No active workout or workout does not exist:', wId);\n        return state;\n      }\n      return {\n        ...state,\n        [wId]: state[wId].filter(ex => ex.id !== exerciseId)\n      };\n    default:\n      return state;\n  }\n}\nexport { exerciseReducer };","map":{"version":3,"names":["actionTypes","exerciseReducer","state","action","type","ADD_EXERCISE","workoutId","exercises","payload","console","error","updatedState","DELETE_EXERCISE","wId","exerciseId","filter","ex","id"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/exerciseReducer.js"],"sourcesContent":["import { actionTypes } from '../actions/actionTypes';\n\nfunction exerciseReducer(state = {}, action) {\n  switch (action.type) {\n    case actionTypes.ADD_EXERCISE:\n      const { workoutId, exercises } = action.payload;\n\n      // console.log('State before ADD_EXERCISE:', state);\n      // console.log('Workout ID:', workoutId);\n      // console.log('Exercises to add:', exercises);\n\n      if (!workoutId) {\n        console.error('No workout ID provided');\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        [workoutId]: [...(state[workoutId] || []), ...exercises]\n      };\n\n      // console.log('State after ADD_EXERCISE:', updatedState);\n      return updatedState;\n\n    case actionTypes.DELETE_EXERCISE:\n      const { workoutId: wId, exerciseId } = action.payload;\n\n      if (!wId || !state[wId]) {\n        console.error('No active workout or workout does not exist:', wId);\n        return state;\n      }\n\n      return {\n        ...state,\n        [wId]: state[wId].filter(ex => ex.id !== exerciseId)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { exerciseReducer };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AAEpD,SAASC,eAAeA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,EAAE;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKJ,WAAW,CAACK,YAAY;MAC3B,MAAM;QAAEC,SAAS;QAAEC;MAAU,CAAC,GAAGJ,MAAM,CAACK,OAAO;;MAE/C;MACA;MACA;;MAEA,IAAI,CAACF,SAAS,EAAE;QACdG,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;QACvC,OAAOR,KAAK;MACd;MAEA,MAAMS,YAAY,GAAG;QACnB,GAAGT,KAAK;QACR,CAACI,SAAS,GAAG,CAAC,IAAIJ,KAAK,CAACI,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,GAAGC,SAAS;MACzD,CAAC;;MAED;MACA,OAAOI,YAAY;IAErB,KAAKX,WAAW,CAACY,eAAe;MAC9B,MAAM;QAAEN,SAAS,EAAEO,GAAG;QAAEC;MAAW,CAAC,GAAGX,MAAM,CAACK,OAAO;MAErD,IAAI,CAACK,GAAG,IAAI,CAACX,KAAK,CAACW,GAAG,CAAC,EAAE;QACvBJ,OAAO,CAACC,KAAK,CAAC,8CAA8C,EAAEG,GAAG,CAAC;QAClE,OAAOX,KAAK;MACd;MAEA,OAAO;QACL,GAAGA,KAAK;QACR,CAACW,GAAG,GAAGX,KAAK,CAACW,GAAG,CAAC,CAACE,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKH,UAAU;MACrD,CAAC;IAEH;MACE,OAAOZ,KAAK;EAChB;AACF;AAEA,SAASD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}