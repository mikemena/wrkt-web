{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/ExercisesListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport ExerciseFilters from '../components/ExerciseFilters';\nimport './ExercisesList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExercisesListPage = () => {\n  _s();\n  const [exercises, setExercises] = useState([]);\n  const location = useLocation();\n  const [selectedMuscle, setSelectedMuscle] = useState('all');\n  const [selectedEquipment, setSelectedEquipment] = useState('all');\n  const [searchQuery, setSearchQuery] = useState(''); // Add searchQuery state\n\n  // Effect to fetch exercises when the component mounts or when filters change\n  useEffect(() => {\n    var _location$state;\n    const muscle = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedMuscle;\n    setSelectedMuscle(muscle);\n    const fetchExercises = async () => {\n      try {\n        let apiUrl = `http://localhost:9025/api/exercises/muscles/${muscle}`;\n\n        // Add searchQuery to the API URL if it's not empty\n        if (searchQuery) {\n          apiUrl += `?q=${searchQuery}`;\n        }\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        setExercises(data);\n      } catch (error) {\n        console.error('Failed to fetch exercises:', error);\n      }\n    };\n    if (muscle !== 'all') {\n      fetchExercises();\n    }\n  }, [location.state, searchQuery]);\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page_title\",\n      children: \"Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: exercise.name\n      }, exercise.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisesListPage, \"2PiCK0adoUVjLcF/65zoHbYEtrc=\", false, function () {\n  return [useLocation];\n});\n_c = ExercisesListPage;\nexport default ExercisesListPage;\nvar _c;\n$RefreshReg$(_c, \"ExercisesListPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","SearchBar","ExerciseFilters","jsxDEV","_jsxDEV","ExercisesListPage","_s","exercises","setExercises","location","selectedMuscle","setSelectedMuscle","selectedEquipment","setSelectedEquipment","searchQuery","setSearchQuery","_location$state","muscle","state","fetchExercises","apiUrl","response","fetch","data","json","error","console","handleSearch","query","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","map","exercise","name","id","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/ExercisesListPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport ExerciseFilters from '../components/ExerciseFilters';\nimport './ExercisesList.css';\n\nconst ExercisesListPage = () => {\n  const [exercises, setExercises] = useState([]);\n  const location = useLocation();\n  const [selectedMuscle, setSelectedMuscle] = useState('all');\n  const [selectedEquipment, setSelectedEquipment] = useState('all');\n  const [searchQuery, setSearchQuery] = useState(''); // Add searchQuery state\n\n  // Effect to fetch exercises when the component mounts or when filters change\n  useEffect(() => {\n    const muscle = location.state?.selectedMuscle;\n    setSelectedMuscle(muscle);\n\n    const fetchExercises = async () => {\n      try {\n        let apiUrl = `http://localhost:9025/api/exercises/muscles/${muscle}`;\n\n        // Add searchQuery to the API URL if it's not empty\n        if (searchQuery) {\n          apiUrl += `?q=${searchQuery}`;\n        }\n\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        setExercises(data);\n      } catch (error) {\n        console.error('Failed to fetch exercises:', error);\n      }\n    };\n\n    if (muscle !== 'all') {\n      fetchExercises();\n    }\n  }, [location.state, searchQuery]);\n\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n\n  return (\n    <div>\n      <h1 className='page_title'>Exercises</h1>\n      <SearchBar onSearch={handleSearch} />\n      {/* Render the list of exercises based on the 'exercises' state */}\n      <ul>\n        {exercises.map(exercise => (\n          <li key={exercise.id}>{exercise.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ExercisesListPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IAAA,IAAAiB,eAAA;IACd,MAAMC,MAAM,IAAAD,eAAA,GAAGP,QAAQ,CAACS,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAgBN,cAAc;IAC7CC,iBAAiB,CAACM,MAAM,CAAC;IAEzB,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,IAAIC,MAAM,GAAI,+CAA8CH,MAAO,EAAC;;QAEpE;QACA,IAAIH,WAAW,EAAE;UACfM,MAAM,IAAK,MAAKN,WAAY,EAAC;QAC/B;QAEA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;QACpC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClChB,YAAY,CAACe,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAED,IAAIR,MAAM,KAAK,KAAK,EAAE;MACpBE,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACV,QAAQ,CAACS,KAAK,EAAEJ,WAAW,CAAC,CAAC;EAEjC,MAAMa,YAAY,GAAGC,KAAK,IAAI;IAC5Bb,cAAc,CAACa,KAAK,CAAC;EACvB,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAI0B,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzC9B,OAAA,CAACH,SAAS;MAACkC,QAAQ,EAAER;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAErC9B,OAAA;MAAAyB,QAAA,EACGtB,SAAS,CAAC6B,GAAG,CAACC,QAAQ,iBACrBjC,OAAA;QAAAyB,QAAA,EAAuBQ,QAAQ,CAACC;MAAI,GAA3BD,QAAQ,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAlDID,iBAAiB;EAAA,QAEJL,WAAW;AAAA;AAAAwC,EAAA,GAFxBnC,iBAAiB;AAoDvB,eAAeA,iBAAiB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}