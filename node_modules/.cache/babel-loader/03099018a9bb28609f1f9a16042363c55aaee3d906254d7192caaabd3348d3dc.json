{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\nfunction setReducer(state = initialState.sets, action) {\n  var _state$exerciseId;\n  switch (action.type) {\n    case actionTypes.ADD_SET:\n      const {\n        workoutId,\n        exerciseId,\n        weight,\n        reps\n      } = action.payload;\n      const newSet = {\n        id: uuidv4(),\n        weight,\n        reps,\n        order: (((_state$exerciseId = state[exerciseId]) === null || _state$exerciseId === void 0 ? void 0 : _state$exerciseId.length) || 0) + 1\n      };\n      return {\n        ...state,\n        [exerciseId]: [...(state[exerciseId] || []), newSet]\n      };\n    case actionTypes.SET_SETS:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case actionTypes.UPDATE_SET:\n      const {\n        exerciseId: eId,\n        updatedSet\n      } = action.payload;\n      return {\n        ...state,\n        [eId]: state[eId].map(set => set.id === updatedSet.id ? updatedSet : set)\n      };\n    case actionTypes.DELETE_SET:\n      const {\n        exerciseId: exId,\n        setId\n      } = action.payload;\n      const updatedSets = state[exId].filter(set => set.id !== setId);\n      return {\n        ...state,\n        [exId]: updatedSets\n      };\n    default:\n      return state;\n  }\n}\nexport { setReducer };","map":{"version":3,"names":["v4","uuidv4","actionTypes","initialState","setReducer","state","sets","action","_state$exerciseId","type","ADD_SET","workoutId","exerciseId","weight","reps","payload","newSet","id","order","length","SET_SETS","UPDATE_SET","eId","updatedSet","map","set","DELETE_SET","exId","setId","updatedSets","filter"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/setReducer.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\n\nfunction setReducer(state = initialState.sets, action) {\n  switch (action.type) {\n    case actionTypes.ADD_SET:\n      const { workoutId, exerciseId, weight, reps } = action.payload;\n      const newSet = {\n        id: uuidv4(),\n        weight,\n        reps,\n        order: (state[exerciseId]?.length || 0) + 1\n      };\n      return {\n        ...state,\n        [exerciseId]: [...(state[exerciseId] || []), newSet]\n      };\n\n    case actionTypes.SET_SETS:\n      return {\n        ...state,\n        ...action.payload\n      };\n\n    case actionTypes.UPDATE_SET:\n      const { exerciseId: eId, updatedSet } = action.payload;\n      return {\n        ...state,\n        [eId]: state[eId].map(set =>\n          set.id === updatedSet.id ? updatedSet : set\n        )\n      };\n\n    case actionTypes.DELETE_SET:\n      const { exerciseId: exId, setId } = action.payload;\n      const updatedSets = state[exId].filter(set => set.id !== setId);\n      return {\n        ...state,\n        [exId]: updatedSets\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { setReducer };\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,SAASC,UAAUA,CAACC,KAAK,GAAGF,YAAY,CAACG,IAAI,EAAEC,MAAM,EAAE;EAAA,IAAAC,iBAAA;EACrD,QAAQD,MAAM,CAACE,IAAI;IACjB,KAAKP,WAAW,CAACQ,OAAO;MACtB,MAAM;QAAEC,SAAS;QAAEC,UAAU;QAAEC,MAAM;QAAEC;MAAK,CAAC,GAAGP,MAAM,CAACQ,OAAO;MAC9D,MAAMC,MAAM,GAAG;QACbC,EAAE,EAAEhB,MAAM,CAAC,CAAC;QACZY,MAAM;QACNC,IAAI;QACJI,KAAK,EAAE,CAAC,EAAAV,iBAAA,GAAAH,KAAK,CAACO,UAAU,CAAC,cAAAJ,iBAAA,uBAAjBA,iBAAA,CAAmBW,MAAM,KAAI,CAAC,IAAI;MAC5C,CAAC;MACD,OAAO;QACL,GAAGd,KAAK;QACR,CAACO,UAAU,GAAG,CAAC,IAAIP,KAAK,CAACO,UAAU,CAAC,IAAI,EAAE,CAAC,EAAEI,MAAM;MACrD,CAAC;IAEH,KAAKd,WAAW,CAACkB,QAAQ;MACvB,OAAO;QACL,GAAGf,KAAK;QACR,GAAGE,MAAM,CAACQ;MACZ,CAAC;IAEH,KAAKb,WAAW,CAACmB,UAAU;MACzB,MAAM;QAAET,UAAU,EAAEU,GAAG;QAAEC;MAAW,CAAC,GAAGhB,MAAM,CAACQ,OAAO;MACtD,OAAO;QACL,GAAGV,KAAK;QACR,CAACiB,GAAG,GAAGjB,KAAK,CAACiB,GAAG,CAAC,CAACE,GAAG,CAACC,GAAG,IACvBA,GAAG,CAACR,EAAE,KAAKM,UAAU,CAACN,EAAE,GAAGM,UAAU,GAAGE,GAC1C;MACF,CAAC;IAEH,KAAKvB,WAAW,CAACwB,UAAU;MACzB,MAAM;QAAEd,UAAU,EAAEe,IAAI;QAAEC;MAAM,CAAC,GAAGrB,MAAM,CAACQ,OAAO;MAClD,MAAMc,WAAW,GAAGxB,KAAK,CAACsB,IAAI,CAAC,CAACG,MAAM,CAACL,GAAG,IAAIA,GAAG,CAACR,EAAE,KAAKW,KAAK,CAAC;MAC/D,OAAO;QACL,GAAGvB,KAAK;QACR,CAACsB,IAAI,GAAGE;MACV,CAAC;IAEH;MACE,OAAOxB,KAAK;EAChB;AACF;AAEA,SAASD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}