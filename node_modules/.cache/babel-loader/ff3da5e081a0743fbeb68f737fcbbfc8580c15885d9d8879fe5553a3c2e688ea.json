{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/contexts/workoutContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutContext = /*#__PURE__*/createContext();\nexport const useWorkout = () => {\n  _s();\n  return useContext(WorkoutContext);\n};\n_s(useWorkout, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const WorkoutProvider = ({\n  children\n}) => {\n  _s2();\n  const location = useLocation();\n  const [workout, setWorkout] = useState({\n    templateName: '',\n    planType: 'General',\n    dayType: 'Day of Week',\n    difficulty: 'Intermediate',\n    selectedExercises: []\n  });\n  useEffect(() => {\n    // Function to reset state\n    const resetWorkout = () => {\n      setWorkout({\n        templateName: '',\n        planType: 'General',\n        dayType: 'Day of Week',\n        difficulty: 'Intermediate',\n        selectedExercises: []\n      });\n    };\n    // Paths that should trigger a reset when navigated away from\n    const pathsToReset = ['/create-workout', '/create-workout-details'];\n\n    // Check if the current path is in the list and reset if navigating away\n    if (!pathsToReset.includes(location.pathname)) {\n      resetWorkout();\n    }\n  }, [location.pathname]); // Depend on pathname to trigger effect\n  return /*#__PURE__*/_jsxDEV(WorkoutContext.Provider, {\n    value: {\n      workout,\n      setWorkout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s2(WorkoutProvider, \"3dDnGDGI2Z86VcFrbbnDcxYZoMA=\", false, function () {\n  return [useLocation];\n});\n_c = WorkoutProvider;\nvar _c;\n$RefreshReg$(_c, \"WorkoutProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useLocation","jsxDEV","_jsxDEV","WorkoutContext","useWorkout","_s","WorkoutProvider","children","_s2","location","workout","setWorkout","templateName","planType","dayType","difficulty","selectedExercises","useEffect","resetWorkout","pathsToReset","includes","pathname","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/contexts/workoutContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst WorkoutContext = createContext();\n\nexport const useWorkout = () => useContext(WorkoutContext);\n\nexport const WorkoutProvider = ({ children }) => {\n  const location = useLocation();\n  const [workout, setWorkout] = useState({\n    templateName: '',\n    planType: 'General',\n    dayType: 'Day of Week',\n    difficulty: 'Intermediate',\n    selectedExercises: []\n  });\n\n  useEffect(() => {\n    // Function to reset state\n    const resetWorkout = () => {\n      setWorkout({\n        templateName: '',\n        planType: 'General',\n        dayType: 'Day of Week',\n        difficulty: 'Intermediate',\n        selectedExercises: []\n      });\n    };\n    // Paths that should trigger a reset when navigated away from\n    const pathsToReset = ['/create-workout', '/create-workout-details'];\n\n    // Check if the current path is in the list and reset if navigating away\n    if (!pathsToReset.includes(location.pathname)) {\n      resetWorkout();\n    }\n  }, [location.pathname]); // Depend on pathname to trigger effect\n  return (\n    <WorkoutContext.Provider value={{ workout, setWorkout }}>\n      {children}\n    </WorkoutContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMO,UAAU,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,cAAc,CAAC;AAAA;AAACE,EAAA,CAA9CD,UAAU;AAEvB,OAAO,MAAME,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IACrCa,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,SAAS;IACnBC,OAAO,EAAE,aAAa;IACtBC,UAAU,EAAE,cAAc;IAC1BC,iBAAiB,EAAE;EACrB,CAAC,CAAC;EAEFC,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzBP,UAAU,CAAC;QACTC,YAAY,EAAE,EAAE;QAChBC,QAAQ,EAAE,SAAS;QACnBC,OAAO,EAAE,aAAa;QACtBC,UAAU,EAAE,cAAc;QAC1BC,iBAAiB,EAAE;MACrB,CAAC,CAAC;IACJ,CAAC;IACD;IACA,MAAMG,YAAY,GAAG,CAAC,iBAAiB,EAAE,yBAAyB,CAAC;;IAEnE;IACA,IAAI,CAACA,YAAY,CAACC,QAAQ,CAACX,QAAQ,CAACY,QAAQ,CAAC,EAAE;MAC7CH,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACT,QAAQ,CAACY,QAAQ,CAAC,CAAC,CAAC,CAAC;EACzB,oBACEnB,OAAA,CAACC,cAAc,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEb,OAAO;MAAEC;IAAW,CAAE;IAAAJ,QAAA,EACrDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACnB,GAAA,CAlCWF,eAAe;EAAA,QACTN,WAAW;AAAA;AAAA4B,EAAA,GADjBtB,eAAe;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}