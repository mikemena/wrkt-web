{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\nfunction workoutReducer(state = initialState.workouts, action) {\n  console.log('Action Type:', action.type);\n  console.log('State Before:', state);\n  switch (action.type) {\n    case actionTypes.ADD_WORKOUT:\n      {\n        if (!action.payload || !action.payload.programId) {\n          console.error('Invalid payload for ADD_WORKOUT', action.payload);\n          return state;\n        }\n        const workoutId = uuidv4();\n        const workoutTitle = action.payload.name || `Workout ${Object.keys(state).length + 1}`;\n        const newWorkout = {\n          id: workoutId,\n          name: workoutTitle,\n          exercises: [],\n          programId: action.payload.programId\n        };\n        const newState = {\n          ...state,\n          [workoutId]: newWorkout\n        };\n        console.log('State After ADD_WORKOUT:', newState);\n        return newState;\n      }\n    case actionTypes.UPDATE_WORKOUT:\n      {\n        if (!action.payload || !action.payload.id) {\n          console.error('Invalid payload for UPDATE_WORKOUT', action.payload);\n          return state;\n        }\n        const workout = state[action.payload.id];\n        if (!workout) {\n          console.error('Workout not found for UPDATE_WORKOUT', action.payload.id);\n          return state;\n        }\n        const newState = {\n          ...state,\n          [action.payload.id]: {\n            ...workout,\n            ...action.payload\n          }\n        };\n        console.log('State After UPDATE_WORKOUT:', newState);\n        return newState;\n      }\n    case actionTypes.DELETE_WORKOUT:\n      {\n        if (!action.payload) {\n          console.error('Invalid payload for DELETE_WORKOUT', action.payload);\n          return state;\n        }\n        const newWorkouts = {\n          ...state\n        };\n        delete newWorkouts[action.payload];\n        const newState = {\n          ...newWorkouts\n        };\n        console.log('State After DELETE_WORKOUT:', newState);\n        return newState;\n      }\n    case actionTypes.SET_ACTIVE_WORKOUT:\n      {\n        if (!action.payload || !action.payload.workoutId) {\n          console.warn('Invalid payload for SET_ACTIVE_WORKOUT', action.payload);\n          return state;\n        }\n\n        // Update only the activeWorkout state\n        return state; // Handle activeWorkout state in a separate part of the reducer if needed\n      }\n    default:\n      console.log('State After Default:', state);\n      return state;\n  }\n}\nexport { workoutReducer };","map":{"version":3,"names":["v4","uuidv4","actionTypes","initialState","workoutReducer","state","workouts","action","console","log","type","ADD_WORKOUT","payload","programId","error","workoutId","workoutTitle","name","Object","keys","length","newWorkout","id","exercises","newState","UPDATE_WORKOUT","workout","DELETE_WORKOUT","newWorkouts","SET_ACTIVE_WORKOUT","warn"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/workoutReducer.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\n\nfunction workoutReducer(state = initialState.workouts, action) {\n  console.log('Action Type:', action.type);\n  console.log('State Before:', state);\n\n  switch (action.type) {\n    case actionTypes.ADD_WORKOUT: {\n      if (!action.payload || !action.payload.programId) {\n        console.error('Invalid payload for ADD_WORKOUT', action.payload);\n        return state;\n      }\n\n      const workoutId = uuidv4();\n      const workoutTitle =\n        action.payload.name || `Workout ${Object.keys(state).length + 1}`;\n      const newWorkout = {\n        id: workoutId,\n        name: workoutTitle,\n        exercises: [],\n        programId: action.payload.programId\n      };\n\n      const newState = {\n        ...state,\n        [workoutId]: newWorkout\n      };\n      console.log('State After ADD_WORKOUT:', newState);\n      return newState;\n    }\n\n    case actionTypes.UPDATE_WORKOUT: {\n      if (!action.payload || !action.payload.id) {\n        console.error('Invalid payload for UPDATE_WORKOUT', action.payload);\n        return state;\n      }\n\n      const workout = state[action.payload.id];\n      if (!workout) {\n        console.error(\n          'Workout not found for UPDATE_WORKOUT',\n          action.payload.id\n        );\n        return state;\n      }\n\n      const newState = {\n        ...state,\n        [action.payload.id]: {\n          ...workout,\n          ...action.payload\n        }\n      };\n      console.log('State After UPDATE_WORKOUT:', newState);\n      return newState;\n    }\n\n    case actionTypes.DELETE_WORKOUT: {\n      if (!action.payload) {\n        console.error('Invalid payload for DELETE_WORKOUT', action.payload);\n        return state;\n      }\n\n      const newWorkouts = { ...state };\n      delete newWorkouts[action.payload];\n      const newState = {\n        ...newWorkouts\n      };\n      console.log('State After DELETE_WORKOUT:', newState);\n      return newState;\n    }\n\n    case actionTypes.SET_ACTIVE_WORKOUT: {\n      if (!action.payload || !action.payload.workoutId) {\n        console.warn('Invalid payload for SET_ACTIVE_WORKOUT', action.payload);\n        return state;\n      }\n\n      // Update only the activeWorkout state\n      return state; // Handle activeWorkout state in a separate part of the reducer if needed\n    }\n\n    default:\n      console.log('State After Default:', state);\n      return state;\n  }\n}\n\nexport { workoutReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}