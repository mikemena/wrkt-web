{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/ExerciseFilters/ExerciseFilters.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExerciseFilters() {\n  _s();\n  const [muscles, setMuscles] = useState([]);\n  const [equipment, setEquipment] = useState([]);\n  const [selectedMuscle, setSelectedMuscle] = useState('Select Muscle');\n  const [selectedEquipment, setSelectedEquipment] = useState('Select Equipment');\n  useEffect(() => {\n    // Fetch muscles and equipment options from a REST API\n    fetch('http://localhost:9025/api/muscles').then(response => response.json()).then(data => setMuscles(data)).catch(error => console.error('Failed to fetch muscles:', error));\n    fetch('http://localhost:9025/api/equipments').then(response => response.json()).then(data => setEquipment(data)).catch(error => console.error('Failed to fetch equipment:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      title: \"Muscle\",\n      options: muscles,\n      selectedOption: selectedMuscle,\n      onOptionSelect: setSelectedMuscle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      title: \"Equipment\",\n      options: equipment,\n      selectedOption: selectedEquipment,\n      onOptionSelect: setSelectedEquipment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(ExerciseFilters, \"2R/LRgahI9eJ9CeD5TsPL6MFqac=\");\n_c = ExerciseFilters;\nexport default ExerciseFilters;\nvar _c;\n$RefreshReg$(_c, \"ExerciseFilters\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ExerciseFilters","_s","muscles","setMuscles","equipment","setEquipment","selectedMuscle","setSelectedMuscle","selectedEquipment","setSelectedEquipment","fetch","then","response","json","data","catch","error","console","children","Dropdown","title","options","selectedOption","onOptionSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/ExerciseFilters/ExerciseFilters.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ExerciseFilters() {\n  const [muscles, setMuscles] = useState([]);\n  const [equipment, setEquipment] = useState([]);\n  const [selectedMuscle, setSelectedMuscle] = useState('Select Muscle');\n  const [selectedEquipment, setSelectedEquipment] =\n    useState('Select Equipment');\n\n  useEffect(() => {\n    // Fetch muscles and equipment options from a REST API\n    fetch('http://localhost:9025/api/muscles')\n      .then(response => response.json())\n      .then(data => setMuscles(data))\n      .catch(error => console.error('Failed to fetch muscles:', error));\n\n    fetch('http://localhost:9025/api/equipments')\n      .then(response => response.json())\n      .then(data => setEquipment(data))\n      .catch(error => console.error('Failed to fetch equipment:', error));\n  }, []);\n\n  return (\n    <div>\n      <Dropdown\n        title='Muscle'\n        options={muscles}\n        selectedOption={selectedMuscle}\n        onOptionSelect={setSelectedMuscle}\n      />\n      <Dropdown\n        title='Equipment'\n        options={equipment}\n        selectedOption={selectedEquipment}\n        onOptionSelect={setSelectedEquipment}\n      />\n    </div>\n  );\n}\n\nexport default ExerciseFilters;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,eAAe,CAAC;EACrE,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAC7Cb,QAAQ,CAAC,kBAAkB,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd;IACAa,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIX,UAAU,CAACW,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;IAEnEN,KAAK,CAAC,sCAAsC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,YAAY,CAACS,IAAI,CAAC,CAAC,CAChCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACoB,QAAQ;MACPC,KAAK,EAAC,QAAQ;MACdC,OAAO,EAAEnB,OAAQ;MACjBoB,cAAc,EAAEhB,cAAe;MAC/BiB,cAAc,EAAEhB;IAAkB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACF5B,OAAA,CAACoB,QAAQ;MACPC,KAAK,EAAC,WAAW;MACjBC,OAAO,EAAEjB,SAAU;MACnBkB,cAAc,EAAEd,iBAAkB;MAClCe,cAAc,EAAEd;IAAqB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1B,EAAA,CApCQD,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAsCxB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}