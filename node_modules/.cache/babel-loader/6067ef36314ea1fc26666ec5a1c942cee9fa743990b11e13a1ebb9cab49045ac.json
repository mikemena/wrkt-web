{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/ExercisesListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Exercise from '../components/Exercise/Exercise';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport ExerciseFilters from '../components/ExerciseFilters/ExerciseFilters';\nimport './ExercisesList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExercisesListPage = () => {\n  _s();\n  const [exercises, setExercises] = useState([]);\n  const [filteredExercises, setFilteredExercises] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:9025/api/exercise-catalog').then(response => response.json()).then(data => {\n      setExercises(data);\n      console.log(data);\n    }).catch(error => console.error('Failed to fetch exercises:', error));\n  }, []);\n  if (!exercises) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  useEffect(() => {\n    filterExercises();\n  }, [searchTerm, selectedMuscle, selectedEquipment]);\n  const filterExercises = () => {\n    let filtered = exercises;\n    if (selectedMuscle) {\n      filtered = filtered.filter(exercise => exercise.muscle === selectedMuscle);\n    }\n    if (selectedEquipment) {\n      filtered = filtered.filter(exercise => exercise.equipment === selectedEquipment);\n    }\n    if (searchTerm) {\n      filtered = filtered.filter(exercise => exercise.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    setFilteredExercises(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page_title\",\n      children: \"Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseFilters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(Exercise, {\n        name: exercise.name,\n        muscle: exercise.muscle,\n        equipment: exercise.equipment,\n        image: `http://localhost:9025/${exercise.file_path}`\n      }, exercise.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisesListPage, \"sZ69OBuQaIJt7BQawThOyS3474I=\");\n_c = ExercisesListPage;\nexport default ExercisesListPage;\nvar _c;\n$RefreshReg$(_c, \"ExercisesListPage\");","map":{"version":3,"names":["React","useState","useEffect","Exercise","SearchBar","ExerciseFilters","jsxDEV","_jsxDEV","ExercisesListPage","_s","exercises","setExercises","filteredExercises","setFilteredExercises","fetch","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","filterExercises","searchTerm","selectedMuscle","selectedEquipment","filtered","filter","exercise","muscle","equipment","name","toLowerCase","includes","className","map","image","file_path","id","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/ExercisesListPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Exercise from '../components/Exercise/Exercise';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport ExerciseFilters from '../components/ExerciseFilters/ExerciseFilters';\nimport './ExercisesList.css';\n\nconst ExercisesListPage = () => {\n  const [exercises, setExercises] = useState([]);\n  const [filteredExercises, setFilteredExercises] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:9025/api/exercise-catalog')\n      .then(response => response.json())\n      .then(data => {\n        setExercises(data);\n        console.log(data);\n      })\n      .catch(error => console.error('Failed to fetch exercises:', error));\n  }, []);\n\n  if (!exercises) {\n    return <div>Loading...</div>;\n  }\n\n  useEffect(() => {\n    filterExercises();\n  }, [searchTerm, selectedMuscle, selectedEquipment]);\n\n  const filterExercises = () => {\n    let filtered = exercises;\n    if (selectedMuscle) {\n      filtered = filtered.filter(\n        exercise => exercise.muscle === selectedMuscle\n      );\n    }\n    if (selectedEquipment) {\n      filtered = filtered.filter(\n        exercise => exercise.equipment === selectedEquipment\n      );\n    }\n    if (searchTerm) {\n      filtered = filtered.filter(exercise =>\n        exercise.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n    setFilteredExercises(filtered);\n  };\n\n  return (\n    <div className='exercise-page'>\n      <h1 className='page_title'>Exercises</h1>\n      <SearchBar />\n      <ExerciseFilters />\n      <div>\n        {exercises.map(exercise => (\n          <Exercise\n            key={exercise.id}\n            name={exercise.name}\n            muscle={exercise.muscle}\n            equipment={exercise.equipment}\n            image={`http://localhost:9025/${exercise.file_path}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisesListPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,eAAe,MAAM,+CAA+C;AAC3E,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZP,YAAY,CAACO,IAAI,CAAC;MAClBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACZ,SAAS,EAAE;IACd,oBAAOH,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEAzB,SAAS,CAAC,MAAM;IACd0B,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACC,UAAU,EAAEC,cAAc,EAAEC,iBAAiB,CAAC,CAAC;EAEnD,MAAMH,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAII,QAAQ,GAAGtB,SAAS;IACxB,IAAIoB,cAAc,EAAE;MAClBE,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CACxBC,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAKL,cAClC,CAAC;IACH;IACA,IAAIC,iBAAiB,EAAE;MACrBC,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CACxBC,QAAQ,IAAIA,QAAQ,CAACE,SAAS,KAAKL,iBACrC,CAAC;IACH;IACA,IAAIF,UAAU,EAAE;MACdG,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,QAAQ,IACjCA,QAAQ,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,UAAU,CAACS,WAAW,CAAC,CAAC,CAC/D,CAAC;IACH;IACAzB,oBAAoB,CAACmB,QAAQ,CAAC;EAChC,CAAC;EAED,oBACEzB,OAAA;IAAKiC,SAAS,EAAC,eAAe;IAAAjB,QAAA,gBAC5BhB,OAAA;MAAIiC,SAAS,EAAC,YAAY;MAAAjB,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCpB,OAAA,CAACH,SAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbpB,OAAA,CAACF,eAAe;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBpB,OAAA;MAAAgB,QAAA,EACGb,SAAS,CAAC+B,GAAG,CAACP,QAAQ,iBACrB3B,OAAA,CAACJ,QAAQ;QAEPkC,IAAI,EAAEH,QAAQ,CAACG,IAAK;QACpBF,MAAM,EAAED,QAAQ,CAACC,MAAO;QACxBC,SAAS,EAAEF,QAAQ,CAACE,SAAU;QAC9BM,KAAK,EAAG,yBAAwBR,QAAQ,CAACS,SAAU;MAAE,GAJhDT,QAAQ,CAACU,EAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5DID,iBAAiB;AAAAqC,EAAA,GAAjBrC,iBAAiB;AA8DvB,eAAeA,iBAAiB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}