{"ast":null,"code":"import { initialState } from './initialState';\nfunction programReducer(state = initialState.programs, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      console.log('SET_SELECTED_PROGRAM action:', action.payload);\n      const newState = {\n        ...state,\n        selectedProgram: action.payload\n      };\n      console.log('New state after SET_SELECTED_PROGRAM:', newState);\n      return newState;\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id],\n          // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n      return updatedState;\n    case 'UPDATE_PROGRAM':\n      {\n        const {\n          id,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        } = action.payload;\n        const existingProgram = state[id];\n        if (!existingProgram) {\n          console.error('Program not found:', id);\n          return state;\n        }\n        const updatedProgram = {\n          ...existingProgram,\n          ...(name !== undefined && {\n            name\n          }),\n          ...(program_duration !== undefined && {\n            program_duration\n          }),\n          ...(duration_unit !== undefined && {\n            duration_unit\n          }),\n          ...(days_per_week !== undefined && {\n            days_per_week\n          }),\n          ...(main_goal !== undefined && {\n            main_goal\n          }),\n          ...(user_id !== undefined && {\n            user_id\n          })\n        };\n        const updatedState = {\n          ...state,\n          [id]: updatedProgram\n        };\n        console.log('Updated program:', updatedState[id]);\n        return updatedState;\n      }\n    case 'UPDATE_PROGRAM_SUCCESS':\n      {\n        const updatedProgram = action.payload;\n        console.log('Updating program in reducer:', updatedProgram);\n        const existingProgram = state[updatedProgram.id];\n        const updatedState = {\n          ...state,\n          [updatedProgram.id]: {\n            ...existingProgram,\n            // Spread existing program details if it exists\n            ...updatedProgram // Spread all updated fields from the payload\n          }\n        };\n\n        // If the updated program is currently selected, update selectedProgram as well\n        if (state.selectedProgram && state.selectedProgram.id === updatedProgram.id) {\n          updatedState.selectedProgram = updatedState[updatedProgram.id];\n        }\n        console.log('Updated state after UPDATE_PROGRAM_SUCCESS:', updatedState);\n        return updatedState;\n      }\n    case 'DELETE_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!programId) {\n          console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n          return state;\n        }\n        const newPrograms = {\n          ...state.programs\n        };\n        delete newPrograms[programId];\n        const newState = {\n          ...state,\n          programs: newPrograms\n        };\n        return newState;\n      }\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["initialState","programReducer","state","programs","action","type","console","log","payload","newState","selectedProgram","id","name","program_duration","duration_unit","days_per_week","main_goal","error","updatedState","user_id","existingProgram","updatedProgram","undefined","programId","newPrograms"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["import { initialState } from './initialState';\n\nfunction programReducer(state = initialState.programs, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      console.log('SET_SELECTED_PROGRAM action:', action.payload);\n      const newState = {\n        ...state,\n        selectedProgram: action.payload\n      };\n      console.log('New state after SET_SELECTED_PROGRAM:', newState);\n      return newState;\n\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id], // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n\n      return updatedState;\n\n    case 'UPDATE_PROGRAM': {\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal,\n        user_id\n      } = action.payload;\n\n      const existingProgram = state[id];\n      if (!existingProgram) {\n        console.error('Program not found:', id);\n        return state;\n      }\n\n      const updatedProgram = {\n        ...existingProgram,\n        ...(name !== undefined && { name }),\n        ...(program_duration !== undefined && { program_duration }),\n        ...(duration_unit !== undefined && { duration_unit }),\n        ...(days_per_week !== undefined && { days_per_week }),\n        ...(main_goal !== undefined && { main_goal }),\n        ...(user_id !== undefined && { user_id })\n      };\n\n      const updatedState = {\n        ...state,\n        [id]: updatedProgram\n      };\n\n      console.log('Updated program:', updatedState[id]);\n      return updatedState;\n    }\n\n    case 'UPDATE_PROGRAM_SUCCESS': {\n      const updatedProgram = action.payload;\n      console.log('Updating program in reducer:', updatedProgram);\n\n      const existingProgram = state[updatedProgram.id];\n\n      const updatedState = {\n        ...state,\n        [updatedProgram.id]: {\n          ...existingProgram, // Spread existing program details if it exists\n          ...updatedProgram // Spread all updated fields from the payload\n        }\n      };\n\n      // If the updated program is currently selected, update selectedProgram as well\n      if (\n        state.selectedProgram &&\n        state.selectedProgram.id === updatedProgram.id\n      ) {\n        updatedState.selectedProgram = updatedState[updatedProgram.id];\n      }\n\n      console.log('Updated state after UPDATE_PROGRAM_SUCCESS:', updatedState);\n      return updatedState;\n    }\n\n    case 'DELETE_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!programId) {\n        console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n        return state;\n      }\n\n      const newPrograms = { ...state.programs };\n      delete newPrograms[programId];\n\n      const newState = {\n        ...state,\n        programs: newPrograms\n      };\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}