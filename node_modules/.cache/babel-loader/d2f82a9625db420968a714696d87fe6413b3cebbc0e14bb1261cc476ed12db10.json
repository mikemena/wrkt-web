{"ast":null,"code":"import { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\nimport { standardizeWorkout } from '../utils/standardizeWorkout';\nfunction workoutReducer(state = initialState.workouts, action) {\n  console.log('Action Type:', action.type);\n  console.log('State Before:', state);\n  console.log('Action Payload:', action.payload);\n  switch (action.type) {\n    case actionTypes.ADD_WORKOUT:\n      console.log('Adding workout in reducer:', action.payload);\n      return {\n        ...state,\n        [action.payload.id]: standardizeWorkout(action.payload)\n      };\n    case actionTypes.UPDATE_WORKOUT:\n      console.log('Updating workout in reducer:', action.payload);\n      return {\n        ...state,\n        [action.payload.id]: standardizeWorkout(action.payload)\n      };\n    case actionTypes.ADD_EXERCISE:\n      const {\n        workoutId,\n        exercises\n      } = action.payload;\n      console.log('Adding exercise in reducer:', action.payload);\n      return {\n        ...state,\n        [workoutId]: {\n          ...state[workoutId],\n          exercises: [...state[workoutId].exercises, ...exercises]\n        }\n      };\n    case actionTypes.ADD_SET:\n      const {\n        exerciseId,\n        weight,\n        reps\n      } = action.payload;\n      const workout = state[workoutId];\n      if (!workout) return state;\n      const updatedExercises = workout.exercises.map(exercise => {\n        if (exercise.id === exerciseId) {\n          return {\n            ...exercise,\n            sets: [...exercise.sets, {\n              id: Date.now().toString(),\n              weight,\n              reps,\n              order: exercise.sets.length + 1\n            }]\n          };\n        }\n        return exercise;\n      });\n      return {\n        ...state,\n        [workoutId]: {\n          ...workout,\n          exercises: updatedExercises\n        }\n      };\n    default:\n      return state;\n  }\n}\nexport { workoutReducer };","map":{"version":3,"names":["actionTypes","initialState","standardizeWorkout","workoutReducer","state","workouts","action","console","log","type","payload","ADD_WORKOUT","id","UPDATE_WORKOUT","ADD_EXERCISE","workoutId","exercises","ADD_SET","exerciseId","weight","reps","workout","updatedExercises","map","exercise","sets","Date","now","toString","order","length"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/workoutReducer.js"],"sourcesContent":["import { actionTypes } from '../actions/actionTypes';\nimport { initialState } from './initialState';\nimport { standardizeWorkout } from '../utils/standardizeWorkout';\n\nfunction workoutReducer(state = initialState.workouts, action) {\n  console.log('Action Type:', action.type);\n  console.log('State Before:', state);\n  console.log('Action Payload:', action.payload);\n\n  switch (action.type) {\n    case actionTypes.ADD_WORKOUT:\n      console.log('Adding workout in reducer:', action.payload);\n      return {\n        ...state,\n        [action.payload.id]: standardizeWorkout(action.payload)\n      };\n\n    case actionTypes.UPDATE_WORKOUT:\n      console.log('Updating workout in reducer:', action.payload);\n      return {\n        ...state,\n        [action.payload.id]: standardizeWorkout(action.payload)\n      };\n\n    case actionTypes.ADD_EXERCISE:\n      const { workoutId, exercises } = action.payload;\n      console.log('Adding exercise in reducer:', action.payload);\n      return {\n        ...state,\n        [workoutId]: {\n          ...state[workoutId],\n          exercises: [...state[workoutId].exercises, ...exercises]\n        }\n      };\n\n    case actionTypes.ADD_SET:\n      const { exerciseId, weight, reps } = action.payload;\n      const workout = state[workoutId];\n      if (!workout) return state;\n\n      const updatedExercises = workout.exercises.map(exercise => {\n        if (exercise.id === exerciseId) {\n          return {\n            ...exercise,\n            sets: [\n              ...exercise.sets,\n              {\n                id: Date.now().toString(),\n                weight,\n                reps,\n                order: exercise.sets.length + 1\n              }\n            ]\n          };\n        }\n        return exercise;\n      });\n\n      return {\n        ...state,\n        [workoutId]: {\n          ...workout,\n          exercises: updatedExercises\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { workoutReducer };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,kBAAkB,QAAQ,6BAA6B;AAEhE,SAASC,cAAcA,CAACC,KAAK,GAAGH,YAAY,CAACI,QAAQ,EAAEC,MAAM,EAAE;EAC7DC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,MAAM,CAACG,IAAI,CAAC;EACxCF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,KAAK,CAAC;EACnCG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,MAAM,CAACI,OAAO,CAAC;EAE9C,QAAQJ,MAAM,CAACG,IAAI;IACjB,KAAKT,WAAW,CAACW,WAAW;MAC1BJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAACI,OAAO,CAAC;MACzD,OAAO;QACL,GAAGN,KAAK;QACR,CAACE,MAAM,CAACI,OAAO,CAACE,EAAE,GAAGV,kBAAkB,CAACI,MAAM,CAACI,OAAO;MACxD,CAAC;IAEH,KAAKV,WAAW,CAACa,cAAc;MAC7BN,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,MAAM,CAACI,OAAO,CAAC;MAC3D,OAAO;QACL,GAAGN,KAAK;QACR,CAACE,MAAM,CAACI,OAAO,CAACE,EAAE,GAAGV,kBAAkB,CAACI,MAAM,CAACI,OAAO;MACxD,CAAC;IAEH,KAAKV,WAAW,CAACc,YAAY;MAC3B,MAAM;QAAEC,SAAS;QAAEC;MAAU,CAAC,GAAGV,MAAM,CAACI,OAAO;MAC/CH,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,MAAM,CAACI,OAAO,CAAC;MAC1D,OAAO;QACL,GAAGN,KAAK;QACR,CAACW,SAAS,GAAG;UACX,GAAGX,KAAK,CAACW,SAAS,CAAC;UACnBC,SAAS,EAAE,CAAC,GAAGZ,KAAK,CAACW,SAAS,CAAC,CAACC,SAAS,EAAE,GAAGA,SAAS;QACzD;MACF,CAAC;IAEH,KAAKhB,WAAW,CAACiB,OAAO;MACtB,MAAM;QAAEC,UAAU;QAAEC,MAAM;QAAEC;MAAK,CAAC,GAAGd,MAAM,CAACI,OAAO;MACnD,MAAMW,OAAO,GAAGjB,KAAK,CAACW,SAAS,CAAC;MAChC,IAAI,CAACM,OAAO,EAAE,OAAOjB,KAAK;MAE1B,MAAMkB,gBAAgB,GAAGD,OAAO,CAACL,SAAS,CAACO,GAAG,CAACC,QAAQ,IAAI;QACzD,IAAIA,QAAQ,CAACZ,EAAE,KAAKM,UAAU,EAAE;UAC9B,OAAO;YACL,GAAGM,QAAQ;YACXC,IAAI,EAAE,CACJ,GAAGD,QAAQ,CAACC,IAAI,EAChB;cACEb,EAAE,EAAEc,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;cACzBT,MAAM;cACNC,IAAI;cACJS,KAAK,EAAEL,QAAQ,CAACC,IAAI,CAACK,MAAM,GAAG;YAChC,CAAC;UAEL,CAAC;QACH;QACA,OAAON,QAAQ;MACjB,CAAC,CAAC;MAEF,OAAO;QACL,GAAGpB,KAAK;QACR,CAACW,SAAS,GAAG;UACX,GAAGM,OAAO;UACVL,SAAS,EAAEM;QACb;MACF,CAAC;IAEH;MACE,OAAOlB,KAAK;EAChB;AACF;AAEA,SAASD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}