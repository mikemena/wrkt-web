{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/ExerciseFilters/ExerciseFilters.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const options = ['Option 1', 'Option 2', 'Option 3'];\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionClick = option => {\n    // Do something with the selected option\n    console.log(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      children: \"Dropdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-menu\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleOptionClick(option),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dropdown","_s","isOpen","setIsOpen","options","toggleDropdown","handleOptionClick","option","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/ExerciseFilters/ExerciseFilters.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Dropdown = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const options = ['Option 1', 'Option 2', 'Option 3'];\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = option => {\n    // Do something with the selected option\n    console.log(option);\n  };\n\n  return (\n    <div className='dropdown'>\n      <button onClick={toggleDropdown}>Dropdown</button>\n      {isOpen && (\n        <ul className='dropdown-menu'>\n          {options.map(option => (\n            <li key={option} onClick={() => handleOptionClick(option)}>\n              {option}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMO,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;EAEpD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BF,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMI,iBAAiB,GAAGC,MAAM,IAAI;IAClC;IACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACrB,CAAC;EAED,oBACER,OAAA;IAAKW,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBZ,OAAA;MAAQa,OAAO,EAAEP,cAAe;MAAAM,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDd,MAAM,iBACLH,OAAA;MAAIW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1BP,OAAO,CAACa,GAAG,CAACV,MAAM,iBACjBR,OAAA;QAAiBa,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAACC,MAAM,CAAE;QAAAI,QAAA,EACvDJ;MAAM,GADAA,MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BID,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}