{"ast":null,"code":"import { initialState } from './initialState';\nfunction programReducer(state = initialState.programs, action) {\n  switch (action.type) {\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n      if (!state.program || state.program.id !== id && state.program.tempId !== id) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n      const updatedProgram = {\n        ...state.program,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      };\n      return {\n        ...state,\n        program: updatedProgram\n      };\n    case 'UPDATE_PROGRAM':\n      {\n        const updatedProgram = action.payload;\n        console.log('Updating program in reducer:', updatedProgram);\n        return {\n          ...state,\n          program: {\n            ...state.program,\n            // Spread the existing program details to preserve other fields like workouts\n            ...updatedProgram // Overwrite with the updated program details\n          }\n        };\n      }\n    case 'UPDATE_PROGRAM_SUCCESS':\n      {\n        const updatedProgram = action.payload;\n        console.log('Updating program in reducer:', updatedProgram);\n        if (!updatedProgram || !updatedProgram.id) {\n          console.error('Invalid program data received:', updatedProgram);\n          return state;\n        }\n        const updatedState = {\n          ...state,\n          [updatedProgram.id]: updatedProgram,\n          selectedProgram: updatedProgram\n        };\n        console.log('Updated state after UPDATE_PROGRAM_SUCCESS:', updatedState);\n        return updatedState;\n      }\n    case 'DELETE_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!programId) {\n          console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n          return state;\n        }\n        const newPrograms = {\n          ...state.programs\n        };\n        delete newPrograms[programId];\n        const newState = {\n          ...state,\n          programs: newPrograms\n        };\n        return newState;\n      }\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["initialState","programReducer","state","programs","action","type","id","name","program_duration","duration_unit","days_per_week","main_goal","payload","program","tempId","console","error","updatedProgram","log","updatedState","selectedProgram","programId","newPrograms","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["import { initialState } from './initialState';\n\nfunction programReducer(state = initialState.programs, action) {\n  switch (action.type) {\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n\n      if (\n        !state.program ||\n        (state.program.id !== id && state.program.tempId !== id)\n      ) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n\n      const updatedProgram = {\n        ...state.program,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      };\n\n      return {\n        ...state,\n        program: updatedProgram\n      };\n\n    case 'UPDATE_PROGRAM': {\n      const updatedProgram = action.payload;\n      console.log('Updating program in reducer:', updatedProgram);\n\n      return {\n        ...state,\n        program: {\n          ...state.program, // Spread the existing program details to preserve other fields like workouts\n          ...updatedProgram // Overwrite with the updated program details\n        }\n      };\n    }\n\n    case 'UPDATE_PROGRAM_SUCCESS': {\n      const updatedProgram = action.payload;\n      console.log('Updating program in reducer:', updatedProgram);\n\n      if (!updatedProgram || !updatedProgram.id) {\n        console.error('Invalid program data received:', updatedProgram);\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        [updatedProgram.id]: updatedProgram,\n        selectedProgram: updatedProgram\n      };\n\n      console.log('Updated state after UPDATE_PROGRAM_SUCCESS:', updatedState);\n      return updatedState;\n    }\n\n    case 'DELETE_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!programId) {\n        console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n        return state;\n      }\n\n      const newPrograms = { ...state.programs };\n      delete newPrograms[programId];\n\n      const newState = {\n        ...state,\n        programs: newPrograms\n      };\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C,SAASC,cAAcA,CAACC,KAAK,GAAGF,YAAY,CAACG,QAAQ,EAAEC,MAAM,EAAE;EAC7D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,MAAM;QACJC,EAAE;QACFC,IAAI;QACJC,gBAAgB;QAChBC,aAAa;QACbC,aAAa;QACbC;MACF,CAAC,GAAGP,MAAM,CAACQ,OAAO;MAElB,IACE,CAACV,KAAK,CAACW,OAAO,IACbX,KAAK,CAACW,OAAO,CAACP,EAAE,KAAKA,EAAE,IAAIJ,KAAK,CAACW,OAAO,CAACC,MAAM,KAAKR,EAAG,EACxD;QACAS,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEV,EAAE,CAAC;QACvC,OAAOJ,KAAK,CAAC,CAAC;MAChB;MAEA,MAAMe,cAAc,GAAG;QACrB,GAAGf,KAAK,CAACW,OAAO;QAChBN,IAAI;QACJC,gBAAgB;QAChBC,aAAa;QACbC,aAAa;QACbC;MACF,CAAC;MAED,OAAO;QACL,GAAGT,KAAK;QACRW,OAAO,EAAEI;MACX,CAAC;IAEH,KAAK,gBAAgB;MAAE;QACrB,MAAMA,cAAc,GAAGb,MAAM,CAACQ,OAAO;QACrCG,OAAO,CAACG,GAAG,CAAC,8BAA8B,EAAED,cAAc,CAAC;QAE3D,OAAO;UACL,GAAGf,KAAK;UACRW,OAAO,EAAE;YACP,GAAGX,KAAK,CAACW,OAAO;YAAE;YAClB,GAAGI,cAAc,CAAC;UACpB;QACF,CAAC;MACH;IAEA,KAAK,wBAAwB;MAAE;QAC7B,MAAMA,cAAc,GAAGb,MAAM,CAACQ,OAAO;QACrCG,OAAO,CAACG,GAAG,CAAC,8BAA8B,EAAED,cAAc,CAAC;QAE3D,IAAI,CAACA,cAAc,IAAI,CAACA,cAAc,CAACX,EAAE,EAAE;UACzCS,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEC,cAAc,CAAC;UAC/D,OAAOf,KAAK;QACd;QAEA,MAAMiB,YAAY,GAAG;UACnB,GAAGjB,KAAK;UACR,CAACe,cAAc,CAACX,EAAE,GAAGW,cAAc;UACnCG,eAAe,EAAEH;QACnB,CAAC;QAEDF,OAAO,CAACG,GAAG,CAAC,6CAA6C,EAAEC,YAAY,CAAC;QACxE,OAAOA,YAAY;MACrB;IAEA,KAAK,gBAAgB;MAAE;QACrB,MAAM;UAAEE;QAAU,CAAC,GAAGjB,MAAM,CAACQ,OAAO;QAEpC,IAAI,CAACS,SAAS,EAAE;UACdN,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEZ,MAAM,CAACQ,OAAO,CAAC;UACnE,OAAOV,KAAK;QACd;QAEA,MAAMoB,WAAW,GAAG;UAAE,GAAGpB,KAAK,CAACC;QAAS,CAAC;QACzC,OAAOmB,WAAW,CAACD,SAAS,CAAC;QAE7B,MAAME,QAAQ,GAAG;UACf,GAAGrB,KAAK;UACRC,QAAQ,EAAEmB;QACZ,CAAC;QAED,OAAOC,QAAQ;MACjB;IAEA;MACE,OAAOrB,KAAK;EAChB;AACF;AAEA,SAASD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}