{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SearchBar from '../../../components/SearchBar/SearchBar';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport Exercise from '../../../components/Exercise/Exercise';\nimport ExerciseFilters from '../../../components/ExerciseFilters/ExerciseFilters';\nimport useFetchData from '../../../hooks/useFetchData';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './program.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateProgram = () => {\n  _s();\n  const [program, setProgram] = useState({\n    programName: '',\n    programDuration: '',\n    daysPerWeek: '',\n    dayType: '',\n    programGoal: '',\n    workouts: [],\n    selectedExercises: []\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedMuscle, setSelectedMuscle] = useState('');\n  const [selectedEquipment, setSelectedEquipment] = useState('');\n  const [state, setState] = useState();\n  const [days, setDays] = useState([{\n    id: 1,\n    name: 'Monday'\n  }, {\n    id: 2,\n    name: 'Tuesday'\n  }, {\n    id: 3,\n    name: 'Wednesday'\n  }, {\n    id: 4,\n    name: 'Thursday'\n  }, {\n    id: 5,\n    name: 'Friday'\n  }, {\n    id: 6,\n    name: 'Saturday'\n  }, {\n    id: 7,\n    name: 'Sunday'\n  }]);\n  const navigate = useNavigate();\n  const {\n    data: exercises,\n    isLoading,\n    error\n  } = useFetchData('http://localhost:9025/api/exercise-catalog');\n  const filteredExercises = useMemo(() => {\n    return exercises.filter(exercise => {\n      const matchesMuscle = !selectedMuscle || selectedMuscle === 'All' || exercise.muscle === selectedMuscle;\n      const matchesEquipment = !selectedEquipment || selectedEquipment === 'All' || exercise.equipment === selectedEquipment;\n      const matchesSearchTerm = !searchTerm || exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n      return matchesMuscle && matchesEquipment && matchesSearchTerm;\n    });\n  }, [searchTerm, selectedMuscle, selectedEquipment, exercises]);\n  const handleSearch = value => {\n    setSearchTerm(value);\n  };\n  const handleMuscleChange = value => {\n    setSelectedMuscle(value);\n  };\n  const handleEquipmentChange = value => {\n    setSelectedEquipment(value);\n  };\n  const handleDayChange = selectedDay => {\n    setDays(prevWorkout => ({\n      ...prevWorkout,\n      day: selectedDay\n    }));\n  };\n  const handleDayTypeChange = selectedDayType => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      dayType: selectedDayType\n    }));\n  };\n  const handleProgramGoalChange = selectedProgramGoal => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programGoal: selectedProgramGoal\n    }));\n  };\n  const handleDaysPerWeekChange = selectedDaysPerWeek => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      daysPerWeek: selectedDaysPerWeek\n    }));\n  };\n  const handleDurationChange = selectedDuration => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programDuration: selectedDuration\n    }));\n  };\n  const addDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1; // Ensure unique ID\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}` // Customize the naming as needed\n    };\n    setDays([...days, newDay]);\n  };\n  const removeDay = dayId => {\n    setDays(days.filter(day => day.id !== dayId));\n    const handleSaveProgram = async event => {\n      event.preventDefault();\n      const programData = {\n        user_id: 2,\n        // hardcoded for now, but should be the logged in user's ID\n        name: program.programName,\n        program_duration: program.programDuration,\n        days_per_week: program.daysPerWeek,\n        day_type: program.dayType,\n        main_goal: program.mainGoal,\n        workouts: program.workouts.map(workout => ({\n          name: workout.name,\n          order: workout.order,\n          exercises: workout.exercises.map(exercise => ({\n            catalog_exercise_id: exercise.catalog_exercise_id,\n            order: exercise.order,\n            sets: exercise.sets.map(set => ({\n              reps: set.reps,\n              weight: set.weight,\n              order: set.order\n            }))\n          }))\n        }))\n      };\n      try {\n        const response = await fetch('http://localhost:9025/api/programs', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(programData)\n        });\n        if (!response.ok) {\n          throw new Error('Something went wrong with saving the program');\n        }\n\n        // Assuming the backend responds with the created template, you could use it here if needed\n        // const savedTemplate = await response.json();\n\n        // After saving, redirect back to the WorkoutPage\n        navigate('/programs');\n      } catch (error) {\n        console.error('Failed to save the program:', error);\n        // Here, you could set an error state and display it to the user if you wish\n      }\n    };\n    const handleCancel = () => {\n      // Redirect to the create workout page\n      navigate('/workouts');\n    };\n    const handleSelectExercise = exercise => {\n      setProgram(prevWorkout => {\n        const existingIndex = prevWorkout.selectedExercises.findIndex(ex => ex.exercise_id === exercise.exercise_id);\n        let newSelectedExercises;\n        if (existingIndex >= 0) {\n          // Exercise is already selected, remove it\n          newSelectedExercises = prevWorkout.selectedExercises.filter((_, index) => index !== existingIndex);\n        } else {\n          // Exercise is not selected, add it\n          newSelectedExercises = [...prevWorkout.selectedExercises, exercise];\n        }\n        return {\n          ...prevWorkout,\n          selectedExercises: newSelectedExercises\n        };\n      });\n    };\n    if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 27\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error loading exercises: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }, this);\n    const dayTypes = ['Day of Week', 'Numerical'];\n    const durations = ['Days', 'Weeks', 'Months'];\n    const goals = ['Strength', 'Endurance', 'Hypertrophy', 'Weight Loss'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Create New Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSaveProgram,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"full-width-input\",\n              placeholder: \"Enter Program Name\",\n              value: program.name,\n              onChange: e => setProgram(prevWorkout => ({\n                ...prevWorkout,\n                programName: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"program-detail-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"program-detail\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"day-type\",\n                onChange: e => handleDayTypeChange(e.target.value),\n                placeholder: \"Select Day Type\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Day Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this), dayTypes.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"program-detail\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-container\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"full-width-input\",\n                  placeholder: \"Enter Duration Amount\",\n                  value: program.duration_amount,\n                  onChange: e => setProgram(prevWorkout => ({\n                    ...prevWorkout,\n                    duration_amount: e.target.value\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"durations\",\n                onChange: e => handleDurationChange(e.target.value),\n                placeholder: \"Select Duration\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Duration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this), durations.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"days-per-week\",\n                placeholder: \"Enter Days Per Week\",\n                value: program.daysPerWeek,\n                onChange: e => handleDaysPerWeekChange(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"program-detail\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"program_goal\",\n                onChange: e => handleProgramGoalChange(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Program Goal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this), goals.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addDay,\n          children: \"Add Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DayContainer, {\n            day: day.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeDay(day.id),\n            children: [\"Remove \", day.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, day.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"save-program-button\",\n            onClick: handleSaveProgram,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"cancel-program-button\",\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(CreateProgram, \"JuKcF2bbriMUdfZpaxMoHsvSbTc=\", false, function () {\n  return [useNavigate, useFetchData];\n});\n_c = CreateProgram;\nexport default CreateProgram;\nvar _c;\n$RefreshReg$(_c, \"CreateProgram\");","map":{"version":3,"names":["React","useState","useMemo","useCallback","useNavigate","SearchBar","DayContainer","Exercise","ExerciseFilters","useFetchData","DragDropContext","jsxDEV","_jsxDEV","CreateProgram","_s","program","setProgram","programName","programDuration","daysPerWeek","dayType","programGoal","workouts","selectedExercises","searchTerm","setSearchTerm","selectedMuscle","setSelectedMuscle","selectedEquipment","setSelectedEquipment","state","setState","days","setDays","id","name","navigate","data","exercises","isLoading","error","filteredExercises","filter","exercise","matchesMuscle","muscle","matchesEquipment","equipment","matchesSearchTerm","toLowerCase","includes","handleSearch","value","handleMuscleChange","handleEquipmentChange","handleDayChange","selectedDay","prevWorkout","day","handleDayTypeChange","selectedDayType","handleProgramGoalChange","selectedProgramGoal","handleDaysPerWeekChange","selectedDaysPerWeek","handleDurationChange","selectedDuration","addDay","newDayId","length","newDay","removeDay","dayId","handleSaveProgram","event","preventDefault","programData","user_id","program_duration","days_per_week","day_type","main_goal","mainGoal","map","workout","order","catalog_exercise_id","sets","set","reps","weight","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","handleCancel","handleSelectExercise","existingIndex","findIndex","ex","exercise_id","newSelectedExercises","_","index","children","fileName","_jsxFileName","lineNumber","columnNumber","dayTypes","durations","goals","className","onSubmit","type","placeholder","onChange","e","target","option","duration_amount","onClick","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js"],"sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SearchBar from '../../../components/SearchBar/SearchBar';\nimport DayContainer from '../../../components/DayContainer/DayContainer';\nimport Exercise from '../../../components/Exercise/Exercise';\nimport ExerciseFilters from '../../../components/ExerciseFilters/ExerciseFilters';\nimport useFetchData from '../../../hooks/useFetchData';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport './program.css';\n\nconst CreateProgram = () => {\n  const [program, setProgram] = useState({\n    programName: '',\n    programDuration: '',\n    daysPerWeek: '',\n    dayType: '',\n    programGoal: '',\n    workouts: [],\n    selectedExercises: []\n  });\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedMuscle, setSelectedMuscle] = useState('');\n  const [selectedEquipment, setSelectedEquipment] = useState('');\n  const [state, setState] = useState();\n  const [days, setDays] = useState([\n    { id: 1, name: 'Monday' },\n    { id: 2, name: 'Tuesday' },\n    { id: 3, name: 'Wednesday' },\n    { id: 4, name: 'Thursday' },\n    { id: 5, name: 'Friday' },\n    { id: 6, name: 'Saturday' },\n    { id: 7, name: 'Sunday' }\n  ]);\n\n  const navigate = useNavigate();\n\n  const {\n    data: exercises,\n    isLoading,\n    error\n  } = useFetchData('http://localhost:9025/api/exercise-catalog');\n\n  const filteredExercises = useMemo(() => {\n    return exercises.filter(exercise => {\n      const matchesMuscle =\n        !selectedMuscle ||\n        selectedMuscle === 'All' ||\n        exercise.muscle === selectedMuscle;\n      const matchesEquipment =\n        !selectedEquipment ||\n        selectedEquipment === 'All' ||\n        exercise.equipment === selectedEquipment;\n      const matchesSearchTerm =\n        !searchTerm ||\n        exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n      return matchesMuscle && matchesEquipment && matchesSearchTerm;\n    });\n  }, [searchTerm, selectedMuscle, selectedEquipment, exercises]);\n\n  const handleSearch = value => {\n    setSearchTerm(value);\n  };\n\n  const handleMuscleChange = value => {\n    setSelectedMuscle(value);\n  };\n\n  const handleEquipmentChange = value => {\n    setSelectedEquipment(value);\n  };\n\n  const handleDayChange = selectedDay => {\n    setDays(prevWorkout => ({ ...prevWorkout, day: selectedDay }));\n  };\n\n  const handleDayTypeChange = selectedDayType => {\n    setProgram(prevWorkout => ({ ...prevWorkout, dayType: selectedDayType }));\n  };\n\n  const handleProgramGoalChange = selectedProgramGoal => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programGoal: selectedProgramGoal\n    }));\n  };\n\n  const handleDaysPerWeekChange = selectedDaysPerWeek => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      daysPerWeek: selectedDaysPerWeek\n    }));\n  };\n\n  const handleDurationChange = selectedDuration => {\n    setProgram(prevWorkout => ({\n      ...prevWorkout,\n      programDuration: selectedDuration\n    }));\n  };\n\n  const addDay = () => {\n    const newDayId = days.length > 0 ? days[days.length - 1].id + 1 : 1; // Ensure unique ID\n    const newDay = {\n      id: newDayId,\n      name: `Day ${newDayId}` // Customize the naming as needed\n    };\n    setDays([...days, newDay]);\n  };\n\n  const removeDay = dayId => {\n    setDays(days.filter(day => day.id !== dayId));\n\n    const handleSaveProgram = async event => {\n      event.preventDefault();\n\n      const programData = {\n        user_id: 2, // hardcoded for now, but should be the logged in user's ID\n        name: program.programName,\n        program_duration: program.programDuration,\n        days_per_week: program.daysPerWeek,\n        day_type: program.dayType,\n        main_goal: program.mainGoal,\n        workouts: program.workouts.map(workout => ({\n          name: workout.name,\n          order: workout.order,\n          exercises: workout.exercises.map(exercise => ({\n            catalog_exercise_id: exercise.catalog_exercise_id,\n            order: exercise.order,\n            sets: exercise.sets.map(set => ({\n              reps: set.reps,\n              weight: set.weight,\n              order: set.order\n            }))\n          }))\n        }))\n      };\n\n      try {\n        const response = await fetch('http://localhost:9025/api/programs', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(programData)\n        });\n\n        if (!response.ok) {\n          throw new Error('Something went wrong with saving the program');\n        }\n\n        // Assuming the backend responds with the created template, you could use it here if needed\n        // const savedTemplate = await response.json();\n\n        // After saving, redirect back to the WorkoutPage\n        navigate('/programs');\n      } catch (error) {\n        console.error('Failed to save the program:', error);\n        // Here, you could set an error state and display it to the user if you wish\n      }\n    };\n\n    const handleCancel = () => {\n      // Redirect to the create workout page\n      navigate('/workouts');\n    };\n\n    const handleSelectExercise = exercise => {\n      setProgram(prevWorkout => {\n        const existingIndex = prevWorkout.selectedExercises.findIndex(\n          ex => ex.exercise_id === exercise.exercise_id\n        );\n\n        let newSelectedExercises;\n        if (existingIndex >= 0) {\n          // Exercise is already selected, remove it\n          newSelectedExercises = prevWorkout.selectedExercises.filter(\n            (_, index) => index !== existingIndex\n          );\n        } else {\n          // Exercise is not selected, add it\n          newSelectedExercises = [...prevWorkout.selectedExercises, exercise];\n        }\n\n        return {\n          ...prevWorkout,\n          selectedExercises: newSelectedExercises\n        };\n      });\n    };\n\n    if (isLoading) return <div>loading...</div>;\n    if (error) return <div>Error loading exercises: {error}</div>;\n\n    const dayTypes = ['Day of Week', 'Numerical'];\n    const durations = ['Days', 'Weeks', 'Months'];\n    const goals = ['Strength', 'Endurance', 'Hypertrophy', 'Weight Loss'];\n\n    return (\n      <div className='page-layout'>\n        <h1 className='page-title'>Create New Program</h1>\n        <form onSubmit={handleSaveProgram}>\n          <div>\n            <div className='input-container'>\n              <input\n                type='text'\n                className='full-width-input'\n                placeholder='Enter Program Name'\n                value={program.name}\n                onChange={e =>\n                  setProgram(prevWorkout => ({\n                    ...prevWorkout,\n                    programName: e.target.value\n                  }))\n                }\n              />\n            </div>\n\n            <div className='program-detail-container'>\n              <div className='program-detail'>\n                <select\n                  id='day-type'\n                  onChange={e => handleDayTypeChange(e.target.value)}\n                  placeholder='Select Day Type'\n                >\n                  <option value=''>Select Day Type</option>\n                  {dayTypes.map((option, index) => (\n                    <option key={index} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className='program-detail'>\n                <div className='input-container'>\n                  <input\n                    type='text'\n                    className='full-width-input'\n                    placeholder='Enter Duration Amount'\n                    value={program.duration_amount}\n                    onChange={e =>\n                      setProgram(prevWorkout => ({\n                        ...prevWorkout,\n                        duration_amount: e.target.value\n                      }))\n                    }\n                  />\n                </div>\n                <select\n                  id='durations'\n                  onChange={e => handleDurationChange(e.target.value)}\n                  placeholder='Select Duration'\n                >\n                  <option value=''>Select Duration</option>\n                  {durations.map((option, index) => (\n                    <option key={index} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className='input-container'>\n                <input\n                  type='text'\n                  id='days-per-week'\n                  placeholder='Enter Days Per Week'\n                  value={program.daysPerWeek}\n                  onChange={e => handleDaysPerWeekChange(e.target.value)}\n                />\n              </div>\n\n              <div className='program-detail'>\n                <select\n                  id='program_goal'\n                  onChange={e => handleProgramGoalChange(e.target.value)}\n                >\n                  <option value=''>Select Program Goal</option>\n                  {goals.map((option, index) => (\n                    <option key={index} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n          <button onClick={addDay}>Add Day</button>\n\n          <div key={day.id}>\n            <DayContainer day={day.name} />\n            <button onClick={() => removeDay(day.id)}>Remove {day.name}</button>\n          </div>\n\n          {/* <SearchBar onChange={handleSearch} />\n          <ExerciseFilters\n            onMuscleChange={handleMuscleChange}\n            onEquipmentChange={handleEquipmentChange}\n          />\n\n          <div className='exercise-container'>\n            {filteredExercises.map(exercise => (\n              <Exercise\n                key={exercise.exercise_id}\n                name={exercise.name}\n                muscle={exercise.muscle}\n                equipment={exercise.equipment}\n                image={`http://localhost:9025/${exercise.file_path}`}\n                isSelectable={true} // Make the exercise selectable in this context\n                isSelected={program.selectedExercises.some(\n                  ex => ex.exercise_id === exercise.exercise_id\n                )}\n                onClick={() => handleSelectExercise(exercise)}\n              />\n            ))}\n          </div> */}\n\n          <div className='button-container'>\n            <button id='save-program-button' onClick={handleSaveProgram}>\n              Save\n            </button>\n            <button id='cancel-program-button' onClick={handleCancel}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  };\n};\n\nexport default CreateProgram;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,yCAAyC;AAC/D,OAAOC,YAAY,MAAM,+CAA+C;AACxE,OAAOC,QAAQ,MAAM,uCAAuC;AAC5D,OAAOC,eAAe,MAAM,qDAAqD;AACjF,OAAOC,YAAY,MAAM,6BAA6B;AACtD,SAASC,eAAe,QAAQ,qBAAqB;AAErD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC;IACrCgB,WAAW,EAAE,EAAE;IACfC,eAAe,EAAE,EAAE;IACnBC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,iBAAiB,EAAE;EACrB,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC2B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,CAAC;EACpC,MAAM,CAAC+B,IAAI,EAAEC,OAAO,CAAC,GAAGhC,QAAQ,CAAC,CAC/B;IAAEiC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC1B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAW,CAAC,EAC3B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAW,CAAC,EAC3B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,CAC1B,CAAC;EAEF,MAAMC,QAAQ,GAAGhC,WAAW,CAAC,CAAC;EAE9B,MAAM;IACJiC,IAAI,EAAEC,SAAS;IACfC,SAAS;IACTC;EACF,CAAC,GAAG/B,YAAY,CAAC,4CAA4C,CAAC;EAE9D,MAAMgC,iBAAiB,GAAGvC,OAAO,CAAC,MAAM;IACtC,OAAOoC,SAAS,CAACI,MAAM,CAACC,QAAQ,IAAI;MAClC,MAAMC,aAAa,GACjB,CAAClB,cAAc,IACfA,cAAc,KAAK,KAAK,IACxBiB,QAAQ,CAACE,MAAM,KAAKnB,cAAc;MACpC,MAAMoB,gBAAgB,GACpB,CAAClB,iBAAiB,IAClBA,iBAAiB,KAAK,KAAK,IAC3Be,QAAQ,CAACI,SAAS,KAAKnB,iBAAiB;MAC1C,MAAMoB,iBAAiB,GACrB,CAACxB,UAAU,IACXmB,QAAQ,CAACR,IAAI,CAACc,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC1B,UAAU,CAACyB,WAAW,CAAC,CAAC,CAAC;MAChE,OAAOL,aAAa,IAAIE,gBAAgB,IAAIE,iBAAiB;IAC/D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACxB,UAAU,EAAEE,cAAc,EAAEE,iBAAiB,EAAEU,SAAS,CAAC,CAAC;EAE9D,MAAMa,YAAY,GAAGC,KAAK,IAAI;IAC5B3B,aAAa,CAAC2B,KAAK,CAAC;EACtB,CAAC;EAED,MAAMC,kBAAkB,GAAGD,KAAK,IAAI;IAClCzB,iBAAiB,CAACyB,KAAK,CAAC;EAC1B,CAAC;EAED,MAAME,qBAAqB,GAAGF,KAAK,IAAI;IACrCvB,oBAAoB,CAACuB,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMG,eAAe,GAAGC,WAAW,IAAI;IACrCvB,OAAO,CAACwB,WAAW,KAAK;MAAE,GAAGA,WAAW;MAAEC,GAAG,EAAEF;IAAY,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,MAAMG,mBAAmB,GAAGC,eAAe,IAAI;IAC7C5C,UAAU,CAACyC,WAAW,KAAK;MAAE,GAAGA,WAAW;MAAErC,OAAO,EAAEwC;IAAgB,CAAC,CAAC,CAAC;EAC3E,CAAC;EAED,MAAMC,uBAAuB,GAAGC,mBAAmB,IAAI;IACrD9C,UAAU,CAACyC,WAAW,KAAK;MACzB,GAAGA,WAAW;MACdpC,WAAW,EAAEyC;IACf,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,uBAAuB,GAAGC,mBAAmB,IAAI;IACrDhD,UAAU,CAACyC,WAAW,KAAK;MACzB,GAAGA,WAAW;MACdtC,WAAW,EAAE6C;IACf,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,oBAAoB,GAAGC,gBAAgB,IAAI;IAC/ClD,UAAU,CAACyC,WAAW,KAAK;MACzB,GAAGA,WAAW;MACdvC,eAAe,EAAEgD;IACnB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB,MAAMC,QAAQ,GAAGpC,IAAI,CAACqC,MAAM,GAAG,CAAC,GAAGrC,IAAI,CAACA,IAAI,CAACqC,MAAM,GAAG,CAAC,CAAC,CAACnC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,MAAMoC,MAAM,GAAG;MACbpC,EAAE,EAAEkC,QAAQ;MACZjC,IAAI,EAAG,OAAMiC,QAAS,EAAC,CAAC;IAC1B,CAAC;IACDnC,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEsC,MAAM,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,SAAS,GAAGC,KAAK,IAAI;IACzBvC,OAAO,CAACD,IAAI,CAACU,MAAM,CAACgB,GAAG,IAAIA,GAAG,CAACxB,EAAE,KAAKsC,KAAK,CAAC,CAAC;IAE7C,MAAMC,iBAAiB,GAAG,MAAMC,KAAK,IAAI;MACvCA,KAAK,CAACC,cAAc,CAAC,CAAC;MAEtB,MAAMC,WAAW,GAAG;QAClBC,OAAO,EAAE,CAAC;QAAE;QACZ1C,IAAI,EAAEpB,OAAO,CAACE,WAAW;QACzB6D,gBAAgB,EAAE/D,OAAO,CAACG,eAAe;QACzC6D,aAAa,EAAEhE,OAAO,CAACI,WAAW;QAClC6D,QAAQ,EAAEjE,OAAO,CAACK,OAAO;QACzB6D,SAAS,EAAElE,OAAO,CAACmE,QAAQ;QAC3B5D,QAAQ,EAAEP,OAAO,CAACO,QAAQ,CAAC6D,GAAG,CAACC,OAAO,KAAK;UACzCjD,IAAI,EAAEiD,OAAO,CAACjD,IAAI;UAClBkD,KAAK,EAAED,OAAO,CAACC,KAAK;UACpB/C,SAAS,EAAE8C,OAAO,CAAC9C,SAAS,CAAC6C,GAAG,CAACxC,QAAQ,KAAK;YAC5C2C,mBAAmB,EAAE3C,QAAQ,CAAC2C,mBAAmB;YACjDD,KAAK,EAAE1C,QAAQ,CAAC0C,KAAK;YACrBE,IAAI,EAAE5C,QAAQ,CAAC4C,IAAI,CAACJ,GAAG,CAACK,GAAG,KAAK;cAC9BC,IAAI,EAAED,GAAG,CAACC,IAAI;cACdC,MAAM,EAAEF,GAAG,CAACE,MAAM;cAClBL,KAAK,EAAEG,GAAG,CAACH;YACb,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC;MAED,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACrB,WAAW;QAClC,CAAC,CAAC;QAEF,IAAI,CAACe,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;QACjE;;QAEA;QACA;;QAEA;QACA/D,QAAQ,CAAC,WAAW,CAAC;MACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACd4D,OAAO,CAAC5D,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD;MACF;IACF,CAAC;IAED,MAAM6D,YAAY,GAAGA,CAAA,KAAM;MACzB;MACAjE,QAAQ,CAAC,WAAW,CAAC;IACvB,CAAC;IAED,MAAMkE,oBAAoB,GAAG3D,QAAQ,IAAI;MACvC3B,UAAU,CAACyC,WAAW,IAAI;QACxB,MAAM8C,aAAa,GAAG9C,WAAW,CAAClC,iBAAiB,CAACiF,SAAS,CAC3DC,EAAE,IAAIA,EAAE,CAACC,WAAW,KAAK/D,QAAQ,CAAC+D,WACpC,CAAC;QAED,IAAIC,oBAAoB;QACxB,IAAIJ,aAAa,IAAI,CAAC,EAAE;UACtB;UACAI,oBAAoB,GAAGlD,WAAW,CAAClC,iBAAiB,CAACmB,MAAM,CACzD,CAACkE,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKN,aAC1B,CAAC;QACH,CAAC,MAAM;UACL;UACAI,oBAAoB,GAAG,CAAC,GAAGlD,WAAW,CAAClC,iBAAiB,EAAEoB,QAAQ,CAAC;QACrE;QAEA,OAAO;UACL,GAAGc,WAAW;UACdlC,iBAAiB,EAAEoF;QACrB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAED,IAAIpE,SAAS,EAAE,oBAAO3B,OAAA;MAAAkG,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;IAC3C,IAAI1E,KAAK,EAAE,oBAAO5B,OAAA;MAAAkG,QAAA,GAAK,2BAAyB,EAACtE,KAAK;IAAA;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;IAE7D,MAAMC,QAAQ,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC;IAC7C,MAAMC,SAAS,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;IAC7C,MAAMC,KAAK,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC;IAErE,oBACEzG,OAAA;MAAK0G,SAAS,EAAC,aAAa;MAAAR,QAAA,gBAC1BlG,OAAA;QAAI0G,SAAS,EAAC,YAAY;QAAAR,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDtG,OAAA;QAAM2G,QAAQ,EAAE9C,iBAAkB;QAAAqC,QAAA,gBAChClG,OAAA;UAAAkG,QAAA,gBACElG,OAAA;YAAK0G,SAAS,EAAC,iBAAiB;YAAAR,QAAA,eAC9BlG,OAAA;cACE4G,IAAI,EAAC,MAAM;cACXF,SAAS,EAAC,kBAAkB;cAC5BG,WAAW,EAAC,oBAAoB;cAChCrE,KAAK,EAAErC,OAAO,CAACoB,IAAK;cACpBuF,QAAQ,EAAEC,CAAC,IACT3G,UAAU,CAACyC,WAAW,KAAK;gBACzB,GAAGA,WAAW;gBACdxC,WAAW,EAAE0G,CAAC,CAACC,MAAM,CAACxE;cACxB,CAAC,CAAC;YACH;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENtG,OAAA;YAAK0G,SAAS,EAAC,0BAA0B;YAAAR,QAAA,gBACvClG,OAAA;cAAK0G,SAAS,EAAC,gBAAgB;cAAAR,QAAA,eAC7BlG,OAAA;gBACEsB,EAAE,EAAC,UAAU;gBACbwF,QAAQ,EAAEC,CAAC,IAAIhE,mBAAmB,CAACgE,CAAC,CAACC,MAAM,CAACxE,KAAK,CAAE;gBACnDqE,WAAW,EAAC,iBAAiB;gBAAAX,QAAA,gBAE7BlG,OAAA;kBAAQwC,KAAK,EAAC,EAAE;kBAAA0D,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACxCC,QAAQ,CAAChC,GAAG,CAAC,CAAC0C,MAAM,EAAEhB,KAAK,kBAC1BjG,OAAA;kBAAoBwC,KAAK,EAAEyE,MAAO;kBAAAf,QAAA,EAC/Be;gBAAM,GADIhB,KAAK;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEV,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eACNtG,OAAA;cAAK0G,SAAS,EAAC,gBAAgB;cAAAR,QAAA,gBAC7BlG,OAAA;gBAAK0G,SAAS,EAAC,iBAAiB;gBAAAR,QAAA,eAC9BlG,OAAA;kBACE4G,IAAI,EAAC,MAAM;kBACXF,SAAS,EAAC,kBAAkB;kBAC5BG,WAAW,EAAC,uBAAuB;kBACnCrE,KAAK,EAAErC,OAAO,CAAC+G,eAAgB;kBAC/BJ,QAAQ,EAAEC,CAAC,IACT3G,UAAU,CAACyC,WAAW,KAAK;oBACzB,GAAGA,WAAW;oBACdqE,eAAe,EAAEH,CAAC,CAACC,MAAM,CAACxE;kBAC5B,CAAC,CAAC;gBACH;kBAAA2D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACNtG,OAAA;gBACEsB,EAAE,EAAC,WAAW;gBACdwF,QAAQ,EAAEC,CAAC,IAAI1D,oBAAoB,CAAC0D,CAAC,CAACC,MAAM,CAACxE,KAAK,CAAE;gBACpDqE,WAAW,EAAC,iBAAiB;gBAAAX,QAAA,gBAE7BlG,OAAA;kBAAQwC,KAAK,EAAC,EAAE;kBAAA0D,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACxCE,SAAS,CAACjC,GAAG,CAAC,CAAC0C,MAAM,EAAEhB,KAAK,kBAC3BjG,OAAA;kBAAoBwC,KAAK,EAAEyE,MAAO;kBAAAf,QAAA,EAC/Be;gBAAM,GADIhB,KAAK;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEV,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eAENtG,OAAA;cAAK0G,SAAS,EAAC,iBAAiB;cAAAR,QAAA,eAC9BlG,OAAA;gBACE4G,IAAI,EAAC,MAAM;gBACXtF,EAAE,EAAC,eAAe;gBAClBuF,WAAW,EAAC,qBAAqB;gBACjCrE,KAAK,EAAErC,OAAO,CAACI,WAAY;gBAC3BuG,QAAQ,EAAEC,CAAC,IAAI5D,uBAAuB,CAAC4D,CAAC,CAACC,MAAM,CAACxE,KAAK;cAAE;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENtG,OAAA;cAAK0G,SAAS,EAAC,gBAAgB;cAAAR,QAAA,eAC7BlG,OAAA;gBACEsB,EAAE,EAAC,cAAc;gBACjBwF,QAAQ,EAAEC,CAAC,IAAI9D,uBAAuB,CAAC8D,CAAC,CAACC,MAAM,CAACxE,KAAK,CAAE;gBAAA0D,QAAA,gBAEvDlG,OAAA;kBAAQwC,KAAK,EAAC,EAAE;kBAAA0D,QAAA,EAAC;gBAAmB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EAC5CG,KAAK,CAAClC,GAAG,CAAC,CAAC0C,MAAM,EAAEhB,KAAK,kBACvBjG,OAAA;kBAAoBwC,KAAK,EAAEyE,MAAO;kBAAAf,QAAA,EAC/Be;gBAAM,GADIhB,KAAK;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEV,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNtG,OAAA;UAAQmH,OAAO,EAAE5D,MAAO;UAAA2C,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAEzCtG,OAAA;UAAAkG,QAAA,gBACElG,OAAA,CAACN,YAAY;YAACoD,GAAG,EAAEA,GAAG,CAACvB;UAAK;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/BtG,OAAA;YAAQmH,OAAO,EAAEA,CAAA,KAAMxD,SAAS,CAACb,GAAG,CAACxB,EAAE,CAAE;YAAA4E,QAAA,GAAC,SAAO,EAACpD,GAAG,CAACvB,IAAI;UAAA;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA,GAF5DxD,GAAG,CAACxB,EAAE;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGX,CAAC,eAyBNtG,OAAA;UAAK0G,SAAS,EAAC,kBAAkB;UAAAR,QAAA,gBAC/BlG,OAAA;YAAQsB,EAAE,EAAC,qBAAqB;YAAC6F,OAAO,EAAEtD,iBAAkB;YAAAqC,QAAA,EAAC;UAE7D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTtG,OAAA;YAAQsB,EAAE,EAAC,uBAAuB;YAAC6F,OAAO,EAAE1B,YAAa;YAAAS,QAAA,EAAC;UAE1D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEV,CAAC;AACH,CAAC;AAACpG,EAAA,CA/TID,aAAa;EAAA,QAyBAT,WAAW,EAMxBK,YAAY;AAAA;AAAAuH,EAAA,GA/BZnH,aAAa;AAiUnB,eAAeA,aAAa;AAAC,IAAAmH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}