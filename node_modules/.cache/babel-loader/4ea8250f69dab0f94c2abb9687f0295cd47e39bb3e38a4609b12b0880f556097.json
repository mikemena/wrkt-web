{"ast":null,"code":"import { initialState } from './initialState';\nfunction programReducer(state = initialState.program, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      // Unselect all programs first\n      const updatedPrograms = Object.keys(state).reduce((acc, programId) => {\n        acc[programId] = {\n          ...state[programId],\n          selected: false\n        };\n        return acc;\n      }, {});\n      return {\n        ...updatedPrograms,\n        [action.payload]: {\n          ...state[action.payload],\n          selected: true // Select the current program\n        }\n      };\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id],\n          // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n      return updatedState;\n    case 'UPDATE_PROGRAM':\n      {\n        const updatedProgram = action.payload;\n        return {\n          ...state,\n          selectedProgram: updatedProgram,\n          [updatedProgram.id]: updatedProgram\n        };\n      }\n    case 'UPDATE_PROGRAM_SUCCESS':\n      {\n        const updatedProgram = action.payload;\n        if (!updatedProgram || !updatedProgram.id) {\n          console.error('Invalid program data received:', updatedProgram);\n          return state;\n        }\n        const updatedState = {\n          ...state,\n          [updatedProgram.id]: updatedProgram,\n          selectedProgram: updatedProgram\n        };\n        return updatedState;\n      }\n    case 'UPDATE_PROGRAM_WORKOUTS':\n      const {\n        programId,\n        workout\n      } = action.payload;\n      return {\n        ...state,\n        [programId]: {\n          ...state[programId],\n          workouts: state[programId].workouts.map(w => w.id === workout.id ? workout : {\n            ...w,\n            selected: false\n          })\n        }\n      };\n    case 'DELETE_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!programId) {\n          console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n          return state;\n        }\n        const newPrograms = {\n          ...state.programs\n        };\n        delete newPrograms[programId];\n        const newState = {\n          ...state,\n          programs: newPrograms\n        };\n        return newState;\n      }\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["initialState","programReducer","state","program","action","type","updatedPrograms","Object","keys","reduce","acc","programId","selected","payload","id","name","program_duration","duration_unit","days_per_week","main_goal","console","error","updatedState","updatedProgram","selectedProgram","workout","workouts","map","w","newPrograms","programs","newState"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["import { initialState } from './initialState';\n\nfunction programReducer(state = initialState.program, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      // Unselect all programs first\n      const updatedPrograms = Object.keys(state).reduce((acc, programId) => {\n        acc[programId] = {\n          ...state[programId],\n          selected: false\n        };\n        return acc;\n      }, {});\n\n      return {\n        ...updatedPrograms,\n        [action.payload]: {\n          ...state[action.payload],\n          selected: true // Select the current program\n        }\n      };\n\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id], // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n\n      return updatedState;\n\n    case 'UPDATE_PROGRAM': {\n      const updatedProgram = action.payload;\n\n      return {\n        ...state,\n        selectedProgram: updatedProgram,\n        [updatedProgram.id]: updatedProgram\n      };\n    }\n\n    case 'UPDATE_PROGRAM_SUCCESS': {\n      const updatedProgram = action.payload;\n\n      if (!updatedProgram || !updatedProgram.id) {\n        console.error('Invalid program data received:', updatedProgram);\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        [updatedProgram.id]: updatedProgram,\n        selectedProgram: updatedProgram\n      };\n\n      return updatedState;\n    }\n\n    case 'UPDATE_PROGRAM_WORKOUTS':\n      const { programId, workout } = action.payload;\n      return {\n        ...state,\n        [programId]: {\n          ...state[programId],\n          workouts: state[programId].workouts.map(w =>\n            w.id === workout.id ? workout : { ...w, selected: false }\n          )\n        }\n      };\n\n    case 'DELETE_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!programId) {\n        console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n        return state;\n      }\n\n      const newPrograms = { ...state.programs };\n      delete newPrograms[programId];\n\n      const newState = {\n        ...state,\n        programs: newPrograms\n      };\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}