{"ast":null,"code":"import { initialState } from './initialState';\nfunction programReducer(state = initialState, action) {\n  console.log('Action Type:', action.type);\n  console.log('State Before:', state);\n  switch (action.type) {\n    case 'ADD_PROGRAM':\n      console.log('Payload for ADD_PROGRAM:', action.payload);\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n      if (!state.programs[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n      const updatedState = {\n        ...state,\n        programs: {\n          ...state.programs,\n          [id]: {\n            ...state.programs[id],\n            // Spread the existing program details\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal\n          }\n        }\n      };\n      console.log('Reducer updated program state:', updatedState);\n      return updatedState;\n    case 'UPDATE_PROGRAM':\n      {\n        console.log('Payload for UPDATE_PROGRAM:', action.payload);\n        const {\n          id,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        } = action.payload;\n        const existingProgram = state.programs[id];\n        if (!existingProgram) {\n          console.error('Program not found:', id);\n          return state;\n        }\n        const updatedState = {\n          ...state,\n          programs: {\n            ...state.programs,\n            [id]: {\n              ...existingProgram,\n              // Spread the existing program details\n              name,\n              program_duration,\n              duration_unit,\n              days_per_week,\n              main_goal,\n              user_id\n            }\n          }\n        };\n        return updatedState;\n      }\n    case 'UPDATE_PROGRAM_SUCCESS':\n      {\n        const {\n          id,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        } = action.payload;\n        const existingProgram = state.programs[id];\n        if (!existingProgram) {\n          console.error('Program not found:', id);\n          return state;\n        }\n        const updatedState = {\n          ...state,\n          programs: {\n            ...state.programs,\n            [id]: {\n              ...existingProgram,\n              // Spread the existing program details\n              name,\n              program_duration,\n              duration_unit,\n              days_per_week,\n              main_goal,\n              user_id\n            }\n          },\n          currentProgram: {\n            ...existingProgram,\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal,\n            user_id\n          }\n        };\n        return updatedState;\n      }\n    case 'SET_PROGRAM':\n      {\n        const {\n          id,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        } = action.payload;\n        return {\n          ...state,\n          programs: {\n            ...state.programs,\n            [id]: {\n              id,\n              name,\n              program_duration,\n              duration_unit,\n              days_per_week,\n              main_goal,\n              user_id\n            }\n          }\n        };\n      }\n    case 'DELETE_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!programId) {\n          console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n          return state;\n        }\n        const newPrograms = {\n          ...state.programs\n        };\n        delete newPrograms[programId];\n        return {\n          ...state,\n          programs: newPrograms\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["initialState","programReducer","state","action","console","log","type","payload","id","name","program_duration","duration_unit","days_per_week","main_goal","programs","error","updatedState","user_id","existingProgram","currentProgram","programId","newPrograms"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["import { initialState } from './initialState';\n\nfunction programReducer(state = initialState, action) {\n  console.log('Action Type:', action.type);\n  console.log('State Before:', state);\n  switch (action.type) {\n    case 'ADD_PROGRAM':\n      console.log('Payload for ADD_PROGRAM:', action.payload);\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n\n      if (!state.programs[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n\n      const updatedState = {\n        ...state,\n        programs: {\n          ...state.programs,\n          [id]: {\n            ...state.programs[id], // Spread the existing program details\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal\n          }\n        }\n      };\n\n      console.log('Reducer updated program state:', updatedState);\n      return updatedState;\n\n    case 'UPDATE_PROGRAM': {\n      console.log('Payload for UPDATE_PROGRAM:', action.payload);\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal,\n        user_id\n      } = action.payload;\n\n      const existingProgram = state.programs[id];\n      if (!existingProgram) {\n        console.error('Program not found:', id);\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        programs: {\n          ...state.programs,\n          [id]: {\n            ...existingProgram, // Spread the existing program details\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal,\n            user_id\n          }\n        }\n      };\n\n      return updatedState;\n    }\n\n    case 'UPDATE_PROGRAM_SUCCESS': {\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal,\n        user_id\n      } = action.payload;\n\n      const existingProgram = state.programs[id];\n      if (!existingProgram) {\n        console.error('Program not found:', id);\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        programs: {\n          ...state.programs,\n          [id]: {\n            ...existingProgram, // Spread the existing program details\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal,\n            user_id\n          }\n        },\n        currentProgram: {\n          ...existingProgram,\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal,\n          user_id\n        }\n      };\n\n      return updatedState;\n    }\n\n    case 'SET_PROGRAM': {\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal,\n        user_id\n      } = action.payload;\n\n      return {\n        ...state,\n        programs: {\n          ...state.programs,\n          [id]: {\n            id,\n            name,\n            program_duration,\n            duration_unit,\n            days_per_week,\n            main_goal,\n            user_id\n          }\n        }\n      };\n    }\n\n    case 'DELETE_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!programId) {\n        console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n        return state;\n      }\n\n      const newPrograms = { ...state.programs };\n      delete newPrograms[programId];\n\n      return {\n        ...state,\n        programs: newPrograms\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}