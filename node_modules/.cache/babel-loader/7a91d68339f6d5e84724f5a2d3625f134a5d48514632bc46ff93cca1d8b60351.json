{"ast":null,"code":"import { initialState } from './initialState';\nfunction programReducer(state = initialState.programs, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      const newState = {\n        ...state,\n        selectedProgram: action.payload\n      };\n      return newState;\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id],\n          // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n      return updatedState;\n    case 'UPDATE_PROGRAM_WORKOUTS':\n      const {\n        programId,\n        workout\n      } = action.payload;\n      return {\n        ...state,\n        selectedProgram: {\n          ...state.selectedProgram,\n          workouts: [...state.selectedProgram.workouts, workout]\n        }\n      };\n    case 'UPDATE_PROGRAM':\n      {\n        const updatedProgram = action.payload;\n        return {\n          ...state,\n          selectedProgram: updatedProgram,\n          [updatedProgram.id]: updatedProgram\n        };\n      }\n    case 'UPDATE_PROGRAM_SUCCESS':\n      {\n        const updatedProgram = action.payload;\n        if (!updatedProgram || !updatedProgram.id) {\n          console.error('Invalid program data received:', updatedProgram);\n          return state;\n        }\n        const updatedState = {\n          ...state,\n          [updatedProgram.id]: updatedProgram,\n          selectedProgram: updatedProgram\n        };\n        return updatedState;\n      }\n    case 'UPDATE_PROGRAM_WORKOUT':\n      if (!state.selectedProgram) {\n        console.warn('No selected program found when updating workout');\n        return state;\n      }\n      return {\n        ...state,\n        selectedProgram: {\n          ...state.selectedProgram,\n          workouts: state.selectedProgram.workouts ? state.selectedProgram.workouts.map(workout => workout.id === action.payload.id ? action.payload : workout) : [action.payload]\n        }\n      };\n    case 'DELETE_PROGRAM':\n      {\n        const {\n          programId\n        } = action.payload;\n        if (!programId) {\n          console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n          return state;\n        }\n        const newPrograms = {\n          ...state.programs\n        };\n        delete newPrograms[programId];\n        const newState = {\n          ...state,\n          programs: newPrograms\n        };\n        return newState;\n      }\n    default:\n      return state;\n  }\n}\nexport { programReducer };","map":{"version":3,"names":["initialState","programReducer","state","programs","action","type","newState","selectedProgram","payload","id","name","program_duration","duration_unit","days_per_week","main_goal","console","error","updatedState","programId","workout","workouts","updatedProgram","warn","map","newPrograms"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["import { initialState } from './initialState';\n\nfunction programReducer(state = initialState.programs, action) {\n  switch (action.type) {\n    case 'SET_SELECTED_PROGRAM':\n      const newState = {\n        ...state,\n        selectedProgram: action.payload\n      };\n\n      return newState;\n\n    case 'ADD_PROGRAM':\n      const {\n        id,\n        name,\n        program_duration,\n        duration_unit,\n        days_per_week,\n        main_goal\n      } = action.payload;\n\n      if (!state[id]) {\n        console.error('Program not found:', id);\n        return state; // Return the current state if the program ID does not exist.\n      }\n\n      const updatedState = {\n        ...state,\n        [id]: {\n          ...state[id], // Spread the existing program details\n          name,\n          program_duration,\n          duration_unit,\n          days_per_week,\n          main_goal\n        }\n      };\n\n      return updatedState;\n\n    case 'UPDATE_PROGRAM_WORKOUTS':\n      const { programId, workout } = action.payload;\n      return {\n        ...state,\n        selectedProgram: {\n          ...state.selectedProgram,\n          workouts: [...state.selectedProgram.workouts, workout]\n        }\n      };\n\n    case 'UPDATE_PROGRAM': {\n      const updatedProgram = action.payload;\n\n      return {\n        ...state,\n        selectedProgram: updatedProgram,\n        [updatedProgram.id]: updatedProgram\n      };\n    }\n\n    case 'UPDATE_PROGRAM_SUCCESS': {\n      const updatedProgram = action.payload;\n\n      if (!updatedProgram || !updatedProgram.id) {\n        console.error('Invalid program data received:', updatedProgram);\n        return state;\n      }\n\n      const updatedState = {\n        ...state,\n        [updatedProgram.id]: updatedProgram,\n        selectedProgram: updatedProgram\n      };\n\n      return updatedState;\n    }\n\n    case 'UPDATE_PROGRAM_WORKOUT':\n      if (!state.selectedProgram) {\n        console.warn('No selected program found when updating workout');\n        return state;\n      }\n      return {\n        ...state,\n        selectedProgram: {\n          ...state.selectedProgram,\n          workouts: state.selectedProgram.workouts\n            ? state.selectedProgram.workouts.map(workout =>\n                workout.id === action.payload.id ? action.payload : workout\n              )\n            : [action.payload]\n        }\n      };\n\n    case 'DELETE_PROGRAM': {\n      const { programId } = action.payload;\n\n      if (!programId) {\n        console.error('Invalid payload for DELETE_PROGRAM', action.payload);\n        return state;\n      }\n\n      const newPrograms = { ...state.programs };\n      delete newPrograms[programId];\n\n      const newState = {\n        ...state,\n        programs: newPrograms\n      };\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}