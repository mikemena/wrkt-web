{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ProgramContext } from '../../../contexts/programContext';\nimport { WorkoutContainerProvider } from '../../../contexts/workoutContainerContext';\nimport WorkoutContainer from '../../../components/WorkoutContainer/WorkoutContainer';\nimport ProgramForm from '../../../components/Program/ProgramForm';\nimport ProgramButtonContainer from '../../../components/ProgramButtonContainer/ProgramButtonContainer';\nimport NavBar from '../../../components/Nav/Nav';\nimport ExerciseList from '../../../components/ExerciseList/ExerciseList';\n// import Toggle from '../../../components/Inputs/Toggle';\n\nimport './program.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateProgram = () => {\n  _s();\n  var _program$workouts$fin, _program$workouts$fin2;\n  // Use ProgramContext to manage the state of the program\n  const {\n    program,\n    saveProgram\n  } = useContext(ProgramContext);\n  const [showExerciseList, setShowExerciseList] = useState(false);\n  const [activeWorkout, setActiveWorkout] = useState(null);\n  const navigate = useNavigate();\n  const handleShowExercise = workoutId => {\n    if (workoutId === activeWorkout && showExerciseList) {\n      setShowExerciseList(false);\n      setActiveWorkout(null); // Optionally reset the active workout\n    } else {\n      // Show the exercise list for the clicked workout.\n      setShowExerciseList(true);\n      setActiveWorkout(workoutId);\n    }\n  };\n\n  // Save function uses context's save logic\n  const handleSaveProgram = async () => {\n    try {\n      await saveProgram();\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [' ', /*#__PURE__*/_jsxDEV(NavBar, {\n      isEditing: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-prog-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-prog-page__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-prog-page__left-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-prog-page__header\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"create-prog-page__title\",\n              children: \"Create New Program\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProgramForm, {\n            program: program,\n            isEditing: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WorkoutContainerProvider, {\n            children: program.workouts.map(workout => /*#__PURE__*/_jsxDEV(WorkoutContainer, {\n              workout: workout,\n              isActive: activeWorkout === workout.id,\n              showExercises: handleShowExercise,\n              showExerciseList: showExerciseList\n            }, workout.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-prog-page__right-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"create-prog-page__exercise-container-title\",\n            children: activeWorkout ? `Adding exercises for ${(_program$workouts$fin = program.workouts.find(workout => workout.id === activeWorkout)) === null || _program$workouts$fin === void 0 ? void 0 : _program$workouts$fin.name}` : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), showExerciseList && /*#__PURE__*/_jsxDEV(ExerciseList, {\n            activeWorkout: activeWorkout,\n            selectedExercises: ((_program$workouts$fin2 = program.workouts.find(workout => workout.id === activeWorkout)) === null || _program$workouts$fin2 === void 0 ? void 0 : _program$workouts$fin2.exercises) || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgramButtonContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProgram, \"muDfOX2OQUm8YraZ/hjhKP9he8g=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProgram;\nexport default CreateProgram;\nvar _c;\n$RefreshReg$(_c, \"CreateProgram\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","ProgramContext","WorkoutContainerProvider","WorkoutContainer","ProgramForm","ProgramButtonContainer","NavBar","ExerciseList","jsxDEV","_jsxDEV","CreateProgram","_s","_program$workouts$fin","_program$workouts$fin2","program","saveProgram","showExerciseList","setShowExerciseList","activeWorkout","setActiveWorkout","navigate","handleShowExercise","workoutId","handleSaveProgram","error","console","children","isEditing","fileName","_jsxFileName","lineNumber","columnNumber","className","workouts","map","workout","isActive","id","showExercises","find","name","selectedExercises","exercises","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/pages/programs/create/program.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ProgramContext } from '../../../contexts/programContext';\nimport { WorkoutContainerProvider } from '../../../contexts/workoutContainerContext';\nimport WorkoutContainer from '../../../components/WorkoutContainer/WorkoutContainer';\nimport ProgramForm from '../../../components/Program/ProgramForm';\nimport ProgramButtonContainer from '../../../components/ProgramButtonContainer/ProgramButtonContainer';\nimport NavBar from '../../../components/Nav/Nav';\nimport ExerciseList from '../../../components/ExerciseList/ExerciseList';\n// import Toggle from '../../../components/Inputs/Toggle';\n\nimport './program.css';\n\nconst CreateProgram = () => {\n  // Use ProgramContext to manage the state of the program\n  const { program, saveProgram } = useContext(ProgramContext);\n\n  const [showExerciseList, setShowExerciseList] = useState(false);\n  const [activeWorkout, setActiveWorkout] = useState(null);\n\n  const navigate = useNavigate();\n\n  const handleShowExercise = workoutId => {\n    if (workoutId === activeWorkout && showExerciseList) {\n      setShowExerciseList(false);\n      setActiveWorkout(null); // Optionally reset the active workout\n    } else {\n      // Show the exercise list for the clicked workout.\n      setShowExerciseList(true);\n      setActiveWorkout(workoutId);\n    }\n  };\n\n  // Save function uses context's save logic\n  const handleSaveProgram = async () => {\n    try {\n      await saveProgram();\n      navigate('/programs');\n    } catch (error) {\n      console.error('Failed to save the program:', error);\n    }\n  };\n\n  return (\n    <div>\n      {' '}\n      <NavBar isEditing='true' />\n      <div className='create-prog-page'>\n        <div className='toggle-container'>{/* <Toggle /> */}</div>\n        <div className='create-prog-page__container'>\n          <div className='create-prog-page__left-container'>\n            <div className='create-prog-page__header'>\n              <h1 className='create-prog-page__title'>Create New Program</h1>\n            </div>\n            <ProgramForm program={program} isEditing={true} />\n            <WorkoutContainerProvider>\n              {program.workouts.map(workout => (\n                <WorkoutContainer\n                  key={workout.id}\n                  workout={workout}\n                  isActive={activeWorkout === workout.id}\n                  showExercises={handleShowExercise}\n                  showExerciseList={showExerciseList}\n                />\n              ))}\n            </WorkoutContainerProvider>\n          </div>\n          <div className='create-prog-page__right-container'>\n            <h1 className='create-prog-page__exercise-container-title'>\n              {activeWorkout\n                ? `Adding exercises for ${\n                    program.workouts.find(\n                      workout => workout.id === activeWorkout\n                    )?.name\n                  }`\n                : ''}\n            </h1>\n            {showExerciseList && (\n              <ExerciseList\n                activeWorkout={activeWorkout}\n                selectedExercises={\n                  program.workouts.find(workout => workout.id === activeWorkout)\n                    ?.exercises || []\n                }\n              />\n            )}\n          </div>\n          <ProgramButtonContainer />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateProgram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}