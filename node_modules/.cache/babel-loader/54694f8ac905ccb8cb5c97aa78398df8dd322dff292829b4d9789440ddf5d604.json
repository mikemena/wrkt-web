{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/ExerciseFilters/ExerciseFilters.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Dropdown from '../Dropdown/Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EquipmentDropdown() {\n  _s();\n  const [equipments, setEquipments] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState('Any Equipment');\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    // Fetch equipment from the API\n    fetch('http://localhost:9025/api/equipments').then(response => response.json()).then(data => setEquipments(data)).catch(error => console.error('Failed to fetch equipments:', error));\n  }, []);\n  const toggleDropdown = () => setIsOpen(!isOpen);\n\n  // Make sure to pass only the names of the equipments to the Dropdown options\n  const equipmentOptions = equipments.map(equipment => equipment.equipment_name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      className: \"equipment-select-button\",\n      children: selectedEquipment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: equipments,\n      selectedOption: selectedEquipment,\n      onOptionSelect: setSelectedEquipment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(EquipmentDropdown, \"aEUwep72BlYhPLuVA7QTx5AoYyk=\");\n_c = EquipmentDropdown;\nexport default EquipmentDropdown;\nvar _c;\n$RefreshReg$(_c, \"EquipmentDropdown\");","map":{"version":3,"names":["React","useState","useEffect","Dropdown","jsxDEV","_jsxDEV","EquipmentDropdown","_s","equipments","setEquipments","selectedEquipment","setSelectedEquipment","isOpen","setIsOpen","fetch","then","response","json","data","catch","error","console","toggleDropdown","equipmentOptions","map","equipment","equipment_name","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","options","selectedOption","onOptionSelect","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/ExerciseFilters/ExerciseFilters.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Dropdown from '../Dropdown/Dropdown';\n\nfunction EquipmentDropdown() {\n  const [equipments, setEquipments] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState('Any Equipment');\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    // Fetch equipment from the API\n    fetch('http://localhost:9025/api/equipments')\n      .then(response => response.json())\n      .then(data => setEquipments(data))\n      .catch(error => console.error('Failed to fetch equipments:', error));\n  }, []);\n  const toggleDropdown = () => setIsOpen(!isOpen);\n\n  // Make sure to pass only the names of the equipments to the Dropdown options\n  const equipmentOptions = equipments.map(\n    equipment => equipment.equipment_name\n  );\n\n  return (\n    <div>\n      <button onClick={toggleDropdown} className='equipment-select-button'>\n        {selectedEquipment}\n      </button>\n      {isOpen && (\n        <Dropdown\n          options={equipments}\n          selectedOption={selectedEquipment}\n          onOptionSelect={setSelectedEquipment}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default EquipmentDropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,eAAe,CAAC;EAC3E,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd;IACAY,KAAK,CAAC,sCAAsC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,aAAa,CAACS,IAAI,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EACN,MAAME,cAAc,GAAGA,CAAA,KAAMT,SAAS,CAAC,CAACD,MAAM,CAAC;;EAE/C;EACA,MAAMW,gBAAgB,GAAGf,UAAU,CAACgB,GAAG,CACrCC,SAAS,IAAIA,SAAS,CAACC,cACzB,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAQuB,OAAO,EAAEN,cAAe;MAACO,SAAS,EAAC,yBAAyB;MAAAF,QAAA,EACjEjB;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,EACRrB,MAAM,iBACLP,OAAA,CAACF,QAAQ;MACP+B,OAAO,EAAE1B,UAAW;MACpB2B,cAAc,EAAEzB,iBAAkB;MAClC0B,cAAc,EAAEzB;IAAqB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAjCQD,iBAAiB;AAAA+B,EAAA,GAAjB/B,iBAAiB;AAmC1B,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}