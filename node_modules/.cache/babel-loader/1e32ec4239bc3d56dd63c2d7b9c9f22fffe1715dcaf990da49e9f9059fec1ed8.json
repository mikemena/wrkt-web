{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/WorkoutContainer/WorkoutContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect, useRef, createRef } from 'react';\nimport gsap from 'gsap';\nimport { TbLayoutNavbarExpandFilled, TbLayoutBottombarExpandFilled, TbPencil } from 'react-icons/tb';\nimport { IoCloseCircleSharp, IoCheckmarkCircleSharp } from 'react-icons/io5';\nimport { MdDelete, MdDragHandle, MdAddBox } from 'react-icons/md';\nimport Button from '../Inputs/Button';\nimport { WorkoutContainerContext } from '../../contexts/workoutContainerContext';\nimport { ProgramContext } from '../../contexts/programContext';\nimport { useTheme } from '../../contexts/themeContext';\nimport ExerciseSet from '../ExerciseSet/ExerciseSet';\nimport './WorkoutContainer.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WorkoutSlider = ({\n  activeWorkoutId,\n  onWorkoutChange,\n  showExercises,\n  showExerciseList\n}) => {\n  _s();\n  const {\n    expandedWorkoutId,\n    toggleExpand\n  } = useContext(WorkoutContainerContext);\n\n  // Log directly inside the component function\n  console.log('Active Workout ID:', activeWorkoutId);\n\n  //testing state changes\n  useEffect(() => {\n    console.log(`Updated expandedWorkoutId: ${expandedWorkoutId}`);\n  }, [expandedWorkoutId]);\n  const {\n    program,\n    deleteWorkout,\n    deleteExercise,\n    updateWorkout,\n    addSet\n  } = useContext(ProgramContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const isExpanded = expandedWorkoutId === activeWorkoutId;\n  const [workoutTitle, setWorkoutTitle] = useState('');\n  const {\n    theme\n  } = useTheme();\n  const workouts = program.workouts; // Get the workouts from the program\n\n  const handleEditTitleChange = e => {\n    setIsEditing(true);\n    setWorkoutTitle(e.target.value);\n  };\n  const handleSaveTitle = () => {\n    // Find the workout that matches the activeWorkoutId\n    const workoutToUpdate = workouts.find(workout => workout.id === activeWorkoutId);\n\n    // If the workout exists, update its name and call the updateWorkout function\n    if (workoutToUpdate) {\n      const updatedWorkout = {\n        ...workoutToUpdate,\n        name: workoutTitle\n      };\n      updateWorkout(updatedWorkout);\n    }\n\n    // Exit editing mode\n    setIsEditing(false);\n  };\n  const handleCloseTitleChange = e => {\n    setIsEditing(false);\n  };\n  const handleDeleteWorkout = workoutId => {\n    deleteWorkout(workoutId);\n  };\n  const handleDeleteExercise = (workoutId, exerciseId) => {\n    deleteExercise(workoutId, exerciseId);\n  };\n  const toggleWorkoutExpand = () => {\n    toggleExpand(activeWorkoutId);\n  };\n  const handleAddSet = (workoutId, exerciseId) => {\n    // Find the active workout and then the exercise\n    const activeWorkout = workouts.find(w => w.id === workoutId);\n    const exercise = activeWorkout === null || activeWorkout === void 0 ? void 0 : activeWorkout.exercises.find(e => e.id === exerciseId);\n\n    // Check if the exercise is found before accessing its sets\n    if (exercise && exercise.sets) {\n      const newSet = {\n        weight: '',\n        reps: '',\n        order: exercise.sets.length + 1\n        // Other default properties\n      };\n      addSet(workoutId, exerciseId, newSet);\n    }\n  };\n  // References to our DOM elements\n  const sliderRef = useRef(null);\n\n  // Initialize workoutRefs only if workouts is not undefined\n  const workoutRefs = useRef([]);\n  useEffect(() => {\n    workoutRefs.current = workoutRefs.current.slice(0, workouts.length);\n  }, [workouts]);\n  useEffect(() => {\n    // Find the index of the active workout\n    const activeIndex = workouts.findIndex(workout => workout.id === activeWorkoutId);\n\n    // GSAP initial setup to position all workouts side by side\n    gsap.set(workoutRefs.current, {\n      xPercent: idx => (idx - activeIndex) * 100\n    });\n\n    // Then, when activeWorkoutId changes, animate to the new active workout\n    gsap.to(workoutRefs.current, {\n      xPercent: idx => (idx - activeIndex) * 100,\n      ease: 'none',\n      duration: 0.5 // Adjust duration to your liking\n    });\n  }, [activeWorkoutId, workouts]);\n  const slideToWorkout = index => {\n    // You need to calculate the ID of the workout based on the index\n    const workoutIdAtIndex = workouts[index].id;\n    onWorkoutChange(workoutIdAtIndex); // This should set the activeWorkoutId in your state\n  };\n  const navigateToWorkout = direction => {\n    // Calculate the new index here and then call slideToWorkout\n    const activeIndex = workouts.findIndex(workout => workout.id === activeWorkoutId);\n    const nextIndex = (activeIndex + direction + workouts.length) % workouts.length;\n    slideToWorkout(nextIndex);\n  };\n  useEffect(() => {\n    // Initialize the refs array with the same length as the workouts array\n    workoutRefs.current = workouts.map((_, i) => workoutRefs.current[i] || /*#__PURE__*/createRef());\n  }, [workouts]); // Rerun this effect when workouts change\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `workout-slider ${theme}`,\n      ref: sliderRef,\n      children: workouts.map((workout, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `workout-container ${theme}`,\n        ref: workoutRefs.current[index],\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workout-container__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"workout-container__expand-btn\",\n                title: \"Expand/Collapse Workout\",\n                onClick: toggleWorkoutExpand,\n                children: isExpanded ? /*#__PURE__*/_jsxDEV(TbLayoutBottombarExpandFilled, {\n                  className: `workout-container__icon ${theme}`,\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(TbLayoutNavbarExpandFilled, {\n                  className: `workout-container__icon ${theme}`,\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout-container__title_container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"workout-container__save-title-btn\",\n                  onClick: handleSaveTitle,\n                  children: /*#__PURE__*/_jsxDEV(IoCheckmarkCircleSharp, {\n                    className: `workout-container__icon ${theme}`,\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: `workout-container__title-input ${theme}`,\n                  value: workoutTitle,\n                  onChange: handleEditTitleChange,\n                  placeholder: \"Change Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"workout-container__close-title-btn\",\n                  onClick: handleCloseTitleChange,\n                  children: /*#__PURE__*/_jsxDEV(IoCloseCircleSharp, {\n                    className: `workout-container__icon ${theme}`,\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout-container__title_container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"workout-container__edit-title-btn\",\n                  children: /*#__PURE__*/_jsxDEV(TbPencil, {\n                    className: `workout-container__icon ${theme}`,\n                    size: 20,\n                    onClick: handleEditTitleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: `workout-container__title ${theme}`,\n                  children: workout.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"workout-container__delete-btn\",\n                onClick: () => {\n                  const confirm = window.confirm(`Are you sure you want to remove ${workout.name}?`);\n                  if (confirm) {\n                    handleDeleteWorkout(workout.id);\n                  }\n                },\n                disabled: program.workouts.length <= 1,\n                children: /*#__PURE__*/_jsxDEV(MdDelete, {\n                  className: `workout-container__icon ${theme}`,\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workout-container__body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout-container__header\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"toggle-exercises-btn\",\n                  onClick: () => showExercises(workout.id),\n                  type: \"button\"\n                  // bgcolor='#EAEAEA'\n                  ,\n                  children: showExerciseList ? 'Hide Exercises' : 'Show Exercise'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout-container__exercises\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout-container__exercises-header-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: `workout-container__exercises_header ${theme}`,\n                    children: \"Exercise\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: `workout-container__exercises_header ${theme}`,\n                    children: \"Set\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: `workout-container__exercises_header ${theme}`,\n                    children: \"Weight\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: `workout-container__exercises_header ${theme}`,\n                    children: \"Reps\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), workout.exercises && workout.exercises.length > 0 ? workout.exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout-container__each-exercise\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `workout-container__drag-order-container ${theme}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `workout-container__exercise-order-number ${theme}`,\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 31\n                    }, this), ' ', /*#__PURE__*/_jsxDEV(MdDragHandle, {\n                      size: 25,\n                      className: \"workout-container__exercise-drag\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"workout-container__exercise-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: `workout-container__exercises_name ${theme}`,\n                      children: exercise.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: `workout-container__exercise-muscle ${theme}`,\n                      children: exercise.muscle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [exercise.sets && exercise.sets.length > 0 ? exercise.sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"workout-container__sets-column\",\n                      children: /*#__PURE__*/_jsxDEV(ExerciseSet, {\n                        id: set.id,\n                        setDetails: set,\n                        workoutId: workout.id,\n                        exerciseId: exercise.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 37\n                      }, this)\n                    }, set.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 35\n                    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"workout-container__no-exercise-message\",\n                      children: \"No sets added\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleAddSet(workout.id, exercise.id),\n                      className: \"workout-container__add-set-btn\",\n                      children: /*#__PURE__*/_jsxDEV(MdAddBox, {\n                        size: 25\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"workout-container__remove-exercise-btn\",\n                    id: `remove-exercise-btn-${exercise.id}`,\n                    type: \"button\",\n                    onClick: () => handleDeleteExercise(workout.id, exercise.id),\n                    children: /*#__PURE__*/_jsxDEV(MdDelete, {\n                      size: 30\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 29\n                  }, this)]\n                }, exercise.tempId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 27\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"workout-container__no-exercise-message\",\n                  children: \"No exercises added\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, workout.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigateToWorkout(-1),\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigateToWorkout(1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(WorkoutSlider, \"QjzXxxECBHoZv417ZYySoThJQ+E=\", false, function () {\n  return [useTheme];\n});\n_c = WorkoutSlider;\nexport default WorkoutSlider;\nvar _c;\n$RefreshReg$(_c, \"WorkoutSlider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useRef","createRef","gsap","TbLayoutNavbarExpandFilled","TbLayoutBottombarExpandFilled","TbPencil","IoCloseCircleSharp","IoCheckmarkCircleSharp","MdDelete","MdDragHandle","MdAddBox","Button","WorkoutContainerContext","ProgramContext","useTheme","ExerciseSet","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkoutSlider","activeWorkoutId","onWorkoutChange","showExercises","showExerciseList","_s","expandedWorkoutId","toggleExpand","console","log","program","deleteWorkout","deleteExercise","updateWorkout","addSet","isEditing","setIsEditing","isExpanded","workoutTitle","setWorkoutTitle","theme","workouts","handleEditTitleChange","e","target","value","handleSaveTitle","workoutToUpdate","find","workout","id","updatedWorkout","name","handleCloseTitleChange","handleDeleteWorkout","workoutId","handleDeleteExercise","exerciseId","toggleWorkoutExpand","handleAddSet","activeWorkout","w","exercise","exercises","sets","newSet","weight","reps","order","length","sliderRef","workoutRefs","current","slice","activeIndex","findIndex","set","xPercent","idx","to","ease","duration","slideToWorkout","index","workoutIdAtIndex","navigateToWorkout","direction","nextIndex","map","_","i","children","className","ref","title","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","confirm","window","disabled","muscle","setDetails","tempId","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/WorkoutContainer/WorkoutContainer.js"],"sourcesContent":["import React, {\n  useContext,\n  useState,\n  useEffect,\n  useRef,\n  createRef\n} from 'react';\nimport gsap from 'gsap';\nimport {\n  TbLayoutNavbarExpandFilled,\n  TbLayoutBottombarExpandFilled,\n  TbPencil\n} from 'react-icons/tb';\nimport { IoCloseCircleSharp, IoCheckmarkCircleSharp } from 'react-icons/io5';\nimport { MdDelete, MdDragHandle, MdAddBox } from 'react-icons/md';\nimport Button from '../Inputs/Button';\nimport { WorkoutContainerContext } from '../../contexts/workoutContainerContext';\nimport { ProgramContext } from '../../contexts/programContext';\nimport { useTheme } from '../../contexts/themeContext';\nimport ExerciseSet from '../ExerciseSet/ExerciseSet';\nimport './WorkoutContainer.css';\n\nconst WorkoutSlider = ({\n  activeWorkoutId,\n  onWorkoutChange,\n  showExercises,\n  showExerciseList\n}) => {\n  const { expandedWorkoutId, toggleExpand } = useContext(\n    WorkoutContainerContext\n  );\n\n  // Log directly inside the component function\n  console.log('Active Workout ID:', activeWorkoutId);\n\n  //testing state changes\n  useEffect(() => {\n    console.log(`Updated expandedWorkoutId: ${expandedWorkoutId}`);\n  }, [expandedWorkoutId]);\n\n  const { program, deleteWorkout, deleteExercise, updateWorkout, addSet } =\n    useContext(ProgramContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const isExpanded = expandedWorkoutId === activeWorkoutId;\n  const [workoutTitle, setWorkoutTitle] = useState('');\n  const { theme } = useTheme();\n\n  const workouts = program.workouts; // Get the workouts from the program\n\n  const handleEditTitleChange = e => {\n    setIsEditing(true);\n    setWorkoutTitle(e.target.value);\n  };\n\n  const handleSaveTitle = () => {\n    // Find the workout that matches the activeWorkoutId\n    const workoutToUpdate = workouts.find(\n      workout => workout.id === activeWorkoutId\n    );\n\n    // If the workout exists, update its name and call the updateWorkout function\n    if (workoutToUpdate) {\n      const updatedWorkout = { ...workoutToUpdate, name: workoutTitle };\n      updateWorkout(updatedWorkout);\n    }\n\n    // Exit editing mode\n    setIsEditing(false);\n  };\n\n  const handleCloseTitleChange = e => {\n    setIsEditing(false);\n  };\n\n  const handleDeleteWorkout = workoutId => {\n    deleteWorkout(workoutId);\n  };\n\n  const handleDeleteExercise = (workoutId, exerciseId) => {\n    deleteExercise(workoutId, exerciseId);\n  };\n\n  const toggleWorkoutExpand = () => {\n    toggleExpand(activeWorkoutId);\n  };\n\n  const handleAddSet = (workoutId, exerciseId) => {\n    // Find the active workout and then the exercise\n    const activeWorkout = workouts.find(w => w.id === workoutId);\n    const exercise = activeWorkout?.exercises.find(e => e.id === exerciseId);\n\n    // Check if the exercise is found before accessing its sets\n    if (exercise && exercise.sets) {\n      const newSet = {\n        weight: '',\n        reps: '',\n        order: exercise.sets.length + 1\n        // Other default properties\n      };\n      addSet(workoutId, exerciseId, newSet);\n    }\n  };\n  // References to our DOM elements\n  const sliderRef = useRef(null);\n\n  // Initialize workoutRefs only if workouts is not undefined\n  const workoutRefs = useRef([]);\n  useEffect(() => {\n    workoutRefs.current = workoutRefs.current.slice(0, workouts.length);\n  }, [workouts]);\n\n  useEffect(() => {\n    // Find the index of the active workout\n    const activeIndex = workouts.findIndex(\n      workout => workout.id === activeWorkoutId\n    );\n\n    // GSAP initial setup to position all workouts side by side\n    gsap.set(workoutRefs.current, {\n      xPercent: idx => (idx - activeIndex) * 100\n    });\n\n    // Then, when activeWorkoutId changes, animate to the new active workout\n    gsap.to(workoutRefs.current, {\n      xPercent: idx => (idx - activeIndex) * 100,\n      ease: 'none',\n      duration: 0.5 // Adjust duration to your liking\n    });\n  }, [activeWorkoutId, workouts]);\n\n  const slideToWorkout = index => {\n    // You need to calculate the ID of the workout based on the index\n    const workoutIdAtIndex = workouts[index].id;\n    onWorkoutChange(workoutIdAtIndex); // This should set the activeWorkoutId in your state\n  };\n\n  const navigateToWorkout = direction => {\n    // Calculate the new index here and then call slideToWorkout\n    const activeIndex = workouts.findIndex(\n      workout => workout.id === activeWorkoutId\n    );\n    const nextIndex =\n      (activeIndex + direction + workouts.length) % workouts.length;\n    slideToWorkout(nextIndex);\n  };\n  useEffect(() => {\n    // Initialize the refs array with the same length as the workouts array\n    workoutRefs.current = workouts.map(\n      (_, i) => workoutRefs.current[i] || createRef()\n    );\n  }, [workouts]); // Rerun this effect when workouts change\n\n  return (\n    <>\n      <div className={`workout-slider ${theme}`} ref={sliderRef}>\n        {workouts.map((workout, index) => (\n          <div\n            className={`workout-container ${theme}`}\n            ref={workoutRefs.current[index]}\n            key={workout.id}\n          >\n            <>\n              <div>\n                <div className='workout-container__header'>\n                  <button\n                    className='workout-container__expand-btn'\n                    title='Expand/Collapse Workout'\n                    onClick={toggleWorkoutExpand}\n                  >\n                    {isExpanded ? (\n                      <TbLayoutBottombarExpandFilled\n                        className={`workout-container__icon ${theme}`}\n                        size={20}\n                      />\n                    ) : (\n                      <TbLayoutNavbarExpandFilled\n                        className={`workout-container__icon ${theme}`}\n                        size={20}\n                      />\n                    )}\n                  </button>\n\n                  {isEditing ? (\n                    <div className='workout-container__title_container'>\n                      <button\n                        className='workout-container__save-title-btn'\n                        onClick={handleSaveTitle}\n                      >\n                        <IoCheckmarkCircleSharp\n                          className={`workout-container__icon ${theme}`}\n                          size={20}\n                        />\n                      </button>\n                      <input\n                        type='text'\n                        className={`workout-container__title-input ${theme}`}\n                        value={workoutTitle}\n                        onChange={handleEditTitleChange}\n                        placeholder='Change Title'\n                      />\n                      <button\n                        className='workout-container__close-title-btn'\n                        onClick={handleCloseTitleChange}\n                      >\n                        <IoCloseCircleSharp\n                          className={`workout-container__icon ${theme}`}\n                          size={20}\n                        />\n                      </button>\n                    </div>\n                  ) : (\n                    <div className='workout-container__title_container'>\n                      <button className='workout-container__edit-title-btn'>\n                        <TbPencil\n                          className={`workout-container__icon ${theme}`}\n                          size={20}\n                          onClick={handleEditTitleChange}\n                        />\n                      </button>\n                      <h2 className={`workout-container__title ${theme}`}>\n                        {workout.name}\n                      </h2>\n                    </div>\n                  )}\n\n                  <button\n                    className='workout-container__delete-btn'\n                    onClick={() => {\n                      const confirm = window.confirm(\n                        `Are you sure you want to remove ${workout.name}?`\n                      );\n                      if (confirm) {\n                        handleDeleteWorkout(workout.id);\n                      }\n                    }}\n                    disabled={program.workouts.length <= 1}\n                  >\n                    <MdDelete\n                      className={`workout-container__icon ${theme}`}\n                      size={20}\n                    />\n                  </button>\n                </div>\n                {isExpanded && (\n                  <div className='workout-container__body'>\n                    <div className='workout-container__header'>\n                      <Button\n                        id='toggle-exercises-btn'\n                        onClick={() => showExercises(workout.id)}\n                        type='button'\n                        // bgcolor='#EAEAEA'\n                      >\n                        {showExerciseList ? 'Hide Exercises' : 'Show Exercise'}\n                      </Button>\n                    </div>\n                    <div className='workout-container__exercises'>\n                      <div className='workout-container__exercises-header-container'>\n                        <h4\n                          className={`workout-container__exercises_header ${theme}`}\n                        >\n                          Exercise\n                        </h4>\n                        <h4\n                          className={`workout-container__exercises_header ${theme}`}\n                        >\n                          Set\n                        </h4>\n                        <h4\n                          className={`workout-container__exercises_header ${theme}`}\n                        >\n                          Weight\n                        </h4>\n                        <h4\n                          className={`workout-container__exercises_header ${theme}`}\n                        >\n                          Reps\n                        </h4>\n                      </div>\n                      {workout.exercises && workout.exercises.length > 0 ? (\n                        workout.exercises.map((exercise, index) => (\n                          <div\n                            key={exercise.tempId}\n                            className='workout-container__each-exercise'\n                          >\n                            <div\n                              className={`workout-container__drag-order-container ${theme}`}\n                            >\n                              <span\n                                className={`workout-container__exercise-order-number ${theme}`}\n                              >\n                                {index + 1}\n                              </span>{' '}\n                              <MdDragHandle\n                                size={25}\n                                className='workout-container__exercise-drag'\n                              />\n                            </div>\n                            <div className='workout-container__exercise-details'>\n                              <h4\n                                className={`workout-container__exercises_name ${theme}`}\n                              >\n                                {exercise.name}\n                              </h4>\n                              <p\n                                className={`workout-container__exercise-muscle ${theme}`}\n                              >\n                                {exercise.muscle}\n                              </p>\n                            </div>\n                            <div>\n                              {exercise.sets && exercise.sets.length > 0 ? (\n                                exercise.sets.map(set => (\n                                  <div\n                                    className='workout-container__sets-column'\n                                    key={set.id}\n                                  >\n                                    <ExerciseSet\n                                      id={set.id}\n                                      setDetails={set}\n                                      workoutId={workout.id}\n                                      exerciseId={exercise.id}\n                                    />\n                                  </div>\n                                ))\n                              ) : (\n                                <p className='workout-container__no-exercise-message'>\n                                  No sets added\n                                </p>\n                              )}\n\n                              <button\n                                onClick={() =>\n                                  handleAddSet(workout.id, exercise.id)\n                                }\n                                className='workout-container__add-set-btn'\n                              >\n                                <MdAddBox size={25} />\n                              </button>\n                            </div>\n\n                            <button\n                              className='workout-container__remove-exercise-btn'\n                              id={`remove-exercise-btn-${exercise.id}`}\n                              type='button'\n                              onClick={() =>\n                                handleDeleteExercise(workout.id, exercise.id)\n                              }\n                            >\n                              <MdDelete size={30} />\n                            </button>\n                          </div>\n                        ))\n                      ) : (\n                        <p className='workout-container__no-exercise-message'>\n                          No exercises added\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </>\n          </div>\n        ))}\n      </div>\n      <div className='controls'>\n        <button onClick={() => navigateToWorkout(-1)}>Prev</button>\n        <button onClick={() => navigateToWorkout(1)}>Next</button>\n      </div>\n    </>\n  );\n};\n\nexport default WorkoutSlider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}