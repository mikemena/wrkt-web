{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/Workout/Workout.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect, useMemo } from 'react';\nimport { TbPencil } from 'react-icons/tb';\nimport { BsChevronCompactUp, BsChevronCompactDown } from 'react-icons/bs';\nimport { IoCloseCircleSharp, IoCheckmarkCircleSharp } from 'react-icons/io5';\nimport { MdDragHandle, MdAddBox } from 'react-icons/md';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { RiDeleteBack2Fill } from 'react-icons/ri';\nimport { GrClose } from 'react-icons/gr';\nimport { TbHttpDelete } from 'react-icons/tb';\nimport TextInput from '../Inputs/TextInput';\nimport { ProgramContext } from '../../contexts/programContext';\nimport { useTheme } from '../../contexts/themeContext';\nimport { useNavigate } from 'react-router-dom';\nimport './Workout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Workout = ({\n  workout: initialWorkout,\n  isEditing,\n  isNewProgram,\n  programId,\n  isExpanded,\n  onToggleExpand\n}) => {\n  _s();\n  const {\n    state,\n    setActiveWorkout,\n    updateWorkoutField,\n    deleteWorkout,\n    updateExercise,\n    removeExercise,\n    updateWorkout,\n    addSet,\n    updateSet,\n    removeSet\n  } = useContext(ProgramContext);\n  const workouts = state.workout.workouts;\n  const activeWorkout = state.workout.activeWorkout;\n\n  // Get the most up-to-date workout data from the state\n  const workout = useMemo(() => {\n    return workouts.find(w => w.id === initialWorkout.id) || initialWorkout;\n  }, [workouts, initialWorkout]);\n  const [isEditingTitle, setIsEditingTitle] = useState(false);\n  const [workoutTitle, setWorkoutTitle] = useState(workout.name);\n  const [localExercises, setLocalExercises] = useState(workout.exercises);\n  const {\n    theme\n  } = useTheme();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (workout) {\n      setWorkoutTitle(workout.name);\n      const sortedExercises = [...workout.exercises].sort((a, b) => a.order - b.order);\n      setLocalExercises(sortedExercises);\n    }\n  }, [workout]);\n  const handleEditTitleChange = e => {\n    setIsEditingTitle(true);\n    setWorkoutTitle(e.target.value);\n  };\n  const handleSaveTitle = () => {\n    if (workout) {\n      const updatedWorkout = {\n        ...workout,\n        name: workoutTitle\n      };\n      updateWorkout(updatedWorkout, isNewProgram);\n    }\n    setIsEditingTitle(false);\n  };\n  const handleDeleteWorkout = workoutId => {\n    deleteWorkout(workoutId);\n  };\n  const handleDeleteExercise = (workoutId, exerciseId) => {\n    removeExercise(workoutId, exerciseId);\n  };\n  const handleWorkoutExpand = () => {\n    onToggleExpand(workout.id);\n  };\n  const handleAddSet = exercise => {\n    const exerciseId = exercise.id;\n    if (!workout || !workout.id) {\n      console.error('No active workout found.');\n      return;\n    }\n    addSet(workout.id, exerciseId);\n  };\n  const handleAddExercises = workoutId => {\n    setActiveWorkout(workoutId);\n    const selectedExercises = workout.exercises.map(exercise => ({\n      ...exercise,\n      catalog_exercise_id: exercise.catalog_exercise_id || exercise.id\n    }));\n    navigate('/select-exercises', {\n      state: {\n        workoutId,\n        selectedExercises,\n        isNewProgram,\n        programId: programId\n      }\n    });\n  };\n  const handleUpdateSetLocally = (updatedValue, exerciseId, setId) => {\n    setLocalExercises(prevExercises => prevExercises.map(exercise => exercise.catalog_exercise_id === exerciseId ? {\n      ...exercise,\n      sets: exercise.sets.map(set => set.id === setId ? {\n        ...set,\n        ...updatedValue\n      } : set)\n    } : exercise));\n  };\n  const handleUpdateSetOnBlur = (exerciseId, set) => {\n    updateSet(workout.id, exerciseId, set);\n    // Update context with the latest local exercise data\n    updateWorkout({\n      ...workout,\n      exercises: localExercises\n    });\n  };\n  const handleUpdateWorkoutTitleOnBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    updateWorkoutField(name, value);\n  };\n  const handleRemoveSet = (workoutId, exerciseId, setId) => {\n    if (isEditing) {\n      setLocalExercises(prevExercises => prevExercises.map(ex => ex.catalog_exercise_id === exerciseId ? {\n        ...ex,\n        sets: ex.sets.filter(s => s.id !== setId)\n      } : ex));\n\n      // Update the context state after local state change\n      const updatedExercises = localExercises.map(ex => ex.catalog_exercise_id === exerciseId ? {\n        ...ex,\n        sets: ex.sets.filter(s => s.id !== setId)\n      } : ex);\n      const updatedWorkout = {\n        ...workout,\n        exercises: updatedExercises\n      };\n      updateWorkout(updatedWorkout);\n    } else {\n      removeSet(workoutId, exerciseId, setId);\n    }\n  };\n  const workoutExercises = localExercises;\n  console.log('workoutExercises', workoutExercises);\n  const exerciseText = count => {\n    if (count === 0) return 'No Exercises';\n    if (count === 1) return '1 Exercise';\n    return `${count} Exercises`;\n  };\n  const exerciseCount = workoutExercises.length;\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    // Copy of the localExercises\n    const updatedExercises = Array.from(localExercises);\n\n    // Remove the moved item from source index and add it to the destination index\n    const [movedExercise] = updatedExercises.splice(source.index, 1);\n    updatedExercises.splice(destination.index, 0, movedExercise);\n\n    // Update the order property for each exercise based on their new position\n    const orderedExercises = updatedExercises.map((exercise, index) => ({\n      ...exercise,\n      order: index + 1 // Update the order property based on the new position\n    }));\n\n    // Update the local state to reflect changes\n    setLocalExercises(orderedExercises);\n\n    // Dispatch the update to the context\n    updateExercise(workout.id, orderedExercises);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `workout ${theme} ${activeWorkout === workout.id ? 'active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workout__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"workout__expand-btn\",\n        onClick: handleWorkoutExpand,\n        children: isExpanded ? /*#__PURE__*/_jsxDEV(BsChevronCompactUp, {\n          className: `workout__icon ${theme}`,\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(BsChevronCompactDown, {\n          className: `workout__icon ${theme}`,\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workout__title-container\",\n        children: [isEditingTitle ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: `workout__title-input ${theme}`,\n            type: \"text\",\n            value: workoutTitle,\n            onBlur: handleUpdateWorkoutTitleOnBlur,\n            onChange: handleEditTitleChange,\n            placeholder: \"Enter Workout Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IoCheckmarkCircleSharp, {\n            className: `workout__icon ${theme}`,\n            onClick: handleSaveTitle,\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IoCloseCircleSharp, {\n            className: `workout__icon ${theme}`,\n            onClick: () => setIsEditingTitle(false),\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `workout__title ${theme}`,\n          children: workoutTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), isExpanded && !isEditingTitle && /*#__PURE__*/_jsxDEV(TbPencil, {\n          className: `workout__icon pencil-icon ${theme}`,\n          onClick: () => setIsEditingTitle(true),\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"workout__delete-btn\",\n          onClick: () => handleDeleteWorkout(workout.id),\n          children: /*#__PURE__*/_jsxDEV(GrClose, {\n            className: `workout__icon ${theme}`,\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workout__subtitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `workout__exercise-count ${theme}`,\n        children: exerciseText(exerciseCount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddExercises(workout.id),\n        className: \"workout__add-exercise-btn\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: `workout-${workout.id}`,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workout__exercises\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"workout__exercises-header-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: `workout__exercises_header ${theme}`,\n              children: \"Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: `workout__exercises_header ${theme}`,\n              children: \"Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: `workout__exercises_header ${theme}`,\n              children: \"Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: `workout__exercises_header ${theme}`,\n              children: \"Reps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), workoutExercises.length > 0 ? workoutExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: `exercise-${exercise.id || index}`,\n            index: index,\n            children: provided => {\n              var _exercise$sets, _exercise$sets2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout__each-exercise\",\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout__exercise-column\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"workout__exercise-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `workout__drag-order-container ${theme}`,\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `workout__exercise-order-number ${theme}`,\n                        children: exercise.order\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 321,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"workout__exercise-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: `workout__exercises_name ${theme}`,\n                        children: exercise.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: `workout__exercise-muscle ${theme}`,\n                        children: exercise.muscle\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout__sets-column\",\n                  children: [exercise.sets && exercise.sets.length > 0 && exercise.sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"workout__set\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: `workout__set-order-number ${theme}`,\n                      children: set.order\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 35\n                    }, this)\n                  }, set.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 33\n                  }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleAddSet(exercise),\n                    className: \"workout__add-set-btn\",\n                    children: /*#__PURE__*/_jsxDEV(MdAddBox, {\n                      size: 25\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout__weights-column\",\n                  children: [exercise.sets && exercise.sets.length > 0 ? exercise.sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"workout__set\",\n                    children: /*#__PURE__*/_jsxDEV(TextInput, {\n                      className: `workout__set-weight ${theme}`,\n                      id: \"set-weight\",\n                      onChange: e => handleUpdateSetLocally({\n                        weight: e.target.value\n                      }, exercise.catalog_exercise_id, set.id),\n                      onBlur: () => handleUpdateSetOnBlur(exercise.catalog_exercise_id, set),\n                      value: set.weight,\n                      type: \"number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 37\n                    }, this)\n                  }, set.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 35\n                  }, this)) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"workout__blank\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout__reps-column\",\n                  children: [exercise === null || exercise === void 0 ? void 0 : (_exercise$sets = exercise.sets) === null || _exercise$sets === void 0 ? void 0 : _exercise$sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"workout__set\",\n                    children: /*#__PURE__*/_jsxDEV(TextInput, {\n                      className: `workout__set-reps ${theme}`,\n                      onChange: e => handleUpdateSetLocally({\n                        reps: e.target.value\n                      }, exercise.catalog_exercise_id, set.id),\n                      onBlur: () => handleUpdateSetOnBlur(exercise.catalog_exercise_id, set),\n                      value: set.reps,\n                      type: \"number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 33\n                    }, this)\n                  }, set.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 31\n                  }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"workout__blank\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout__delete-set-column\",\n                  children: [exercise === null || exercise === void 0 ? void 0 : (_exercise$sets2 = exercise.sets) === null || _exercise$sets2 === void 0 ? void 0 : _exercise$sets2.map((set, setIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"workout__set\",\n                    children: setIndex > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleRemoveSet(workout.id, exercise.catalog_exercise_id, set.id),\n                      className: \"workout__delete-set-btn\",\n                      children: /*#__PURE__*/_jsxDEV(RiDeleteBack2Fill, {\n                        size: 25\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 429,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 35\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"workout__set\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"workout__no-delete-set-btn\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 433,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 35\n                    }, this)\n                  }, set.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 31\n                  }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"workout__blank\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout__exercise-controls\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `workout__drag-handle ${theme}`,\n                    children: /*#__PURE__*/_jsxDEV(MdDragHandle, {\n                      size: 25\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"workout__remove-exercise-btn\",\n                    onClick: () => handleDeleteExercise(workout.id, exercise.id),\n                    children: /*#__PURE__*/_jsxDEV(TbHttpDelete, {\n                      size: 30\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 25\n              }, this);\n            }\n          }, exercise.id || index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"workout__no-exercise-message\",\n            children: \"No exercises added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 19\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(Workout, \"vKjFZj7no2/cQTeYsE7K/O3hYbc=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c = Workout;\nexport default Workout;\nvar _c;\n$RefreshReg$(_c, \"Workout\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useMemo","TbPencil","BsChevronCompactUp","BsChevronCompactDown","IoCloseCircleSharp","IoCheckmarkCircleSharp","MdDragHandle","MdAddBox","DragDropContext","Droppable","Draggable","RiDeleteBack2Fill","GrClose","TbHttpDelete","TextInput","ProgramContext","useTheme","useNavigate","jsxDEV","_jsxDEV","Workout","workout","initialWorkout","isEditing","isNewProgram","programId","isExpanded","onToggleExpand","_s","state","setActiveWorkout","updateWorkoutField","deleteWorkout","updateExercise","removeExercise","updateWorkout","addSet","updateSet","removeSet","workouts","activeWorkout","find","w","id","isEditingTitle","setIsEditingTitle","workoutTitle","setWorkoutTitle","name","localExercises","setLocalExercises","exercises","theme","navigate","sortedExercises","sort","a","b","order","handleEditTitleChange","e","target","value","handleSaveTitle","updatedWorkout","handleDeleteWorkout","workoutId","handleDeleteExercise","exerciseId","handleWorkoutExpand","handleAddSet","exercise","console","error","handleAddExercises","selectedExercises","map","catalog_exercise_id","handleUpdateSetLocally","updatedValue","setId","prevExercises","sets","set","handleUpdateSetOnBlur","handleUpdateWorkoutTitleOnBlur","handleRemoveSet","ex","filter","s","updatedExercises","workoutExercises","log","exerciseText","count","exerciseCount","length","handleDragEnd","result","destination","source","Array","from","movedExercise","splice","index","orderedExercises","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","type","onBlur","onChange","placeholder","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","draggableId","_exercise$sets","_exercise$sets2","draggableProps","dragHandleProps","muscle","weight","reps","setIndex","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/components/Workout/Workout.js"],"sourcesContent":["import React, { useContext, useState, useEffect, useMemo } from 'react';\nimport { TbPencil } from 'react-icons/tb';\nimport { BsChevronCompactUp, BsChevronCompactDown } from 'react-icons/bs';\nimport { IoCloseCircleSharp, IoCheckmarkCircleSharp } from 'react-icons/io5';\nimport { MdDragHandle, MdAddBox } from 'react-icons/md';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { RiDeleteBack2Fill } from 'react-icons/ri';\nimport { GrClose } from 'react-icons/gr';\nimport { TbHttpDelete } from 'react-icons/tb';\nimport TextInput from '../Inputs/TextInput';\nimport { ProgramContext } from '../../contexts/programContext';\nimport { useTheme } from '../../contexts/themeContext';\nimport { useNavigate } from 'react-router-dom';\nimport './Workout.css';\n\nconst Workout = ({\n  workout: initialWorkout,\n  isEditing,\n  isNewProgram,\n  programId,\n  isExpanded,\n  onToggleExpand\n}) => {\n  const {\n    state,\n    setActiveWorkout,\n    updateWorkoutField,\n    deleteWorkout,\n    updateExercise,\n    removeExercise,\n    updateWorkout,\n    addSet,\n    updateSet,\n    removeSet\n  } = useContext(ProgramContext);\n\n  const workouts = state.workout.workouts;\n  const activeWorkout = state.workout.activeWorkout;\n\n  // Get the most up-to-date workout data from the state\n  const workout = useMemo(() => {\n    return workouts.find(w => w.id === initialWorkout.id) || initialWorkout;\n  }, [workouts, initialWorkout]);\n\n  const [isEditingTitle, setIsEditingTitle] = useState(false);\n  const [workoutTitle, setWorkoutTitle] = useState(workout.name);\n  const [localExercises, setLocalExercises] = useState(workout.exercises);\n  const { theme } = useTheme();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (workout) {\n      setWorkoutTitle(workout.name);\n      const sortedExercises = [...workout.exercises].sort(\n        (a, b) => a.order - b.order\n      );\n\n      setLocalExercises(sortedExercises);\n    }\n  }, [workout]);\n\n  const handleEditTitleChange = e => {\n    setIsEditingTitle(true);\n    setWorkoutTitle(e.target.value);\n  };\n\n  const handleSaveTitle = () => {\n    if (workout) {\n      const updatedWorkout = { ...workout, name: workoutTitle };\n      updateWorkout(updatedWorkout, isNewProgram);\n    }\n    setIsEditingTitle(false);\n  };\n\n  const handleDeleteWorkout = workoutId => {\n    deleteWorkout(workoutId);\n  };\n\n  const handleDeleteExercise = (workoutId, exerciseId) => {\n    removeExercise(workoutId, exerciseId);\n  };\n\n  const handleWorkoutExpand = () => {\n    onToggleExpand(workout.id);\n  };\n\n  const handleAddSet = exercise => {\n    const exerciseId = exercise.id;\n\n    if (!workout || !workout.id) {\n      console.error('No active workout found.');\n      return;\n    }\n\n    addSet(workout.id, exerciseId);\n  };\n\n  const handleAddExercises = workoutId => {\n    setActiveWorkout(workoutId);\n\n    const selectedExercises = workout.exercises.map(exercise => ({\n      ...exercise,\n      catalog_exercise_id: exercise.catalog_exercise_id || exercise.id\n    }));\n\n    navigate('/select-exercises', {\n      state: {\n        workoutId,\n        selectedExercises,\n        isNewProgram,\n        programId: programId\n      }\n    });\n  };\n\n  const handleUpdateSetLocally = (updatedValue, exerciseId, setId) => {\n    setLocalExercises(prevExercises =>\n      prevExercises.map(exercise =>\n        exercise.catalog_exercise_id === exerciseId\n          ? {\n              ...exercise,\n              sets: exercise.sets.map(set =>\n                set.id === setId ? { ...set, ...updatedValue } : set\n              )\n            }\n          : exercise\n      )\n    );\n  };\n\n  const handleUpdateSetOnBlur = (exerciseId, set) => {\n    updateSet(workout.id, exerciseId, set);\n    // Update context with the latest local exercise data\n    updateWorkout({ ...workout, exercises: localExercises });\n  };\n\n  const handleUpdateWorkoutTitleOnBlur = e => {\n    const { name, value } = e.target;\n    updateWorkoutField(name, value);\n  };\n\n  const handleRemoveSet = (workoutId, exerciseId, setId) => {\n    if (isEditing) {\n      setLocalExercises(prevExercises =>\n        prevExercises.map(ex =>\n          ex.catalog_exercise_id === exerciseId\n            ? {\n                ...ex,\n                sets: ex.sets.filter(s => s.id !== setId)\n              }\n            : ex\n        )\n      );\n\n      // Update the context state after local state change\n      const updatedExercises = localExercises.map(ex =>\n        ex.catalog_exercise_id === exerciseId\n          ? {\n              ...ex,\n              sets: ex.sets.filter(s => s.id !== setId)\n            }\n          : ex\n      );\n\n      const updatedWorkout = {\n        ...workout,\n        exercises: updatedExercises\n      };\n\n      updateWorkout(updatedWorkout);\n    } else {\n      removeSet(workoutId, exerciseId, setId);\n    }\n  };\n\n  const workoutExercises = localExercises;\n  console.log('workoutExercises', workoutExercises);\n\n  const exerciseText = count => {\n    if (count === 0) return 'No Exercises';\n    if (count === 1) return '1 Exercise';\n    return `${count} Exercises`;\n  };\n\n  const exerciseCount = workoutExercises.length;\n\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n\n    const { source, destination } = result;\n\n    // Copy of the localExercises\n    const updatedExercises = Array.from(localExercises);\n\n    // Remove the moved item from source index and add it to the destination index\n    const [movedExercise] = updatedExercises.splice(source.index, 1);\n    updatedExercises.splice(destination.index, 0, movedExercise);\n\n    // Update the order property for each exercise based on their new position\n    const orderedExercises = updatedExercises.map((exercise, index) => ({\n      ...exercise,\n      order: index + 1 // Update the order property based on the new position\n    }));\n\n    // Update the local state to reflect changes\n    setLocalExercises(orderedExercises);\n\n    // Dispatch the update to the context\n    updateExercise(workout.id, orderedExercises);\n  };\n\n  return (\n    <div\n      className={`workout ${theme} ${\n        activeWorkout === workout.id ? 'active' : ''\n      }`}\n    >\n      <div className='workout__header'>\n        <button className='workout__expand-btn' onClick={handleWorkoutExpand}>\n          {isExpanded ? (\n            <BsChevronCompactUp\n              className={`workout__icon ${theme}`}\n              size={30}\n            />\n          ) : (\n            <BsChevronCompactDown\n              className={`workout__icon ${theme}`}\n              size={30}\n            />\n          )}\n        </button>\n        <div className='workout__title-container'>\n          {isEditingTitle ? (\n            <div>\n              <input\n                className={`workout__title-input ${theme}`}\n                type='text'\n                value={workoutTitle}\n                onBlur={handleUpdateWorkoutTitleOnBlur}\n                onChange={handleEditTitleChange}\n                placeholder='Enter Workout Title'\n              />\n              <IoCheckmarkCircleSharp\n                className={`workout__icon ${theme}`}\n                onClick={handleSaveTitle}\n                size={25}\n              />\n              <IoCloseCircleSharp\n                className={`workout__icon ${theme}`}\n                onClick={() => setIsEditingTitle(false)}\n                size={25}\n              />\n            </div>\n          ) : (\n            <h2 className={`workout__title ${theme}`}>{workoutTitle}</h2>\n          )}\n          {isExpanded && !isEditingTitle && (\n            <TbPencil\n              className={`workout__icon pencil-icon ${theme}`}\n              onClick={() => setIsEditingTitle(true)}\n              size={25}\n            />\n          )}\n          <button\n            className='workout__delete-btn'\n            onClick={() => handleDeleteWorkout(workout.id)}\n          >\n            <GrClose className={`workout__icon ${theme}`} size={20} />\n          </button>\n        </div>\n      </div>\n      <div className='workout__subtitle'>\n        <span className={`workout__exercise-count ${theme}`}>\n          {exerciseText(exerciseCount)}\n        </span>\n        <button\n          onClick={() => handleAddExercises(workout.id)}\n          className='workout__add-exercise-btn'\n        >\n          Add\n        </button>\n      </div>\n      {isExpanded && (\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Droppable droppableId={`workout-${workout.id}`}>\n            {provided => (\n              <div\n                className='workout__exercises'\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                <div className='workout__exercises-header-container'>\n                  <h4 className={`workout__exercises_header ${theme}`}>\n                    Exercise\n                  </h4>\n                  <h4 className={`workout__exercises_header ${theme}`}>Set</h4>\n                  <h4 className={`workout__exercises_header ${theme}`}>\n                    Weight\n                  </h4>\n                  <h4 className={`workout__exercises_header ${theme}`}>Reps</h4>\n                </div>\n                {workoutExercises.length > 0 ? (\n                  workoutExercises.map((exercise, index) => (\n                    <Draggable\n                      key={exercise.id || index}\n                      draggableId={`exercise-${exercise.id || index}`}\n                      index={index}\n                    >\n                      {provided => (\n                        <div\n                          className='workout__each-exercise'\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <div className='workout__exercise-column'>\n                            <div className='workout__exercise-info'>\n                              <div\n                                className={`workout__drag-order-container ${theme}`}\n                              >\n                                <span\n                                  className={`workout__exercise-order-number ${theme}`}\n                                >\n                                  {exercise.order}\n                                </span>\n                              </div>\n                              <div className='workout__exercise-details'>\n                                <h4\n                                  className={`workout__exercises_name ${theme}`}\n                                >\n                                  {exercise.name}\n                                </h4>\n                                <h5\n                                  className={`workout__exercise-muscle ${theme}`}\n                                >\n                                  {exercise.muscle}\n                                </h5>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='workout__sets-column'>\n                            {exercise.sets &&\n                              exercise.sets.length > 0 &&\n                              exercise.sets.map(set => (\n                                <div key={set.id} className='workout__set'>\n                                  <p\n                                    className={`workout__set-order-number ${theme}`}\n                                  >\n                                    {set.order}\n                                  </p>\n                                </div>\n                              ))}\n                            <button\n                              onClick={() => handleAddSet(exercise)}\n                              className='workout__add-set-btn'\n                            >\n                              <MdAddBox size={25} />\n                            </button>\n                          </div>\n\n                          <div className='workout__weights-column'>\n                            {exercise.sets && exercise.sets.length > 0\n                              ? exercise.sets.map(set => (\n                                  <div key={set.id} className='workout__set'>\n                                    <TextInput\n                                      className={`workout__set-weight ${theme}`}\n                                      id='set-weight'\n                                      onChange={e =>\n                                        handleUpdateSetLocally(\n                                          { weight: e.target.value },\n                                          exercise.catalog_exercise_id,\n                                          set.id\n                                        )\n                                      }\n                                      onBlur={() =>\n                                        handleUpdateSetOnBlur(\n                                          exercise.catalog_exercise_id,\n                                          set\n                                        )\n                                      }\n                                      value={set.weight}\n                                      type='number'\n                                    />\n                                  </div>\n                                ))\n                              : null}\n                            <div className='workout__blank'></div>\n                          </div>\n\n                          <div className='workout__reps-column'>\n                            {exercise?.sets?.map(set => (\n                              <div key={set.id} className='workout__set'>\n                                <TextInput\n                                  className={`workout__set-reps ${theme}`}\n                                  onChange={e =>\n                                    handleUpdateSetLocally(\n                                      { reps: e.target.value },\n                                      exercise.catalog_exercise_id,\n                                      set.id\n                                    )\n                                  }\n                                  onBlur={() =>\n                                    handleUpdateSetOnBlur(\n                                      exercise.catalog_exercise_id,\n                                      set\n                                    )\n                                  }\n                                  value={set.reps}\n                                  type='number'\n                                />\n                              </div>\n                            ))}\n                            <div className='workout__blank'></div>\n                          </div>\n                          <div className='workout__delete-set-column'>\n                            {exercise?.sets?.map((set, setIndex) => (\n                              <div key={set.id} className='workout__set'>\n                                {setIndex > 0 ? (\n                                  <button\n                                    onClick={() =>\n                                      handleRemoveSet(\n                                        workout.id,\n                                        exercise.catalog_exercise_id,\n                                        set.id\n                                      )\n                                    }\n                                    className='workout__delete-set-btn'\n                                  >\n                                    <RiDeleteBack2Fill size={25} />\n                                  </button>\n                                ) : (\n                                  <div className='workout__set'>\n                                    <div className='workout__no-delete-set-btn' />\n                                  </div>\n                                )}\n                              </div>\n                            ))}\n                            <div className='workout__blank'></div>\n                          </div>\n\n                          <div className='workout__exercise-controls'>\n                            <div className={`workout__drag-handle ${theme}`}>\n                              <MdDragHandle size={25} />\n                            </div>\n                            <button\n                              className='workout__remove-exercise-btn'\n                              onClick={() =>\n                                handleDeleteExercise(workout.id, exercise.id)\n                              }\n                            >\n                              <TbHttpDelete size={30} />\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))\n                ) : (\n                  <p className='workout__no-exercise-message'>\n                    No exercises added\n                  </p>\n                )}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      )}\n    </div>\n  );\n};\n\nexport default Workout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}