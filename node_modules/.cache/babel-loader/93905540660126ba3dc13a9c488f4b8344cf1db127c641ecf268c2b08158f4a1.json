{"ast":null,"code":"import { initialState } from './initialState';\nimport { v4 as uuidv4 } from 'uuid';\nfunction programReducer(state = initialState, action) {\n  switch (action.type) {\n    //For updating basic program information like name, duration, etc.\n    case 'UPDATE_PROGRAM_DETAILS':\n      return {\n        ...state,\n        program: {\n          ...state.program,\n          ...action.payload\n        }\n      };\n    case 'ADD_WORKOUT':\n      console.log('Current state:', state);\n      console.log('Action:', action);\n      console.log('ADD_WORKOUT called from workoutReducer.js');\n      // Find the highest index used in existing workout names\n      const maxIndex = state.workouts.reduce((max, workout) => {\n        const match = workout.name.match(/Workout (\\d+)/); // Assuming the format \"Workout 1\", \"Workout 2\", etc.\n        const index = match ? parseInt(match[1], 10) : 0;\n        return Math.max(max, index);\n      }, 0);\n\n      // Create a new workout with an incremented title index or use the provided name\n      const workoutTitle = action.payload.name || `Workout ${maxIndex + 1}`;\n      const newWorkout = {\n        id: uuidv4(),\n        name: workoutTitle,\n        exercises: [],\n        active: false\n      };\n      const newWorkouts = [...state.workouts, newWorkout];\n      const newProgram = {\n        ...state.program,\n        workouts: newWorkouts\n      };\n      return {\n        ...state,\n        workouts: [...state.workouts, newWorkout],\n        activeWorkout: newWorkout,\n        program: newProgram\n      };\n\n    //Changes to a workout that might involve renaming or perhaps changing other properties.\n    case 'UPDATE_WORKOUT':\n      return {\n        ...state,\n        workouts: state.workouts.map(workout => workout.id === action.payload.id ? action.payload : workout)\n      };\n    case 'DELETE_WORKOUT':\n      const workoutIndex = state.workouts.findIndex(workout => workout.id === action.payload);\n\n      // Prevent deleting if only one workout exists\n      if (state.workouts.length <= 1) {\n        return state;\n      }\n      const updatedWorkouts = state.workouts.filter(workout => workout.id !== action.payload);\n\n      // Determine the new active workout if necessary\n      let newActiveWorkout = null;\n      if (state.activeWorkout && state.activeWorkout.id === action.payload) {\n        if (workoutIndex === state.workouts.length - 1) {\n          // If it was the last workout, set the previous one as active\n          newActiveWorkout = updatedWorkouts[workoutIndex - 1];\n        } else {\n          // Otherwise, set the next workout as active (or previous if it was the last)\n          newActiveWorkout = updatedWorkouts[Math.max(0, workoutIndex)];\n        }\n      } else {\n        newActiveWorkout = state.activeWorkout;\n      }\n      return {\n        ...state,\n        workouts: updatedWorkouts,\n        activeWorkout: newActiveWorkout\n      };\n    default:\n      return state;\n  }\n}\nexport { programReducer, initialState };","map":{"version":3,"names":["initialState","v4","uuidv4","programReducer","state","action","type","program","payload","console","log","maxIndex","workouts","reduce","max","workout","match","name","index","parseInt","Math","workoutTitle","newWorkout","id","exercises","active","newWorkouts","newProgram","activeWorkout","map","workoutIndex","findIndex","length","updatedWorkouts","filter","newActiveWorkout"],"sources":["/Users/mike/Documents/purple.nosync/pow/web-frontend/src/reducers/programReducer.js"],"sourcesContent":["import { initialState } from './initialState';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction programReducer(state = initialState, action) {\n  switch (action.type) {\n    //For updating basic program information like name, duration, etc.\n    case 'UPDATE_PROGRAM_DETAILS':\n      return {\n        ...state,\n        program: { ...state.program, ...action.payload }\n      };\n    case 'ADD_WORKOUT':\n      console.log('Current state:', state);\n      console.log('Action:', action);\n      console.log('ADD_WORKOUT called from workoutReducer.js');\n      // Find the highest index used in existing workout names\n      const maxIndex = state.workouts.reduce((max, workout) => {\n        const match = workout.name.match(/Workout (\\d+)/); // Assuming the format \"Workout 1\", \"Workout 2\", etc.\n        const index = match ? parseInt(match[1], 10) : 0;\n        return Math.max(max, index);\n      }, 0);\n\n      // Create a new workout with an incremented title index or use the provided name\n      const workoutTitle = action.payload.name || `Workout ${maxIndex + 1}`;\n\n      const newWorkout = {\n        id: uuidv4(),\n        name: workoutTitle,\n        exercises: [],\n        active: false\n      };\n\n      const newWorkouts = [...state.workouts, newWorkout];\n      const newProgram = { ...state.program, workouts: newWorkouts };\n\n      return {\n        ...state,\n        workouts: [...state.workouts, newWorkout],\n        activeWorkout: newWorkout,\n        program: newProgram\n      };\n\n    //Changes to a workout that might involve renaming or perhaps changing other properties.\n    case 'UPDATE_WORKOUT':\n      return {\n        ...state,\n        workouts: state.workouts.map(workout =>\n          workout.id === action.payload.id ? action.payload : workout\n        )\n      };\n\n    case 'DELETE_WORKOUT':\n      const workoutIndex = state.workouts.findIndex(\n        workout => workout.id === action.payload\n      );\n\n      // Prevent deleting if only one workout exists\n      if (state.workouts.length <= 1) {\n        return state;\n      }\n\n      const updatedWorkouts = state.workouts.filter(\n        workout => workout.id !== action.payload\n      );\n\n      // Determine the new active workout if necessary\n      let newActiveWorkout = null;\n      if (state.activeWorkout && state.activeWorkout.id === action.payload) {\n        if (workoutIndex === state.workouts.length - 1) {\n          // If it was the last workout, set the previous one as active\n          newActiveWorkout = updatedWorkouts[workoutIndex - 1];\n        } else {\n          // Otherwise, set the next workout as active (or previous if it was the last)\n          newActiveWorkout = updatedWorkouts[Math.max(0, workoutIndex)];\n        }\n      } else {\n        newActiveWorkout = state.activeWorkout;\n      }\n\n      return {\n        ...state,\n        workouts: updatedWorkouts,\n        activeWorkout: newActiveWorkout\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { programReducer, initialState };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}